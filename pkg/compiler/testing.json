{
"":"Copyright (c) 2017, the Dart project authors. Please see the AUTHORS file",
"":"for details. All rights reserved. Use of this source code is governed by a",
"":"BSD-style license that can be found in the LICENSE.md file.",

  "packages": "../../.packages",

  "analyze": {
    "options": "analysis_options.yaml",

    "uris": [
      ".",
      "../../tests/compiler/dart2js/"
    ],

    "exclude": [
      "$ This file is input and has errors:",
      "^tests/compiler/dart2js/data/one_line_dart_program\\.dart",

      "^tests/compiler/dart2js/analyze_api_test\\.dart",
      "^tests/compiler/dart2js/analyze_dart2js_test\\.dart",
      "^tests/compiler/dart2js/analyze_test_test\\.dart",
      "^tests/compiler/dart2js/analyze_unused_dart2js_test\\.dart",
      "^tests/compiler/dart2js/class_set_test\\.dart",
      "^tests/compiler/dart2js/constant_expression_test\\.dart",
      "^tests/compiler/dart2js/data/mirrors_helper\\.dart",
      "^tests/compiler/dart2js/deferred_dont_inline_deferred_constants_test\\.dart",
      "^tests/compiler/dart2js/deferred_follow_constant_dependencies_test\\.dart",
      "^tests/compiler/dart2js/deferred_follow_implicit_super_regression_test\\.dart",
      "^tests/compiler/dart2js/deferred_load_graph_segmentation_test\\.dart",
      "^tests/compiler/dart2js/deferred_mirrors_test\\.dart",
      "^tests/compiler/dart2js/deferred_not_in_main_test\\.dart",
      "^tests/compiler/dart2js/embedded_category_api_boundary_test\\.dart",
      "^tests/compiler/dart2js/gvn_dynamic_field_get_test\\.dart",
      "^tests/compiler/dart2js/kernel/closed_world_test\\.dart",
      "^tests/compiler/dart2js/members_test\\.dart",
      "^tests/compiler/dart2js/metadata_test\\.dart",
      "^tests/compiler/dart2js/mirror_private_name_inheritance_test\\.dart",
      "^tests/compiler/dart2js/mixin_typevariable_test\\.dart",
      "^tests/compiler/dart2js/quarantined/http_test\\.dart",
      "^tests/compiler/dart2js/resolver_test\\.dart",
      "^tests/compiler/dart2js/serialization/duplicate_library_test\\.dart",
      "^tests/compiler/dart2js/serialization/equivalence_test\\.dart",
      "^tests/compiler/dart2js/serialization/test_helper\\.dart",
      "^tests/compiler/dart2js/simple_inferrer_const_closure_default_test\\.dart",
      "^tests/compiler/dart2js/simple_inferrer_test\\.dart",
      "^tests/compiler/dart2js/sourcemaps/data/invokes_test_file\\.dart",
      "^tests/compiler/dart2js/sourcemaps/mapping_test\\.dart",
      "^tests/compiler/dart2js/sourcemaps/nomapping_test\\.dart",
      "^tests/compiler/dart2js/sourcemaps/output_structure\\.dart",
      "^tests/compiler/dart2js/type_equals_test\\.dart",
      "^tests/compiler/dart2js/type_inference7_test\\.dart",
      "^tests/compiler/dart2js/type_inference8_test\\.dart",
      "^tests/compiler/dart2js/type_mask2_test\\.dart",
      "^tests/compiler/dart2js/type_mask_test\\.dart",
      "^tests/compiler/dart2js/type_representation_test\\.dart",
      "^tests/compiler/dart2js/type_substitution_test\\.dart",
      "^tests/compiler/dart2js/type_test_helper\\.dart",
      "^tests/compiler/dart2js/type_variable_occurrence_test\\.dart",

      "^tests/compiler/dart2js/path with spaces/.*"
    ]
  }
}
