library #lib;
import self as self;
import "regress_54324_b.lib.dart" as lib;

import "file:pkg/vm/testcases/transformations/type_flow/transformer/regress_54324_b.lib.dart";

static method main() → void {
  [@vm.direct-call.metadata=library file:pkg/vm/testcases/transformations/type_flow/transformer/regress_54324_b.lib.dart::BazClass.run] [@vm.inferred-type.metadata=!? (skip check)] #C1.{lib::BazClass::run}(){() → void};
}
constants  {
  #C1 = lib::BazClass {}
}
library regress_54324_b.lib.dart;
import self as self;
import "dart:core" as core;

class BazClass extends core::Object /*hasConstConstructor*/  {
[@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasTearOffUses:false,methodOrSetterSelectorId:1,getterSelectorId:2]  @#C3
  method run() → void {
    core::print("BazClass.run");
  }
}
constants  {
  #C1 = "vm:never-inline"
  #C2 = null
  #C3 = core::pragma {name:#C1, options:#C2}
}
