library #lib;
import self as self;
import "dart:core" as core;

class DefaultEq extends core::Object /*hasConstConstructor*/  {

  [@vm.inferred-type.metadata=dart.core::_Smi]
  [@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasNonThisUses:false,hasTearOffUses:false,getterSelectorId:1]
  [@vm.unboxing-info.metadata=()->i]
  final field core::int i;

  [@vm.unboxing-info.metadata=(i)->b]
  const constructor •([@vm.inferred-arg-type.metadata=dart.core::_Smi] core::int i) → self::DefaultEq
    : self::DefaultEq::i = i, super core::Object::•()
    ;

  [@vm.inferred-return-type.metadata=!]
  [@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasTearOffUses:false,methodOrSetterSelectorId:2,getterSelectorId:3]
  [@vm.unboxing-info.metadata=[!regcc]]
  method toString() → core::String
    return "DefaultEq(i=${[@vm.direct-call.metadata=#lib::DefaultEq.i] this.{self::DefaultEq::i}{core::int}})";
}
class OverriddenEq extends core::Object /*hasConstConstructor*/  {

  [@vm.inferred-type.metadata=dart.core::_Smi]
  [@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasNonThisUses:false,hasTearOffUses:false,getterSelectorId:4]
  [@vm.unboxing-info.metadata=()->i]
  final field core::int i;

  [@vm.unboxing-info.metadata=(i)->b]
  const constructor •([@vm.inferred-arg-type.metadata=dart.core::_Smi] core::int i) → self::OverriddenEq
    : self::OverriddenEq::i = i, super core::Object::•()
    ;

  [@vm.inferred-return-type.metadata=dart.core::bool]
  [@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasTearOffUses:false,methodOrSetterSelectorId:5]
  [@vm.unboxing-info.metadata=[!regcc]]
  operator ==(core::Object other) → core::bool {
    return true;
  }

  [@vm.inferred-return-type.metadata=!]
  [@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasTearOffUses:false,methodOrSetterSelectorId:2,getterSelectorId:3]
  [@vm.unboxing-info.metadata=[!regcc]]
  method toString() → core::String
    return "OverriddenEq(i=${[@vm.direct-call.metadata=#lib::OverriddenEq.i] this.{self::OverriddenEq::i}{core::int}})";
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method testStringLiteral() → void {
  core::print(#C1);
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method testStringConstant() → void {
  core::print(#C2);
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method testIntLiteral() → void {
  core::print(#C3);
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method testIntConstant() → void {
  core::print(#C4);
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method testDefaultEq1() → void {
  core::print(#C6);
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method testDefaultEq2() → void {
  throw "Attempt to execute code removed by Dart AOT compiler (TFA)";
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method testOverriddenEq1([@vm.inferred-arg-type.metadata=#lib::OverriddenEq] self::OverriddenEq c) → void {
  core::print(c);
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method testOverriddenEq2([@vm.inferred-arg-type.metadata=#lib::OverriddenEq] self::OverriddenEq c) → void {
  core::print(c);
}

[@vm.inferred-return-type.metadata=dart.core::bool]
static get runtimeTrue() → core::bool
  return [@vm.direct-call.metadata=dart.core::_IntegerImplementation.==] [@vm.inferred-type.metadata=dart.core::bool (skip check)] [@vm.inferred-type.metadata=int] core::int::parse("1") =={core::num::==}{(core::Object) → core::bool} 1;

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method testDoubleLiteral1() → void {
  core::print(#C7);
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
[@vm.unboxing-info.metadata=(d)->b]
static method testDoubleLiteral2([@vm.inferred-arg-type.metadata=dart.core::_Double] core::double i) → void {
  core::print(i);
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
[@vm.unboxing-info.metadata=(d)->b]
static method testDoubleLiteral3([@vm.inferred-arg-type.metadata=dart.core::_Double] core::double i) → void {
  core::print(i);
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method testDoubleConstant1() → void {
  core::print(#C8);
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
[@vm.unboxing-info.metadata=(d)->b]
static method testDoubleConstant2([@vm.inferred-arg-type.metadata=dart.core::_Double] core::double i) → void {
  core::print(i);
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
[@vm.unboxing-info.metadata=(d)->b]
static method testDoubleConstant3([@vm.inferred-arg-type.metadata=dart.core::_Double] core::double i) → void {
  core::print(i);
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method main() → void {
  final core::String s1 = [@vm.inferred-type.metadata=dart.core::bool] self::runtimeTrue ?{core::String} "foo" : "bar";
  if([@vm.inferred-type.metadata=dart.core::bool (receiver not int)] s1 =={core::String::==}{(core::Object) → core::bool} "foo") {
    self::testStringLiteral();
  }
  final core::String s2 = [@vm.inferred-type.metadata=dart.core::bool] self::runtimeTrue ?{core::String} "1234" : "asdf";
  const core::String sConst = #C2;
  if([@vm.inferred-type.metadata=dart.core::bool (receiver not int)] s2 =={core::String::==}{(core::Object) → core::bool} #C2) {
    self::testStringConstant();
  }
  final core::int i1 = [@vm.inferred-type.metadata=dart.core::bool] self::runtimeTrue ?{core::int} 123 : 456;
  if([@vm.direct-call.metadata=dart.core::_IntegerImplementation.==] [@vm.inferred-type.metadata=dart.core::bool (skip check)] i1 =={core::num::==}{(core::Object) → core::bool} 123) {
    self::testIntLiteral();
  }
  final core::int i2 = [@vm.inferred-type.metadata=dart.core::bool] self::runtimeTrue ?{core::int} 456 : 789;
  const core::int iConst = #C4;
  if([@vm.direct-call.metadata=dart.core::_IntegerImplementation.==] [@vm.inferred-type.metadata=dart.core::bool (skip check)] i2 =={core::num::==}{(core::Object) → core::bool} #C4) {
    self::testIntConstant();
  }
  final self::DefaultEq c1 = [@vm.inferred-type.metadata=dart.core::bool] self::runtimeTrue ?{self::DefaultEq} new self::DefaultEq::•(1) : new self::DefaultEq::•(2);
  if([@vm.direct-call.metadata=dart.core::Object.==] [@vm.inferred-type.metadata=dart.core::bool (skip check) (receiver not int)] c1 =={core::Object::==}{(core::Object) → core::bool} #C6) {
    self::testDefaultEq1();
  }
  if([@vm.direct-call.metadata=dart.core::Object.==] [@vm.inferred-type.metadata=dart.core::bool (skip check) (receiver not int)] c1 =={core::Object::==}{(core::Object) → core::bool} #C2) {
    self::testDefaultEq2();
  }
  final self::OverriddenEq c2 = [@vm.inferred-type.metadata=dart.core::bool] self::runtimeTrue ?{self::OverriddenEq} new self::OverriddenEq::•(1) : new self::OverriddenEq::•(2);
  if([@vm.direct-call.metadata=#lib::OverriddenEq.==] [@vm.inferred-type.metadata=dart.core::bool (skip check) (receiver not int)] c2 =={self::OverriddenEq::==}{(core::Object) → core::bool} #C9) {
    self::testOverriddenEq1(c2);
  }
  if([@vm.direct-call.metadata=#lib::OverriddenEq.==] [@vm.inferred-type.metadata=dart.core::bool (skip check) (receiver not int)] c2 =={self::OverriddenEq::==}{(core::Object) → core::bool} #C2) {
    self::testOverriddenEq2(c2);
  }
  final core::double d1 = [@vm.inferred-type.metadata=dart.core::bool] self::runtimeTrue ?{core::double} 1.21 : 3.41;
  if([@vm.direct-call.metadata=dart.core::_Double.==] [@vm.inferred-type.metadata=dart.core::bool (skip check) (receiver not int)] d1 =={core::num::==}{(core::Object) → core::bool} 1.2) {
    self::testDoubleLiteral1();
  }
  const core::double d1Const = #C8;
  if([@vm.direct-call.metadata=dart.core::_Double.==] [@vm.inferred-type.metadata=dart.core::bool (skip check) (receiver not int)] d1 =={core::num::==}{(core::Object) → core::bool} #C8) {
    self::testDoubleConstant1();
  }
  final core::double d2 = [@vm.inferred-type.metadata=dart.core::bool] self::runtimeTrue ?{core::double} 1.34 : 5.67;
  if([@vm.direct-call.metadata=dart.core::_Double.==] [@vm.inferred-type.metadata=dart.core::bool (skip check) (receiver not int)] d2 =={core::num::==}{(core::Object) → core::bool} #C10) {
    self::testDoubleLiteral2(d2);
  }
  const core::double d2Const = #C10;
  if([@vm.direct-call.metadata=dart.core::_Double.==] [@vm.inferred-type.metadata=dart.core::bool (skip check) (receiver not int)] d2 =={core::num::==}{(core::Object) → core::bool} #C10) {
    self::testDoubleConstant2(d2);
  }
  final core::double d3 = [@vm.inferred-type.metadata=dart.core::bool] self::runtimeTrue ?{core::double} 8.7 : 9.6;
  if([@vm.direct-call.metadata=dart.core::_Double.==] [@vm.inferred-type.metadata=dart.core::bool (skip check) (receiver not int)] d3 =={core::num::==}{(core::Object) → core::bool} [@vm.direct-call.metadata=dart.core::_Double.unary-] [@vm.inferred-type.metadata=dart.core::_Double (skip check)] 0.0.{core::double::unary-}(){() → core::double}) {
    self::testDoubleLiteral3(d3);
  }
  const core::double d3Const = #C11;
  if([@vm.direct-call.metadata=dart.core::_Double.==] [@vm.inferred-type.metadata=dart.core::bool (skip check) (receiver not int)] d3 =={core::num::==}{(core::Object) → core::bool} #C11) {
    self::testDoubleConstant3(d3);
  }
}
constants  {
  #C1 = "foo"
  #C2 = "1234"
  #C3 = 123
  #C4 = 456
  #C5 = 1
  #C6 = self::DefaultEq {i:#C5}
  #C7 = 1.2
  #C8 = 12.34
  #C9 = self::OverriddenEq {i:#C5}
  #C10 = NaN
  #C11 = -0.0
}
