library #lib /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

[@vm.inferred-type.metadata=dart.core::_GrowableList?<dart.core::Object>]static field dynamic list = <core::Object>["abc", (42, {foo42: "foo42"})];
[@vm.unboxing-info.metadata=(i,i,i)->b]static method recordLiteral([@vm.inferred-type.metadata=dart.core::_BoxedInt] dynamic x, [@vm.inferred-type.metadata=dart.core::_BoxedInt] dynamic y, [@vm.inferred-type.metadata=dart.core::_BoxedInt] dynamic z) → dynamic
  return (x, y, {bar: z});
static method recordFieldAccess1([@vm.inferred-type.metadata=dart.core::Record_2](core::int, core::String) rec) → dynamic
  return rec.$1{core::int};
static method recordFieldAccess2([@vm.inferred-type.metadata=dart.core::Record_0_a_b]({required a: core::int, required b: core::String}) rec) → dynamic
  return rec.a{core::int};
static method recordDynamicFieldAccess(dynamic x) → dynamic
  return x{dynamic}.foo42;
static method main() → dynamic {
  core::print(#C4);
  core::print([@vm.inferred-type.metadata=dart.core::Record_2_bar] self::recordLiteral(1, 2, 3));
  core::print(self::recordFieldAccess1((10, "hi")));
  core::print(self::recordFieldAccess2(({a: 20, b: "bye"})));
  core::print(self::recordDynamicFieldAccess([@vm.direct-call.metadata=dart.core::_ListBase.[]??] [@vm.inferred-type.metadata=!? (receiver not int)] [@vm.inferred-type.metadata=dart.core::_GrowableList?<dart.core::Object>] self::list{dynamic}.[](1)));
  core::print([@vm.direct-call.metadata=dart.core::Record_2.toString] [@vm.inferred-type.metadata=! (skip check) (receiver not int)](1, 2).{core::Object::toString}(){() → core::String});
}
constants  {
  #C1 = 42
  #C2 = "Hey"
  #C3 = "foo"
  #C4 = (#C1, #C2, {foo:#C3})
}
