library #lib;
import self as self;
import "package:meta/meta.dart" as meta;
import "dart:core" as core;

import "package:meta/meta.dart" show RecordUse;

@#C1
class MyClass extends core::Object /*hasConstConstructor*/  {

  [@vm.inferred-type.metadata=!]
  [@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasNonThisUses:false,hasTearOffUses:false,getterSelectorId:1]
  final field core::Object i;
}
@#C1
class MyOtherClass extends core::Object /*hasConstConstructor*/  {
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method main() â†’ void {
  const core::List<core::Object> list = #C8;
  core::print(#C8);
}
constants  {
  #C1 = meta::RecordUse {}
  #C2 = 42
  #C3 = self::MyClass {i:#C2}
  #C4 = "test"
  #C5 = self::MyClass {i:#C4}
  #C6 = self::MyOtherClass {}
  #C7 = <core::Object>{#C5, #C6}
  #C8 = <core::Object>[#C3, #C7]
}
