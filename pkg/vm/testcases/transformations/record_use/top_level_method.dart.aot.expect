library #lib;
import self as self;
import "dart:core" as core;
import "package:meta/meta.dart" as meta;

import "package:meta/meta.dart" show RecordUse;


[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method main() → void {
  core::print([@vm.inferred-type.metadata=int] self::someTopLevelMethod(42));
}

[@vm.inferred-return-type.metadata=int]
[@vm.unboxing-info.metadata=(i)->i]
@#C1
static method someTopLevelMethod([@vm.inferred-arg-type.metadata=dart.core::_Smi (value: 42)] core::int i) → core::int {
  return [@vm.direct-call.metadata=dart.core::_IntegerImplementation.+] [@vm.inferred-type.metadata=int (skip check)] i.{core::num::+}(1){(core::num) → core::int};
}
constants  {
  #C1 = meta::RecordUse {}
}
