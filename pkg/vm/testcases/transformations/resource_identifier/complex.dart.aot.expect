library #lib;
import self as self;
import "dart:core" as core;
import "dart:async" as asy;
import "package:meta/meta.dart" as meta;
import "dart:collection" as col;

import "dart:async";
import "package:meta/meta.dart" show ResourceIdentifier;

class OtherClass extends core::Object {
[@vm.inferred-type.metadata=#lib::AssetBundle] [@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasNonThisUses:false,hasTearOffUses:false,getterSelectorId:1]  final field self::AssetBundle bundle;
[@vm.inferred-type.metadata=dart.core::_OneByteString (value: "somestring")] [@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasNonThisUses:false,hasTearOffUses:false,methodOrSetterSelectorId:2,getterSelectorId:3]  field core::String string = "somestring";
[@vm.inferred-type.metadata=#lib::AnotherClass] [@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasNonThisUses:false,hasTearOffUses:false,methodOrSetterSelectorId:4,getterSelectorId:5]  field self::AnotherClass object;
  synthetic constructor •() → self::OtherClass
    : self::OtherClass::bundle = new self::AssetBundle::•(), self::OtherClass::object = new self::AnotherClass::•(), super core::Object::•()
    ;
[@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasTearOffUses:false,methodOrSetterSelectorId:6,getterSelectorId:7]  method someMethod() → asy::Future<core::String> async /* emittedValueType= core::String */ {
    return await self::OtherClass::generate([@vm.direct-call.metadata=#lib::OtherClass.bundle] [@vm.inferred-type.metadata=#lib::AssetBundle] this.{self::OtherClass::bundle}{self::AssetBundle}, [@vm.inferred-type.metadata=dart.core::_GrowableList<dynamic>] core::_GrowableList::_literal1<dynamic>(#C1), [@vm.direct-call.metadata=#lib::OtherClass.string] [@vm.inferred-type.metadata=dart.core::_OneByteString (value: "somestring")] this.{self::OtherClass::string}{core::String}, [@vm.direct-call.metadata=#lib::OtherClass.object] [@vm.inferred-type.metadata=#lib::AnotherClass] this.{self::OtherClass::object}{self::AnotherClass}, 42);
  }
[@vm.unboxing-info.metadata=(b,b,b,b,i)->b]  @#C3
  static method generate([@vm.inferred-arg-type.metadata=#lib::AssetBundle] self::AssetBundle bundle, [@vm.inferred-arg-type.metadata=dart.core::_GrowableList<dynamic>] core::List<dynamic> args, [@vm.inferred-arg-type.metadata=dart.core::_OneByteString (value: "somestring")] core::String string, [@vm.inferred-arg-type.metadata=#lib::AnotherClass] self::AnotherClass object, [@vm.inferred-arg-type.metadata=dart.core::_Smi (value: 42)] core::int index) → asy::Future<core::String> async /* emittedValueType= core::String */ {
    final self::Message message = await [@vm.direct-call.metadata=#lib::AssetBundle.byIndex] [@vm.inferred-type.metadata=!? (skip check)] bundle.{self::AssetBundle::byIndex}(){({required index: core::int, required string: core::String}) → self::Message} /* runtimeCheckType= asy::Future<self::Message> */ ;
    return [@vm.direct-call.metadata=#lib::Message.generateString] [@vm.inferred-type.metadata=!? (skip check)] message.{self::Message::generateString}(args){(core::List<dynamic>, {required object: self::AnotherClass}) → asy::Future<core::String>};
  }
}
class AssetBundle extends core::Object {
  synthetic constructor •() → self::AssetBundle
    : super core::Object::•()
    ;
[@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasTearOffUses:false,methodOrSetterSelectorId:8,getterSelectorId:9]  method byIndex() → self::Message {
    return new self::Message::•();
  }
}
class Message extends core::Object {
  synthetic constructor •() → self::Message
    : super core::Object::•()
    ;
[@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasTearOffUses:false,methodOrSetterSelectorId:10,getterSelectorId:11]  method generateString([@vm.inferred-arg-type.metadata=dart.core::_GrowableList<dynamic>] core::List<dynamic> args) → asy::Future<core::String> async /* emittedValueType= core::String */ {
    return col::IterableExtensions|get#firstOrNull<dynamic>(args).{core::Object::toString}{<object>}.(){() → core::String};
  }
}
class AnotherClass extends core::Object {
  synthetic constructor •() → self::AnotherClass
    : super core::Object::•()
    ;
}
static method main() → void {
  core::print([@vm.direct-call.metadata=#lib::OtherClass.someMethod] [@vm.inferred-type.metadata=dart.async::_Future (skip check)] new self::OtherClass::•().{self::OtherClass::someMethod}(){({required argument: core::String}) → asy::Future<core::String>});
}
constants  {
  #C1 = "argument!"
  #C2 = "myresourceid"
  #C3 = meta::ResourceIdentifier {metadata:#C2}
}
