parseUnit(class)
  skipErrorTokens(class)
  listener: beginCompilationUnit(class)
  syntheticPreviousToken(class)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, , class, null, null, null, null, DirectiveContext(DirectiveState.Unknown))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(A, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, A)
        parseClass(A, class, class, A)
          parseClassHeaderOpt(A, class, class)
            parseClassExtendsOpt(A, DeclarationHeaderKind.Class)
              listener: handleNoType(A)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(A)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(A)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(A, DeclarationKind.Class, A)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(class)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, }, class, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(C, classOrMixinDeclaration)
        listener: handleNoTypeVariables(extends)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
        parseClass(C, class, class, C)
          parseClassHeaderOpt(C, class, class)
            parseClassExtendsOpt(C, DeclarationHeaderKind.Class)
              parseClassExtendsSeenExtendsClause(extends, C, DeclarationHeaderKind.Class)
                listener: handleIdentifier(A, typeReference)
                listener: handleNoTypeArguments({)
                listener: handleType(A, null)
                listener: handleClassExtends(extends, 1)
            parseClassWithClauseOpt(A)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(A)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(A, DeclarationKind.Class, C)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionDeclaration(extension, extension, extension)
          listener: handleNoTypeVariables(on)
          listener: beginExtensionDeclaration(extension, null)
          listener: handleIdentifier(C, typeReference)
          listener: handleNoTypeArguments({)
          listener: handleType(C, null)
          parseClassOrMixinOrExtensionBody(C, DeclarationKind.Extension, null)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Extension, {)
            notEofOrValue(}, addChild)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Extension, null)
              parseMetadataStar({)
                listener: beginMetadataStar(addChild)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod({, null, null, null, null, null, null, null, {, NoType(), null, addChild, DeclarationKind.Extension, null, false)
                listener: beginMethod(DeclarationKind.Extension, null, null, null, null, null, null, addChild)
                listener: handleNoType({)
                ensureIdentifierPotentiallyRecovered({, methodDeclaration, false)
                  listener: handleIdentifier(addChild, methodDeclaration)
                parseQualifiedRestOpt(addChild, methodDeclarationContinuation)
                parseMethodTypeVar(addChild)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(addChild, addChild, false, MemberKind.ExtensionNonStaticMethod)
                  parseFormalParameters(addChild, MemberKind.ExtensionNonStaticMethod)
                    parseFormalParametersRest((, MemberKind.ExtensionNonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.ExtensionNonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.ExtensionNonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(A)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(A, MemberKind.ExtensionNonStaticMethod, null, null, null)
                        listener: handleIdentifier(A, typeReference)
                        listener: handleNoTypeArguments(child)
                        listener: handleType(A, null)
                        ensureIdentifier(A, formalParameterDeclaration)
                          listener: handleIdentifier(child, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, child, null, null, FormalParameterKind.requiredPositional, MemberKind.ExtensionNonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.ExtensionNonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(0, {, })
                listener: endExtensionMethod(null, addChild, (, null, })
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Extension, 1, {, })
          listener: endExtensionDeclaration(extension, extension, on, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(class)
  listener: endCompilationUnit(3, )
