parseUnit(extension)
  skipErrorTokens(extension)
  listener: beginCompilationUnit(extension)
  syntheticPreviousToken(extension)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, , extension, null, null, null, null, DirectiveContext(DirectiveState.Unknown))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET1)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET1, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(), [extends, with, implements, {])
              parseClassExtendsOpt(), DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, ), DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments({)
                  listener: handleType(Foo, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Foo)
                listener: handleClassNoWithClause()
              parseClassOrMixinOrEnumImplementsOpt(Foo)
                listener: handleImplements(null, 0)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Foo, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Foo, DeclarationKind.ExtensionType, ET1)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET2)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET2, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(), [extends, with, implements, {])
              parseClassExtendsOpt(), DeclarationHeaderKind.ExtensionType)
                listener: handleNoType())
                listener: handleClassExtends(null, 1)
              parseClassWithClauseOpt())
                parseTypeList(with)
                  listener: beginTypeList(Foo)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments({)
                  listener: handleType(Foo, null)
                  listener: endTypeList(1)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Foo)
                listener: handleImplements(null, 0)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Foo, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Foo, DeclarationKind.ExtensionType, ET2)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET3)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET3, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(), [extends, with, implements, {])
              parseClassExtendsOpt(), DeclarationHeaderKind.ExtensionType)
                listener: handleNoType())
                listener: handleClassExtends(null, 1)
              parseClassWithClauseOpt())
                parseTypeList(with)
                  listener: beginTypeList(Foo)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(,)
                  listener: handleType(Foo, null)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments({)
                  listener: handleType(Bar, null)
                  listener: endTypeList(2)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Bar)
                listener: handleImplements(null, 0)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Bar, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Bar, DeclarationKind.ExtensionType, ET3)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET4)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET4, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(), [extends, with, implements, {])
              parseClassExtendsOpt(), DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, ), DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(with)
                  listener: handleType(Foo, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Foo)
                parseTypeList(with)
                  listener: beginTypeList(Bar)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments({)
                  listener: handleType(Bar, null)
                  listener: endTypeList(1)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Bar)
                listener: handleImplements(null, 0)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Bar, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Bar, DeclarationKind.ExtensionType, ET4)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET5)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET5, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(), [extends, with, implements, {])
              parseClassExtendsOpt(), DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, ), DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(with)
                  listener: handleType(Foo, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Foo)
                parseTypeList(with)
                  listener: beginTypeList(Bar)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments(,)
                  listener: handleType(Bar, null)
                  listener: handleIdentifier(Baz, typeReference)
                  listener: handleNoTypeArguments({)
                  listener: handleType(Baz, null)
                  listener: endTypeList(2)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Baz)
                listener: handleImplements(null, 0)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Baz, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Baz, DeclarationKind.ExtensionType, ET5)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET6)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET6, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(), [extends, with, implements, {])
              parseClassExtendsOpt(), DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, ), DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(implements)
                  listener: handleType(Foo, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Foo)
                listener: handleClassNoWithClause()
              parseClassOrMixinOrEnumImplementsOpt(Foo)
                listener: handleIdentifier(Bar, typeReference)
                listener: handleNoTypeArguments({)
                listener: handleType(Bar, null)
                listener: handleImplements(implements, 1)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Bar, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Bar, DeclarationKind.ExtensionType, ET6)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET7)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET7, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(), [extends, with, implements, {])
              parseClassExtendsOpt(), DeclarationHeaderKind.ExtensionType)
                listener: handleNoType())
                listener: handleClassExtends(null, 1)
              parseClassWithClauseOpt())
                parseTypeList(with)
                  listener: beginTypeList(Foo)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(implements)
                  listener: handleType(Foo, null)
                  listener: endTypeList(1)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Foo)
                listener: handleIdentifier(Bar, typeReference)
                listener: handleNoTypeArguments({)
                listener: handleType(Bar, null)
                listener: handleImplements(implements, 1)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Bar, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Bar, DeclarationKind.ExtensionType, ET7)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET8)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET8, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(), [extends, with, implements, {])
              parseClassExtendsOpt(), DeclarationHeaderKind.ExtensionType)
                listener: handleNoType())
                listener: handleClassExtends(null, 1)
              parseClassWithClauseOpt())
                parseTypeList(with)
                  listener: beginTypeList(Foo)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(,)
                  listener: handleType(Foo, null)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments(implements)
                  listener: handleType(Bar, null)
                  listener: endTypeList(2)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Bar)
                listener: handleIdentifier(Baz, typeReference)
                listener: handleNoTypeArguments({)
                listener: handleType(Baz, null)
                listener: handleImplements(implements, 1)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Baz, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Baz, DeclarationKind.ExtensionType, ET8)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET9)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET9, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(), [extends, with, implements, {])
              parseClassExtendsOpt(), DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, ), DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(with)
                  listener: handleType(Foo, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Foo)
                parseTypeList(with)
                  listener: beginTypeList(Bar)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments(implements)
                  listener: handleType(Bar, null)
                  listener: endTypeList(1)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Bar)
                listener: handleIdentifier(Baz, typeReference)
                listener: handleNoTypeArguments({)
                listener: handleType(Baz, null)
                listener: handleImplements(implements, 1)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Baz, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Baz, DeclarationKind.ExtensionType, ET9)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET10)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET10, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(), [extends, with, implements, {])
              parseClassExtendsOpt(), DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, ), DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(with)
                  listener: handleType(Foo, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Foo)
                parseTypeList(with)
                  listener: beginTypeList(Bar)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments(,)
                  listener: handleType(Bar, null)
                  listener: handleIdentifier(Baz, typeReference)
                  listener: handleNoTypeArguments(implements)
                  listener: handleType(Baz, null)
                  listener: endTypeList(2)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Baz)
                listener: handleIdentifier(Boz, typeReference)
                listener: handleNoTypeArguments({)
                listener: handleType(Boz, null)
                listener: handleImplements(implements, 1)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Boz, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Boz, DeclarationKind.ExtensionType, ET10)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET11)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET11, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleIdentifier(Bar, typeReference)
            listener: handleNoTypeArguments(extends)
            listener: handleType(Bar, null)
            listener: handleImplements(implements, 1)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(Bar, [extends, with, implements, {])
              parseClassExtendsOpt(Bar, DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, Bar, DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments({)
                  listener: handleType(Foo, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Foo)
                listener: handleClassNoWithClause()
              parseClassOrMixinOrEnumImplementsOpt(Foo)
                listener: handleImplements(null, 0)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Foo, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Foo, DeclarationKind.ExtensionType, ET11)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET12)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET12, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleIdentifier(Bar, typeReference)
            listener: handleNoTypeArguments(with)
            listener: handleType(Bar, null)
            listener: handleImplements(implements, 1)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(Bar, [extends, with, implements, {])
              parseClassExtendsOpt(Bar, DeclarationHeaderKind.ExtensionType)
                listener: handleNoType(Bar)
                listener: handleClassExtends(null, 1)
              parseClassWithClauseOpt(Bar)
                parseTypeList(with)
                  listener: beginTypeList(Foo)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments({)
                  listener: handleType(Foo, null)
                  listener: endTypeList(1)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Foo)
                listener: handleImplements(null, 0)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Foo, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Foo, DeclarationKind.ExtensionType, ET12)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET13)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET13, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleIdentifier(Bar, typeReference)
            listener: handleNoTypeArguments(with)
            listener: handleType(Bar, null)
            listener: handleImplements(implements, 1)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(Bar, [extends, with, implements, {])
              parseClassExtendsOpt(Bar, DeclarationHeaderKind.ExtensionType)
                listener: handleNoType(Bar)
                listener: handleClassExtends(null, 1)
              parseClassWithClauseOpt(Bar)
                parseTypeList(with)
                  listener: beginTypeList(Foo)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(,)
                  listener: handleType(Foo, null)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments({)
                  listener: handleType(Bar, null)
                  listener: endTypeList(2)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Bar)
                listener: handleImplements(null, 0)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Bar, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Bar, DeclarationKind.ExtensionType, ET13)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET14)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET14, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleIdentifier(Bar, typeReference)
            listener: handleNoTypeArguments(extends)
            listener: handleType(Bar, null)
            listener: handleImplements(implements, 1)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(Bar, [extends, with, implements, {])
              parseClassExtendsOpt(Bar, DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, Bar, DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(with)
                  listener: handleType(Foo, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Foo)
                parseTypeList(with)
                  listener: beginTypeList(Bar)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments({)
                  listener: handleType(Bar, null)
                  listener: endTypeList(1)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Bar)
                listener: handleImplements(null, 0)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Bar, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Bar, DeclarationKind.ExtensionType, ET14)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET15)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET15, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleIdentifier(Bar, typeReference)
            listener: handleNoTypeArguments(extends)
            listener: handleType(Bar, null)
            listener: handleImplements(implements, 1)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(Bar, [extends, with, implements, {])
              parseClassExtendsOpt(Bar, DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, Bar, DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(with)
                  listener: handleType(Foo, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Foo)
                parseTypeList(with)
                  listener: beginTypeList(Bar)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments(,)
                  listener: handleType(Bar, null)
                  listener: handleIdentifier(Baz, typeReference)
                  listener: handleNoTypeArguments({)
                  listener: handleType(Baz, null)
                  listener: endTypeList(2)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Baz)
                listener: handleImplements(null, 0)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Baz, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Baz, DeclarationKind.ExtensionType, ET15)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET16)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET16, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleIdentifier(Bar, typeReference)
            listener: handleNoTypeArguments(extends)
            listener: handleType(Bar, null)
            listener: handleImplements(implements, 1)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(Bar, [extends, with, implements, {])
              parseClassExtendsOpt(Bar, DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, Bar, DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(implements)
                  listener: handleType(Foo, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Foo)
                listener: handleClassNoWithClause()
              parseClassOrMixinOrEnumImplementsOpt(Foo)
                listener: handleIdentifier(Bar, typeReference)
                listener: handleNoTypeArguments({)
                listener: handleType(Bar, null)
                listener: handleImplements(implements, 1)
              reportRecoverableError(implements, MultipleImplements)
                listener: handleRecoverableError(MultipleImplements, implements, implements)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Bar, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Bar, DeclarationKind.ExtensionType, ET16)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET17)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET17, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleIdentifier(Bar, typeReference)
            listener: handleNoTypeArguments(with)
            listener: handleType(Bar, null)
            listener: handleImplements(implements, 1)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(Bar, [extends, with, implements, {])
              parseClassExtendsOpt(Bar, DeclarationHeaderKind.ExtensionType)
                listener: handleNoType(Bar)
                listener: handleClassExtends(null, 1)
              parseClassWithClauseOpt(Bar)
                parseTypeList(with)
                  listener: beginTypeList(Foo)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(implements)
                  listener: handleType(Foo, null)
                  listener: endTypeList(1)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Foo)
                listener: handleIdentifier(Bar, typeReference)
                listener: handleNoTypeArguments({)
                listener: handleType(Bar, null)
                listener: handleImplements(implements, 1)
              reportRecoverableError(implements, MultipleImplements)
                listener: handleRecoverableError(MultipleImplements, implements, implements)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Bar, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Bar, DeclarationKind.ExtensionType, ET17)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET18)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET18, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleIdentifier(Bar, typeReference)
            listener: handleNoTypeArguments(with)
            listener: handleType(Bar, null)
            listener: handleImplements(implements, 1)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(Bar, [extends, with, implements, {])
              parseClassExtendsOpt(Bar, DeclarationHeaderKind.ExtensionType)
                listener: handleNoType(Bar)
                listener: handleClassExtends(null, 1)
              parseClassWithClauseOpt(Bar)
                parseTypeList(with)
                  listener: beginTypeList(Foo)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(,)
                  listener: handleType(Foo, null)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments(implements)
                  listener: handleType(Bar, null)
                  listener: endTypeList(2)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Bar)
                listener: handleIdentifier(Baz, typeReference)
                listener: handleNoTypeArguments({)
                listener: handleType(Baz, null)
                listener: handleImplements(implements, 1)
              reportRecoverableError(implements, MultipleImplements)
                listener: handleRecoverableError(MultipleImplements, implements, implements)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Baz, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Baz, DeclarationKind.ExtensionType, ET18)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET19)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET19, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleIdentifier(Bar, typeReference)
            listener: handleNoTypeArguments(extends)
            listener: handleType(Bar, null)
            listener: handleImplements(implements, 1)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(Bar, [extends, with, implements, {])
              parseClassExtendsOpt(Bar, DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, Bar, DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(with)
                  listener: handleType(Foo, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Foo)
                parseTypeList(with)
                  listener: beginTypeList(Bar)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments(implements)
                  listener: handleType(Bar, null)
                  listener: endTypeList(1)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Bar)
                listener: handleIdentifier(Baz, typeReference)
                listener: handleNoTypeArguments({)
                listener: handleType(Baz, null)
                listener: handleImplements(implements, 1)
              reportRecoverableError(implements, MultipleImplements)
                listener: handleRecoverableError(MultipleImplements, implements, implements)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Baz, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Baz, DeclarationKind.ExtensionType, ET19)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET20)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET20, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleIdentifier(Bar, typeReference)
            listener: handleNoTypeArguments(extends)
            listener: handleType(Bar, null)
            listener: handleImplements(implements, 1)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(Bar, [extends, with, implements, {])
              parseClassExtendsOpt(Bar, DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, Bar, DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Foo, typeReference)
                  listener: handleNoTypeArguments(with)
                  listener: handleType(Foo, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Foo)
                parseTypeList(with)
                  listener: beginTypeList(Bar)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments(,)
                  listener: handleType(Bar, null)
                  listener: handleIdentifier(Baz, typeReference)
                  listener: handleNoTypeArguments(implements)
                  listener: handleType(Baz, null)
                  listener: endTypeList(2)
                listener: handleClassWithClause(with)
              reportRecoverableError(with, ExtensionTypeWith)
                listener: handleRecoverableError(ExtensionTypeWith, with, with)
              parseClassOrMixinOrEnumImplementsOpt(Baz)
                listener: handleIdentifier(Boz, typeReference)
                listener: handleNoTypeArguments({)
                listener: handleType(Boz, null)
                listener: handleImplements(implements, 1)
              reportRecoverableError(implements, MultipleImplements)
                listener: handleRecoverableError(MultipleImplements, implements, implements)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Boz, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Boz, DeclarationKind.ExtensionType, ET20)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET21)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET21, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleIdentifier(Bar, typeReference)
            listener: handleNoTypeArguments(implements)
            listener: handleType(Bar, null)
            listener: handleImplements(implements, 1)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(Bar, [extends, with, implements, {])
              parseClassExtendsOpt(Bar, DeclarationHeaderKind.ExtensionType)
                listener: handleNoType(Bar)
                listener: handleClassExtends(null, 1)
              parseClassWithClauseOpt(Bar)
                listener: handleClassNoWithClause()
              parseClassOrMixinOrEnumImplementsOpt(Bar)
                listener: handleIdentifier(Boz, typeReference)
                listener: handleNoTypeArguments({)
                listener: handleType(Boz, null)
                listener: handleImplements(implements, 1)
              reportRecoverableError(implements, MultipleImplements)
                listener: handleRecoverableError(MultipleImplements, implements, implements)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Boz, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Boz, DeclarationKind.ExtensionType, ET21)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET22)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET22, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(), [extends, with, implements, {])
              parseClassExtendsOpt(), DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, ), DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments(extends)
                  listener: handleType(Bar, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Bar)
                listener: handleClassNoWithClause()
              parseClassOrMixinOrEnumImplementsOpt(Bar)
                listener: handleImplements(null, 0)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
              skipUnexpectedTokenOpt(Bar, [extends, with, implements, {])
              parseClassExtendsOpt(Bar, DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, Bar, DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Boz, typeReference)
                  listener: handleNoTypeArguments({)
                  listener: handleType(Boz, null)
                  listener: handleClassExtends(extends, 1)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Boz)
                listener: handleClassNoWithClause()
              parseClassOrMixinOrEnumImplementsOpt(Boz)
                listener: handleImplements(null, 0)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Boz, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Boz, DeclarationKind.ExtensionType, ET22)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, ET23)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(ET23, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseExtensionTypeHeaderRecovery(), extension)
            parseDeclarationHeaderRecoveryInternal(), extension, extension, DeclarationHeaderKind.ExtensionType)
              parseClassOrMixinOrEnumImplementsOpt())
              skipUnexpectedTokenOpt(), [extends, with, implements, {])
              parseClassExtendsOpt(), DeclarationHeaderKind.ExtensionType)
                parseClassExtendsSeenExtendsClause(extends, ), DeclarationHeaderKind.ExtensionType)
                  listener: handleIdentifier(Bar, typeReference)
                  listener: handleNoTypeArguments(,)
                  listener: handleType(Bar, null)
                  listener: handleIdentifier(Boz, typeReference)
                  listener: handleNoTypeArguments({)
                  listener: handleType(Boz, null)
                  listener: handleClassExtends(extends, 2)
              reportRecoverableError(extends, ExtensionTypeExtends)
                listener: handleRecoverableError(ExtensionTypeExtends, extends, extends)
              parseClassWithClauseOpt(Boz)
                listener: handleClassNoWithClause()
              parseClassOrMixinOrEnumImplementsOpt(Boz)
                listener: handleImplements(null, 0)
              listener: handleRecoverDeclarationHeader(DeclarationHeaderKind.ExtensionType)
          ensureBlock(Boz, BlockKind(extension type declaration))
          parseClassOrMixinOrExtensionBody(Boz, DeclarationKind.ExtensionType, ET23)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(extension)
  listener: endCompilationUnit(23, )
