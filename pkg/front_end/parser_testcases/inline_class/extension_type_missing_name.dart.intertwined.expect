parseUnit(extension)
  skipErrorTokens(extension)
  listener: beginCompilationUnit(extension)
  syntheticPreviousToken(extension)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, , extension, null, null, null, null, DirectiveContext(DirectiveState.Unknown))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          insertSyntheticIdentifier(type, classOrMixinDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}], messageOnToken: null)
            reportRecoverableError((, Message[ExpectedIdentifier, Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}], (, ()
            rewriter()
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, )
          listener: beginPrimaryConstructor(()
          parseFormalParameters(, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, )
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          insertSyntheticIdentifier(const, classOrMixinDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}], messageOnToken: null)
            reportRecoverableError((, Message[ExpectedIdentifier, Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}], (, ()
            rewriter()
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(extension, )
          listener: beginPrimaryConstructor(()
          parseFormalParameters(, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, const, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, )
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          insertSyntheticIdentifier(type, classOrMixinDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got '.'., Try inserting an identifier before '.'., {lexeme: .}], messageOnToken: null)
            reportRecoverableError(., Message[ExpectedIdentifier, Expected an identifier, but got '.'., Try inserting an identifier before '.'., {lexeme: .}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '.'., Try inserting an identifier before '.'., {lexeme: .}], ., .)
            rewriter()
          listener: handleNoTypeVariables(.)
          listener: beginExtensionTypeDeclaration(extension, )
          listener: beginPrimaryConstructor(.)
          ensureIdentifier(., primaryConstructorDeclaration)
            listener: handleIdentifier(name, primaryConstructorDeclaration)
          parseFormalParameters(name, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor(., null, true)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, )
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          insertSyntheticIdentifier(const, classOrMixinDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got '.'., Try inserting an identifier before '.'., {lexeme: .}], messageOnToken: null)
            reportRecoverableError(., Message[ExpectedIdentifier, Expected an identifier, but got '.'., Try inserting an identifier before '.'., {lexeme: .}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '.'., Try inserting an identifier before '.'., {lexeme: .}], ., .)
            rewriter()
          listener: handleNoTypeVariables(.)
          listener: beginExtensionTypeDeclaration(extension, )
          listener: beginPrimaryConstructor(.)
          ensureIdentifier(., primaryConstructorDeclaration)
            listener: handleIdentifier(name, primaryConstructorDeclaration)
          parseFormalParameters(name, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor(., const, true)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, )
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          insertSyntheticIdentifier(type, classOrMixinDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got '<'., Try inserting an identifier before '<'., {lexeme: <}], messageOnToken: null)
            reportRecoverableError(<, Message[ExpectedIdentifier, Expected an identifier, but got '<'., Try inserting an identifier before '<'., {lexeme: <}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '<'., Try inserting an identifier before '<'., {lexeme: <}], <, <)
            rewriter()
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionTypeDeclaration(extension, )
          listener: beginPrimaryConstructor(()
          parseFormalParameters(>, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, )
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          insertSyntheticIdentifier(const, classOrMixinDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got '<'., Try inserting an identifier before '<'., {lexeme: <}], messageOnToken: null)
            reportRecoverableError(<, Message[ExpectedIdentifier, Expected an identifier, but got '<'., Try inserting an identifier before '<'., {lexeme: <}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '<'., Try inserting an identifier before '<'., {lexeme: <}], <, <)
            rewriter()
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionTypeDeclaration(extension, )
          listener: beginPrimaryConstructor(()
          parseFormalParameters(>, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, const, false)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, )
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          insertSyntheticIdentifier(type, classOrMixinDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got '<'., Try inserting an identifier before '<'., {lexeme: <}], messageOnToken: null)
            reportRecoverableError(<, Message[ExpectedIdentifier, Expected an identifier, but got '<'., Try inserting an identifier before '<'., {lexeme: <}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '<'., Try inserting an identifier before '<'., {lexeme: <}], <, <)
            rewriter()
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionTypeDeclaration(extension, )
          listener: beginPrimaryConstructor(.)
          ensureIdentifier(., primaryConstructorDeclaration)
            listener: handleIdentifier(name, primaryConstructorDeclaration)
          parseFormalParameters(name, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor(., null, true)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, )
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, extension, type)
          insertSyntheticIdentifier(const, classOrMixinDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got '<'., Try inserting an identifier before '<'., {lexeme: <}], messageOnToken: null)
            reportRecoverableError(<, Message[ExpectedIdentifier, Expected an identifier, but got '<'., Try inserting an identifier before '<'., {lexeme: <}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '<'., Try inserting an identifier before '<'., {lexeme: <}], <, <)
            rewriter()
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionTypeDeclaration(extension, )
          listener: beginPrimaryConstructor(.)
          ensureIdentifier(., primaryConstructorDeclaration)
            listener: handleIdentifier(name, primaryConstructorDeclaration)
          parseFormalParameters(name, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.PrimaryConstructor, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, i, null, null, FormalParameterKind.requiredPositional, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor(., const, true)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, )
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, extension, type, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(extension)
  listener: endCompilationUnit(8, )
