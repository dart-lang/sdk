parseUnit(inline)
  skipErrorTokens(inline)
  listener: beginCompilationUnit(inline)
  syntheticPreviousToken(inline)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(inline)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(inline)
      isReservedKeyword(class)
      indicatesMethodOrField(Class)
      parseFields(, null, null, null, null, null, null, null, , NoType(), inline, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, )
        reportRecoverableError(inline, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, inline, inline)
        listener: handleNoType()
        ensureIdentifierPotentiallyRecovered(, topLevelVariableDeclaration, false)
          listener: handleIdentifier(inline, topLevelVariableDeclaration)
        parseFieldInitializerOpt(inline, inline, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(class)
        ensureSemicolon(inline)
          reportRecoverableError(inline, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], inline, inline)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, inline, ;)
  listener: endTopLevelDeclaration(class)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, ;, class, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(Class, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, Class)
        parseClass(Class, class, class, Class)
          parseClassHeaderOpt(Class, class, class)
            parseClassExtendsOpt(Class, DeclarationHeaderKind.Class)
              listener: handleNoType(Class)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(Class)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(Class)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(Class, DeclarationKind.Class, Class)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(inline)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(inline)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(inline)
      isReservedKeyword(class)
      indicatesMethodOrField(Class)
      parseFields(}, null, null, null, null, null, null, null, }, NoType(), inline, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
        reportRecoverableError(inline, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, inline, inline)
        listener: handleNoType(})
        ensureIdentifierPotentiallyRecovered(}, topLevelVariableDeclaration, false)
          listener: handleIdentifier(inline, topLevelVariableDeclaration)
        parseFieldInitializerOpt(inline, inline, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(class)
        ensureSemicolon(inline)
          reportRecoverableError(inline, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], inline, inline)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, inline, ;)
  listener: endTopLevelDeclaration(class)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, ;, class, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(Class, classOrMixinDeclaration)
        listener: handleNoTypeVariables(=)
        listener: beginNamedMixinApplication(class, null, null, null, null, null, null, null, null, Class)
        parseNamedMixinApplication(Class, class, class)
          listener: handleIdentifier(Object, typeReference)
          listener: handleNoTypeArguments(with)
          listener: handleType(Object, null)
          parseMixinApplicationRest(Object)
            parseTypeList(with)
              listener: beginTypeList(Mixin)
              listener: handleIdentifier(Mixin, typeReference)
              listener: handleNoTypeArguments(;)
              listener: handleType(Mixin, null)
              listener: endTypeList(1)
            listener: handleNamedMixinApplicationWithClause(with)
          ensureSemicolon(Mixin)
          listener: endNamedMixinApplication(class, class, =, null, ;)
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(inline)
  listener: endCompilationUnit(4, )
