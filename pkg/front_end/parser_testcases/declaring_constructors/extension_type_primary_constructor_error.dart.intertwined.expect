parseUnit(extension)
  skipErrorTokens(extension)
  listener: beginCompilationUnit(extension)
  syntheticPreviousToken(extension)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, , extension, null, null, null, null, DirectiveContext(DirectiveState.Unknown))
      parseExtension(extension, null, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, null, extension, type)
          listener: handleNoTypeVariables(()
          listener: beginExtensionTypeDeclaration(null, extension, E)
          parsePrimaryConstructorOpt(E, null, true)
            listener: beginPrimaryConstructor(()
            parseFormalParameters(E, MemberKind.PrimaryConstructor)
              parseFormalParametersRest((, MemberKind.PrimaryConstructor)
                listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
                parseOptionalNamedParameters((, MemberKind.PrimaryConstructor)
                  listener: beginOptionalFormalParameters({)
                  rewriteAndRecover({, EmptyNamedParameterList, )
                    reportRecoverableError(}, EmptyNamedParameterList)
                      listener: handleRecoverableError(EmptyNamedParameterList, }, })
                    rewriter()
                  parseFormalParameter({, FormalParameterKind.optionalNamed, MemberKind.PrimaryConstructor)
                    parseMetadataStar({)
                      listener: beginMetadataStar()
                      listener: endMetadataStar(0)
                    listener: beginFormalParameter(, MemberKind.PrimaryConstructor, null, null, null)
                    listener: handleNoType({)
                    ensureIdentifier({, formalParameterDeclaration)
                      listener: handleIdentifier(, formalParameterDeclaration)
                    listener: handleFormalParameterWithoutValue(})
                    listener: endFormalParameter(null, null, null, null, , null, null, FormalParameterKind.optionalNamed, MemberKind.PrimaryConstructor)
                  listener: endOptionalFormalParameters(1, {, }, MemberKind.PrimaryConstructor)
                ensureCloseParen(}, ()
                  reportRecoverableError(extension, Message[Template(ExpectedButGot), Expected ')' before this., null, {string: )}])
                    listener: handleRecoverableError(Message[Template(ExpectedButGot), Expected ')' before this., null, {string: )}], extension, extension)
                listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor((, null, false, true)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, null, extension, type, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, null, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, null, extension, type)
          listener: handleNoTypeVariables(.)
          listener: beginExtensionTypeDeclaration(null, extension, E)
          parsePrimaryConstructorOpt(E, null, true)
            listener: beginPrimaryConstructor(.)
            ensureIdentifier(., primaryConstructorDeclaration)
              insertSyntheticIdentifier(., primaryConstructorDeclaration, message: null, messageOnToken: null)
                reportRecoverableError({, Message[Template(ExpectedIdentifier), Expected an identifier, but got '{'., Try inserting an identifier before '{'., {lexeme: {}])
                  listener: handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '{'., Try inserting an identifier before '{'., {lexeme: {}], {, {)
                rewriter()
              listener: handleIdentifier(, primaryConstructorDeclaration)
            reportRecoverableError(, MissingPrimaryConstructorParameters)
              listener: handleRecoverableError(MissingPrimaryConstructorParameters, {, {)
            listener: handleNoFormalParameters(, MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor(., null, true, true)
          parseClassOrMixinOrEnumImplementsOpt()
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(, DeclarationKind.ExtensionType, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, null, extension, type, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, null, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, null, extension, type)
          listener: handleNoTypeVariables(.)
          listener: beginExtensionTypeDeclaration(null, extension, E)
          parsePrimaryConstructorOpt(E, null, true)
            listener: beginPrimaryConstructor(.)
            ensureIdentifier(., primaryConstructorDeclaration)
              insertSyntheticIdentifier(., primaryConstructorDeclaration, message: null, messageOnToken: null)
                reportRecoverableError((, Message[Template(ExpectedIdentifier), Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}])
                  listener: handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}], (, ()
                rewriter()
              listener: handleIdentifier(, primaryConstructorDeclaration)
            parseFormalParameters(, MemberKind.PrimaryConstructor)
              parseFormalParametersRest((, MemberKind.PrimaryConstructor)
                listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
                listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor(., null, true, true)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, null, extension, type, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, null, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, null, extension, type)
          listener: handleNoTypeVariables({)
          listener: beginExtensionTypeDeclaration(null, extension, E)
          parsePrimaryConstructorOpt(E, const, true)
            reportRecoverableError(E, MissingPrimaryConstructor)
              listener: handleRecoverableError(MissingPrimaryConstructor, E, E)
            listener: handleNoPrimaryConstructor(E, const, true)
          parseClassOrMixinOrEnumImplementsOpt(E)
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(E, DeclarationKind.ExtensionType, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, null, extension, type, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, null, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, null, extension, type)
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionTypeDeclaration(null, extension, E)
          parsePrimaryConstructorOpt(>, null, true)
            listener: beginPrimaryConstructor(()
            parseFormalParameters(>, MemberKind.PrimaryConstructor)
              parseFormalParametersRest((, MemberKind.PrimaryConstructor)
                listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
                parseOptionalNamedParameters((, MemberKind.PrimaryConstructor)
                  listener: beginOptionalFormalParameters({)
                  rewriteAndRecover({, EmptyNamedParameterList, )
                    reportRecoverableError(}, EmptyNamedParameterList)
                      listener: handleRecoverableError(EmptyNamedParameterList, }, })
                    rewriter()
                  parseFormalParameter({, FormalParameterKind.optionalNamed, MemberKind.PrimaryConstructor)
                    parseMetadataStar({)
                      listener: beginMetadataStar()
                      listener: endMetadataStar(0)
                    listener: beginFormalParameter(, MemberKind.PrimaryConstructor, null, null, null)
                    listener: handleNoType({)
                    ensureIdentifier({, formalParameterDeclaration)
                      listener: handleIdentifier(, formalParameterDeclaration)
                    listener: handleFormalParameterWithoutValue(})
                    listener: endFormalParameter(null, null, null, null, , null, null, FormalParameterKind.optionalNamed, MemberKind.PrimaryConstructor)
                  listener: endOptionalFormalParameters(1, {, }, MemberKind.PrimaryConstructor)
                ensureCloseParen(}, ()
                  reportRecoverableError(extension, Message[Template(ExpectedButGot), Expected ')' before this., null, {string: )}])
                    listener: handleRecoverableError(Message[Template(ExpectedButGot), Expected ')' before this., null, {string: )}], extension, extension)
                listener: endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor((, null, false, true)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, null, extension, type, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, null, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, null, extension, type)
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionTypeDeclaration(null, extension, E)
          parsePrimaryConstructorOpt(>, const, true)
            reportRecoverableError(>, MissingPrimaryConstructor)
              listener: handleRecoverableError(MissingPrimaryConstructor, >, >)
            listener: handleNoPrimaryConstructor(>, const, true)
          parseClassOrMixinOrEnumImplementsOpt(>)
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(>, DeclarationKind.ExtensionType, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, null, extension, type, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, null, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, null, extension, type)
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionTypeDeclaration(null, extension, E)
          parsePrimaryConstructorOpt(>, null, true)
            listener: beginPrimaryConstructor(.)
            ensureIdentifier(., primaryConstructorDeclaration)
              insertSyntheticIdentifier(., primaryConstructorDeclaration, message: null, messageOnToken: null)
                reportRecoverableError({, Message[Template(ExpectedIdentifier), Expected an identifier, but got '{'., Try inserting an identifier before '{'., {lexeme: {}])
                  listener: handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '{'., Try inserting an identifier before '{'., {lexeme: {}], {, {)
                rewriter()
              listener: handleIdentifier(, primaryConstructorDeclaration)
            reportRecoverableError(, MissingPrimaryConstructorParameters)
              listener: handleRecoverableError(MissingPrimaryConstructorParameters, {, {)
            listener: handleNoFormalParameters(, MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor(., null, true, true)
          parseClassOrMixinOrEnumImplementsOpt()
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(, DeclarationKind.ExtensionType, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, null, extension, type, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, null, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, null, extension, type)
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionTypeDeclaration(null, extension, E)
          parsePrimaryConstructorOpt(>, null, true)
            listener: beginPrimaryConstructor(.)
            ensureIdentifier(., primaryConstructorDeclaration)
              insertSyntheticIdentifier(., primaryConstructorDeclaration, message: null, messageOnToken: null)
                reportRecoverableError((, Message[Template(ExpectedIdentifier), Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}])
                  listener: handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}], (, ()
                rewriter()
              listener: handleIdentifier(, primaryConstructorDeclaration)
            parseFormalParameters(, MemberKind.PrimaryConstructor)
              parseFormalParametersRest((, MemberKind.PrimaryConstructor)
                listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
                listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor(., null, true, true)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, null, extension, type, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, null, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, null, extension, type)
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionTypeDeclaration(null, extension, E)
          parsePrimaryConstructorOpt(>, const, true)
            listener: beginPrimaryConstructor(.)
            ensureIdentifier(., primaryConstructorDeclaration)
              insertSyntheticIdentifier(., primaryConstructorDeclaration, message: null, messageOnToken: null)
                reportRecoverableError({, Message[Template(ExpectedIdentifier), Expected an identifier, but got '{'., Try inserting an identifier before '{'., {lexeme: {}])
                  listener: handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '{'., Try inserting an identifier before '{'., {lexeme: {}], {, {)
                rewriter()
              listener: handleIdentifier(, primaryConstructorDeclaration)
            reportRecoverableError(, MissingPrimaryConstructorParameters)
              listener: handleRecoverableError(MissingPrimaryConstructorParameters, {, {)
            listener: handleNoFormalParameters(, MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor(., const, true, true)
          parseClassOrMixinOrEnumImplementsOpt()
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(, DeclarationKind.ExtensionType, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, null, extension, type, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, null, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, null, extension, type)
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionTypeDeclaration(null, extension, E)
          parsePrimaryConstructorOpt(>, const, true)
            listener: beginPrimaryConstructor(.)
            ensureIdentifier(., primaryConstructorDeclaration)
              insertSyntheticIdentifier(., primaryConstructorDeclaration, message: null, messageOnToken: null)
                reportRecoverableError((, Message[Template(ExpectedIdentifier), Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}])
                  listener: handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}], (, ()
                rewriter()
              listener: handleIdentifier(, primaryConstructorDeclaration)
            parseFormalParameters(, MemberKind.PrimaryConstructor)
              parseFormalParametersRest((, MemberKind.PrimaryConstructor)
                listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
                listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor(., const, true, true)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, null, extension, type, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, null, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, null, extension, type)
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionTypeDeclaration(null, extension, E)
          parsePrimaryConstructorOpt(>, null, true)
            listener: beginPrimaryConstructor(.)
            ensureIdentifier(., primaryConstructorDeclaration)
              listener: handleIdentifier(named, primaryConstructorDeclaration)
            reportRecoverableError(named, MissingPrimaryConstructorParameters)
              listener: handleRecoverableError(MissingPrimaryConstructorParameters, named, named)
            listener: handleNoFormalParameters(named, MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor(., null, true, true)
          parseClassOrMixinOrEnumImplementsOpt(named)
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(named, DeclarationKind.ExtensionType, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, null, extension, type, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, null, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, null, extension, type)
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionTypeDeclaration(null, extension, E)
          parsePrimaryConstructorOpt(>, null, true)
            listener: beginPrimaryConstructor(.)
            ensureIdentifier(., primaryConstructorDeclaration)
              listener: handleIdentifier(named, primaryConstructorDeclaration)
            parseFormalParameters(named, MemberKind.PrimaryConstructor)
              parseFormalParametersRest((, MemberKind.PrimaryConstructor)
                listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
                listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor(., null, true, true)
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.ExtensionType, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, null, extension, type, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, }, extension, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseExtension(extension, null, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionTypeDeclaration(extension, type, null, extension, type)
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionTypeDeclaration(null, extension, E)
          parsePrimaryConstructorOpt(>, const, true)
            listener: beginPrimaryConstructor(.)
            ensureIdentifier(., primaryConstructorDeclaration)
              listener: handleIdentifier(named, primaryConstructorDeclaration)
            reportRecoverableError(named, MissingPrimaryConstructorParameters)
              listener: handleRecoverableError(MissingPrimaryConstructorParameters, named, named)
            listener: handleNoFormalParameters(named, MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor(., const, true, true)
          parseClassOrMixinOrEnumImplementsOpt(named)
            listener: handleImplements(null, 0)
          parseClassOrMixinOrExtensionBody(named, DeclarationKind.ExtensionType, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.ExtensionType, 0, {, })
          listener: endExtensionTypeDeclaration(extension, null, extension, type, })
  listener: endTopLevelDeclaration(})
  reportAllErrorTokens(extension)
  listener: endCompilationUnit(13, )
