parseUnit(enum)
  skipErrorTokens(enum)
  listener: beginCompilationUnit(enum)
  syntheticPreviousToken(enum)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(enum)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(enum, , enum, null, null, null, null, DirectiveContext(DirectiveState.Unknown))
      parseEnum(enum, null, enum)
        listener: beginEnumDeclarationPrelude(enum)
        ensureIdentifier(enum, enumDeclaration)
          listener: handleIdentifier(E, enumDeclaration)
        listener: handleNoTypeVariables(()
        listener: beginEnumDeclaration(enum, null, enum, E)
        parsePrimaryConstructorOpt(E, null, false)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(E, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false, false)
        parseEnumHeaderOpt(), enum)
          parseEnumWithClauseOpt())
            listener: handleEnumNoWithClause()
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
        listener: handleEnumHeader(null, enum, {)
        listener: beginEnumBody({)
        listener: handleEnumElements(}, 0)
        listener: endEnumBody({, })
        listener: endEnumDeclaration(enum, enum, {, 0, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(enum)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(enum, }, enum, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseEnum(enum, null, enum)
        listener: beginEnumDeclarationPrelude(enum)
        ensureIdentifier(const, enumDeclaration)
          listener: handleIdentifier(E, enumDeclaration)
        listener: handleNoTypeVariables(()
        listener: beginEnumDeclaration(enum, null, enum, E)
        parsePrimaryConstructorOpt(E, const, false)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(E, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, const, false, false)
        parseEnumHeaderOpt(), enum)
          parseEnumWithClauseOpt())
            listener: handleEnumNoWithClause()
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
        listener: handleEnumHeader(null, enum, {)
        listener: beginEnumBody({)
        listener: handleEnumElements(}, 0)
        listener: endEnumBody({, })
        listener: endEnumDeclaration(enum, enum, {, 0, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(enum)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(enum, }, enum, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseEnum(enum, null, enum)
        listener: beginEnumDeclarationPrelude(enum)
        ensureIdentifier(enum, enumDeclaration)
          listener: handleIdentifier(E, enumDeclaration)
        listener: beginTypeVariables(<)
        listener: beginMetadataStar(T)
        listener: endMetadataStar(0)
        listener: handleIdentifier(T, typeVariableDeclaration)
        listener: beginTypeVariable(T)
        listener: handleTypeVariablesDefined(T, 1)
        listener: handleNoType(T)
        listener: endTypeVariable(>, 0, null, null)
        listener: endTypeVariables(<, >)
        listener: beginEnumDeclaration(enum, null, enum, E)
        parsePrimaryConstructorOpt(>, null, false)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(>, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, null, false, false)
        parseEnumHeaderOpt(), enum)
          parseEnumWithClauseOpt())
            listener: handleEnumNoWithClause()
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
        listener: handleEnumHeader(null, enum, {)
        listener: beginEnumBody({)
        listener: handleEnumElements(}, 0)
        listener: endEnumBody({, })
        listener: endEnumDeclaration(enum, enum, {, 0, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(enum)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(enum, }, enum, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseEnum(enum, null, enum)
        listener: beginEnumDeclarationPrelude(enum)
        ensureIdentifier(const, enumDeclaration)
          listener: handleIdentifier(E, enumDeclaration)
        listener: beginTypeVariables(<)
        listener: beginMetadataStar(T)
        listener: endMetadataStar(0)
        listener: handleIdentifier(T, typeVariableDeclaration)
        listener: beginTypeVariable(T)
        listener: handleTypeVariablesDefined(T, 1)
        listener: handleNoType(T)
        listener: endTypeVariable(>, 0, null, null)
        listener: endTypeVariables(<, >)
        listener: beginEnumDeclaration(enum, null, enum, E)
        parsePrimaryConstructorOpt(>, const, false)
          listener: beginPrimaryConstructor(()
          parseFormalParameters(>, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor((, const, false, false)
        parseEnumHeaderOpt(), enum)
          parseEnumWithClauseOpt())
            listener: handleEnumNoWithClause()
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
        listener: handleEnumHeader(null, enum, {)
        listener: beginEnumBody({)
        listener: handleEnumElements(}, 0)
        listener: endEnumBody({, })
        listener: endEnumDeclaration(enum, enum, {, 0, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(enum)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(enum, }, enum, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseEnum(enum, null, enum)
        listener: beginEnumDeclarationPrelude(enum)
        ensureIdentifier(enum, enumDeclaration)
          listener: handleIdentifier(E, enumDeclaration)
        listener: beginTypeVariables(<)
        listener: beginMetadataStar(T)
        listener: endMetadataStar(0)
        listener: handleIdentifier(T, typeVariableDeclaration)
        listener: beginTypeVariable(T)
        listener: handleTypeVariablesDefined(T, 1)
        listener: handleNoType(T)
        listener: endTypeVariable(>, 0, null, null)
        listener: endTypeVariables(<, >)
        listener: beginEnumDeclaration(enum, null, enum, E)
        parsePrimaryConstructorOpt(>, null, false)
          listener: beginPrimaryConstructor(.)
          ensureIdentifier(., primaryConstructorDeclaration)
            listener: handleIdentifier(named, primaryConstructorDeclaration)
          parseFormalParameters(named, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor(., null, true, false)
        parseEnumHeaderOpt(), enum)
          parseEnumWithClauseOpt())
            listener: handleEnumNoWithClause()
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
        listener: handleEnumHeader(null, enum, {)
        listener: beginEnumBody({)
        listener: handleEnumElements(}, 0)
        listener: endEnumBody({, })
        listener: endEnumDeclaration(enum, enum, {, 0, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(enum)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(enum, }, enum, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseEnum(enum, null, enum)
        listener: beginEnumDeclarationPrelude(enum)
        ensureIdentifier(const, enumDeclaration)
          listener: handleIdentifier(E, enumDeclaration)
        listener: beginTypeVariables(<)
        listener: beginMetadataStar(T)
        listener: endMetadataStar(0)
        listener: handleIdentifier(T, typeVariableDeclaration)
        listener: beginTypeVariable(T)
        listener: handleTypeVariablesDefined(T, 1)
        listener: handleNoType(T)
        listener: endTypeVariable(>, 0, null, null)
        listener: endTypeVariables(<, >)
        listener: beginEnumDeclaration(enum, null, enum, E)
        parsePrimaryConstructorOpt(>, const, false)
          listener: beginPrimaryConstructor(.)
          ensureIdentifier(., primaryConstructorDeclaration)
            listener: handleIdentifier(named, primaryConstructorDeclaration)
          parseFormalParameters(named, MemberKind.PrimaryConstructor)
            parseFormalParametersRest((, MemberKind.PrimaryConstructor)
              listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
              listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
          listener: endPrimaryConstructor(., const, true, false)
        parseEnumHeaderOpt(), enum)
          parseEnumWithClauseOpt())
            listener: handleEnumNoWithClause()
          parseClassOrMixinOrEnumImplementsOpt())
            listener: handleImplements(null, 0)
        listener: handleEnumHeader(null, enum, {)
        listener: beginEnumBody({)
        listener: handleEnumElements(}, 0)
        listener: endEnumBody({, })
        listener: endEnumDeclaration(enum, enum, {, 0, })
  listener: endTopLevelDeclaration(})
  reportAllErrorTokens(enum)
  listener: endCompilationUnit(6, )
