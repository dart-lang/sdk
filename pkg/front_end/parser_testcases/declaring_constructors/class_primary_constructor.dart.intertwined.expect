parseUnit(class)
  skipErrorTokens(class)
  listener: beginCompilationUnit(class)
  syntheticPreviousToken(class)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, , class, null, null, null, null, DirectiveContext(DirectiveState.Unknown))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(C, classOrMixinDeclaration)
        listener: handleNoTypeVariables(()
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
        parseClass(C, class, class, null, C)
          parsePrimaryConstructorOpt(C, null, false)
            listener: beginPrimaryConstructor(()
            parseFormalParameters(C, MemberKind.PrimaryConstructor)
              parseFormalParametersRest((, MemberKind.PrimaryConstructor)
                listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
                listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor((, null, false, false)
          parseClassHeaderOpt(), class, class)
            parseClassExtendsOpt(), DeclarationHeaderKind.Class)
              listener: handleNoType())
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt())
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt())
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.Class, C)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, }, class, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(const, classOrMixinDeclaration)
          listener: handleIdentifier(C, classOrMixinDeclaration)
        listener: handleNoTypeVariables(()
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
        parseClass(C, class, class, const, C)
          parsePrimaryConstructorOpt(C, const, false)
            listener: beginPrimaryConstructor(()
            parseFormalParameters(C, MemberKind.PrimaryConstructor)
              parseFormalParametersRest((, MemberKind.PrimaryConstructor)
                listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
                listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor((, const, false, false)
          parseClassHeaderOpt(), class, class)
            parseClassExtendsOpt(), DeclarationHeaderKind.Class)
              listener: handleNoType())
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt())
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt())
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.Class, C)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, }, class, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(C, classOrMixinDeclaration)
        listener: beginTypeVariables(<)
        listener: beginMetadataStar(T)
        listener: endMetadataStar(0)
        listener: handleIdentifier(T, typeVariableDeclaration)
        listener: beginTypeVariable(T)
        listener: handleTypeVariablesDefined(T, 1)
        listener: handleNoType(T)
        listener: endTypeVariable(>, 0, null, null)
        listener: endTypeVariables(<, >)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
        parseClass(>, class, class, null, C)
          parsePrimaryConstructorOpt(>, null, false)
            listener: beginPrimaryConstructor(()
            parseFormalParameters(>, MemberKind.PrimaryConstructor)
              parseFormalParametersRest((, MemberKind.PrimaryConstructor)
                listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
                listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor((, null, false, false)
          parseClassHeaderOpt(), class, class)
            parseClassExtendsOpt(), DeclarationHeaderKind.Class)
              listener: handleNoType())
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt())
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt())
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.Class, C)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, }, class, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(const, classOrMixinDeclaration)
          listener: handleIdentifier(C, classOrMixinDeclaration)
        listener: beginTypeVariables(<)
        listener: beginMetadataStar(T)
        listener: endMetadataStar(0)
        listener: handleIdentifier(T, typeVariableDeclaration)
        listener: beginTypeVariable(T)
        listener: handleTypeVariablesDefined(T, 1)
        listener: handleNoType(T)
        listener: endTypeVariable(>, 0, null, null)
        listener: endTypeVariables(<, >)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
        parseClass(>, class, class, const, C)
          parsePrimaryConstructorOpt(>, const, false)
            listener: beginPrimaryConstructor(()
            parseFormalParameters(>, MemberKind.PrimaryConstructor)
              parseFormalParametersRest((, MemberKind.PrimaryConstructor)
                listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
                listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor((, const, false, false)
          parseClassHeaderOpt(), class, class)
            parseClassExtendsOpt(), DeclarationHeaderKind.Class)
              listener: handleNoType())
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt())
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt())
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.Class, C)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, }, class, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(C, classOrMixinDeclaration)
        listener: beginTypeVariables(<)
        listener: beginMetadataStar(T)
        listener: endMetadataStar(0)
        listener: handleIdentifier(T, typeVariableDeclaration)
        listener: beginTypeVariable(T)
        listener: handleTypeVariablesDefined(T, 1)
        listener: handleNoType(T)
        listener: endTypeVariable(>, 0, null, null)
        listener: endTypeVariables(<, >)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
        parseClass(>, class, class, null, C)
          parsePrimaryConstructorOpt(>, null, false)
            listener: beginPrimaryConstructor(.)
            ensureIdentifier(., primaryConstructorDeclaration)
              listener: handleIdentifier(named, primaryConstructorDeclaration)
            parseFormalParameters(named, MemberKind.PrimaryConstructor)
              parseFormalParametersRest((, MemberKind.PrimaryConstructor)
                listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
                listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor(., null, true, false)
          parseClassHeaderOpt(), class, class)
            parseClassExtendsOpt(), DeclarationHeaderKind.Class)
              listener: handleNoType())
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt())
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt())
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.Class, C)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, }, class, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(const, classOrMixinDeclaration)
          listener: handleIdentifier(C, classOrMixinDeclaration)
        listener: beginTypeVariables(<)
        listener: beginMetadataStar(T)
        listener: endMetadataStar(0)
        listener: handleIdentifier(T, typeVariableDeclaration)
        listener: beginTypeVariable(T)
        listener: handleTypeVariablesDefined(T, 1)
        listener: handleNoType(T)
        listener: endTypeVariable(>, 0, null, null)
        listener: endTypeVariables(<, >)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
        parseClass(>, class, class, const, C)
          parsePrimaryConstructorOpt(>, const, false)
            listener: beginPrimaryConstructor(.)
            ensureIdentifier(., primaryConstructorDeclaration)
              listener: handleIdentifier(named, primaryConstructorDeclaration)
            parseFormalParameters(named, MemberKind.PrimaryConstructor)
              parseFormalParametersRest((, MemberKind.PrimaryConstructor)
                listener: beginFormalParameters((, MemberKind.PrimaryConstructor)
                listener: endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
            listener: endPrimaryConstructor(., const, true, false)
          parseClassHeaderOpt(), class, class)
            parseClassExtendsOpt(), DeclarationHeaderKind.Class)
              listener: handleNoType())
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt())
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt())
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(), DeclarationKind.Class, C)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(})
  reportAllErrorTokens(class)
  listener: endCompilationUnit(6, )
