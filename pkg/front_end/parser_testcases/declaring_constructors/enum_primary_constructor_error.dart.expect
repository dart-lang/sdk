Problems reported:

parser/declaring_constructors/enum_primary_constructor_error:1:10: Named parameter lists cannot be empty.
enum E( {}
         ^

parser/declaring_constructors/enum_primary_constructor_error:2:1: Expected ')' before this.
enum E) {}
^^^^

parser/declaring_constructors/enum_primary_constructor_error:3:9: Expected an identifier, but got '{'.
enum E. {}
        ^

parser/declaring_constructors/enum_primary_constructor_error:4:8: Expected an identifier, but got '('.
enum E.() {}
       ^

parser/declaring_constructors/enum_primary_constructor_error:5:6: 'const' can only be used together with a primary constructor declaration.
enum const E {}
     ^^^^^

parser/declaring_constructors/enum_primary_constructor_error:6:13: Named parameter lists cannot be empty.
enum E<T>( {}
            ^

parser/declaring_constructors/enum_primary_constructor_error:7:1: Expected ')' before this.
enum E<T>) {}
^^^^

parser/declaring_constructors/enum_primary_constructor_error:8:6: 'const' can only be used together with a primary constructor declaration.
enum const E<T> {}
     ^^^^^

parser/declaring_constructors/enum_primary_constructor_error:9:12: Expected an identifier, but got '{'.
enum E<T>. {}
           ^

parser/declaring_constructors/enum_primary_constructor_error:10:11: Expected an identifier, but got '('.
enum E<T>.() {}
          ^

parser/declaring_constructors/enum_primary_constructor_error:11:18: Expected an identifier, but got '{'.
enum const E<T>. {}
                 ^

parser/declaring_constructors/enum_primary_constructor_error:12:17: Expected an identifier, but got '('.
enum const E<T>.() {}
                ^

beginCompilationUnit(enum)
  beginMetadataStar(enum)
  endMetadataStar(0)
  beginEnumDeclarationPrelude(enum)
    handleIdentifier(E, enumDeclaration)
    handleNoTypeVariables(()
    beginEnumDeclaration(enum, null, enum, E)
      beginPrimaryConstructor(()
        beginFormalParameters((, MemberKind.PrimaryConstructor)
          beginOptionalFormalParameters({)
            handleRecoverableError(EmptyNamedParameterList, }, })
            beginMetadataStar()
            endMetadataStar(0)
            beginFormalParameter(, MemberKind.PrimaryConstructor, null, null, null)
              handleNoType({)
              handleIdentifier(, formalParameterDeclaration)
              handleFormalParameterWithoutValue(})
            endFormalParameter(null, null, null, null, , null, null, FormalParameterKind.optionalNamed, MemberKind.PrimaryConstructor)
          endOptionalFormalParameters(1, {, }, MemberKind.PrimaryConstructor)
          handleRecoverableError(Message[Template(ExpectedButGot), Expected ')' before this., null, {string: )}], enum, enum)
        endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
      endPrimaryConstructor((, null, false, false)
      handleEnumNoWithClause()
      handleImplements(null, 0)
      handleEnumHeader(null, enum, {)
      beginEnumBody({)
        handleEnumElements(}, 0)
      endEnumBody({, })
    endEnumDeclaration(enum, enum, {, 0, })
  endTopLevelDeclaration(})
  beginMetadataStar(enum)
  endMetadataStar(0)
  beginEnumDeclarationPrelude(enum)
    handleIdentifier(E, enumDeclaration)
    handleNoTypeVariables(.)
    beginEnumDeclaration(enum, null, enum, E)
      beginPrimaryConstructor(.)
        handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '{'., Try inserting an identifier before '{'., {lexeme: {}], {, {)
        handleIdentifier(, primaryConstructorDeclaration)
        handleNoFormalParameters(, MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., null, true, false)
      handleEnumNoWithClause()
      handleImplements(null, 0)
      handleEnumHeader(null, enum, {)
      beginEnumBody({)
        handleEnumElements(}, 0)
      endEnumBody({, })
    endEnumDeclaration(enum, enum, {, 0, })
  endTopLevelDeclaration(})
  beginMetadataStar(enum)
  endMetadataStar(0)
  beginEnumDeclarationPrelude(enum)
    handleIdentifier(E, enumDeclaration)
    handleNoTypeVariables(.)
    beginEnumDeclaration(enum, null, enum, E)
      beginPrimaryConstructor(.)
        handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}], (, ()
        handleIdentifier(, primaryConstructorDeclaration)
        beginFormalParameters((, MemberKind.PrimaryConstructor)
        endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., null, true, false)
      handleEnumNoWithClause()
      handleImplements(null, 0)
      handleEnumHeader(null, enum, {)
      beginEnumBody({)
        handleEnumElements(}, 0)
      endEnumBody({, })
    endEnumDeclaration(enum, enum, {, 0, })
  endTopLevelDeclaration(})
  beginMetadataStar(enum)
  endMetadataStar(0)
  beginEnumDeclarationPrelude(enum)
    handleIdentifier(E, enumDeclaration)
    handleNoTypeVariables({)
    beginEnumDeclaration(enum, null, enum, E)
      handleRecoverableError(ConstWithoutPrimaryConstructor, const, const)
      handleNoPrimaryConstructor(E, const, false)
      handleEnumNoWithClause()
      handleImplements(null, 0)
      handleEnumHeader(null, enum, {)
      beginEnumBody({)
        handleEnumElements(}, 0)
      endEnumBody({, })
    endEnumDeclaration(enum, enum, {, 0, })
  endTopLevelDeclaration(})
  beginMetadataStar(enum)
  endMetadataStar(0)
  beginEnumDeclarationPrelude(enum)
    handleIdentifier(E, enumDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginEnumDeclaration(enum, null, enum, E)
      beginPrimaryConstructor(()
        beginFormalParameters((, MemberKind.PrimaryConstructor)
          beginOptionalFormalParameters({)
            handleRecoverableError(EmptyNamedParameterList, }, })
            beginMetadataStar()
            endMetadataStar(0)
            beginFormalParameter(, MemberKind.PrimaryConstructor, null, null, null)
              handleNoType({)
              handleIdentifier(, formalParameterDeclaration)
              handleFormalParameterWithoutValue(})
            endFormalParameter(null, null, null, null, , null, null, FormalParameterKind.optionalNamed, MemberKind.PrimaryConstructor)
          endOptionalFormalParameters(1, {, }, MemberKind.PrimaryConstructor)
          handleRecoverableError(Message[Template(ExpectedButGot), Expected ')' before this., null, {string: )}], enum, enum)
        endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
      endPrimaryConstructor((, null, false, false)
      handleEnumNoWithClause()
      handleImplements(null, 0)
      handleEnumHeader(null, enum, {)
      beginEnumBody({)
        handleEnumElements(}, 0)
      endEnumBody({, })
    endEnumDeclaration(enum, enum, {, 0, })
  endTopLevelDeclaration(})
  beginMetadataStar(enum)
  endMetadataStar(0)
  beginEnumDeclarationPrelude(enum)
    handleIdentifier(E, enumDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginEnumDeclaration(enum, null, enum, E)
      handleRecoverableError(ConstWithoutPrimaryConstructor, const, const)
      handleNoPrimaryConstructor(>, const, false)
      handleEnumNoWithClause()
      handleImplements(null, 0)
      handleEnumHeader(null, enum, {)
      beginEnumBody({)
        handleEnumElements(}, 0)
      endEnumBody({, })
    endEnumDeclaration(enum, enum, {, 0, })
  endTopLevelDeclaration(})
  beginMetadataStar(enum)
  endMetadataStar(0)
  beginEnumDeclarationPrelude(enum)
    handleIdentifier(E, enumDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginEnumDeclaration(enum, null, enum, E)
      beginPrimaryConstructor(.)
        handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '{'., Try inserting an identifier before '{'., {lexeme: {}], {, {)
        handleIdentifier(, primaryConstructorDeclaration)
        handleNoFormalParameters(, MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., null, true, false)
      handleEnumNoWithClause()
      handleImplements(null, 0)
      handleEnumHeader(null, enum, {)
      beginEnumBody({)
        handleEnumElements(}, 0)
      endEnumBody({, })
    endEnumDeclaration(enum, enum, {, 0, })
  endTopLevelDeclaration(})
  beginMetadataStar(enum)
  endMetadataStar(0)
  beginEnumDeclarationPrelude(enum)
    handleIdentifier(E, enumDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginEnumDeclaration(enum, null, enum, E)
      beginPrimaryConstructor(.)
        handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}], (, ()
        handleIdentifier(, primaryConstructorDeclaration)
        beginFormalParameters((, MemberKind.PrimaryConstructor)
        endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., null, true, false)
      handleEnumNoWithClause()
      handleImplements(null, 0)
      handleEnumHeader(null, enum, {)
      beginEnumBody({)
        handleEnumElements(}, 0)
      endEnumBody({, })
    endEnumDeclaration(enum, enum, {, 0, })
  endTopLevelDeclaration(})
  beginMetadataStar(enum)
  endMetadataStar(0)
  beginEnumDeclarationPrelude(enum)
    handleIdentifier(E, enumDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginEnumDeclaration(enum, null, enum, E)
      beginPrimaryConstructor(.)
        handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '{'., Try inserting an identifier before '{'., {lexeme: {}], {, {)
        handleIdentifier(, primaryConstructorDeclaration)
        handleNoFormalParameters(, MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., const, true, false)
      handleEnumNoWithClause()
      handleImplements(null, 0)
      handleEnumHeader(null, enum, {)
      beginEnumBody({)
        handleEnumElements(}, 0)
      endEnumBody({, })
    endEnumDeclaration(enum, enum, {, 0, })
  endTopLevelDeclaration(})
  beginMetadataStar(enum)
  endMetadataStar(0)
  beginEnumDeclarationPrelude(enum)
    handleIdentifier(E, enumDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginEnumDeclaration(enum, null, enum, E)
      beginPrimaryConstructor(.)
        handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}], (, ()
        handleIdentifier(, primaryConstructorDeclaration)
        beginFormalParameters((, MemberKind.PrimaryConstructor)
        endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., const, true, false)
      handleEnumNoWithClause()
      handleImplements(null, 0)
      handleEnumHeader(null, enum, {)
      beginEnumBody({)
        handleEnumElements(}, 0)
      endEnumBody({, })
    endEnumDeclaration(enum, enum, {, 0, })
  endTopLevelDeclaration(})
  beginMetadataStar(enum)
  endMetadataStar(0)
  beginEnumDeclarationPrelude(enum)
    handleIdentifier(E, enumDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginEnumDeclaration(enum, null, enum, E)
      beginPrimaryConstructor(.)
        handleIdentifier(named, primaryConstructorDeclaration)
        handleNoFormalParameters(named, MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., null, true, false)
      handleEnumNoWithClause()
      handleImplements(null, 0)
      handleEnumHeader(null, enum, {)
      beginEnumBody({)
        handleEnumElements(}, 0)
      endEnumBody({, })
    endEnumDeclaration(enum, enum, {, 0, })
  endTopLevelDeclaration(})
  beginMetadataStar(enum)
  endMetadataStar(0)
  beginEnumDeclarationPrelude(enum)
    handleIdentifier(E, enumDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginEnumDeclaration(enum, null, enum, E)
      beginPrimaryConstructor(.)
        handleIdentifier(named, primaryConstructorDeclaration)
        beginFormalParameters((, MemberKind.PrimaryConstructor)
        endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., null, true, false)
      handleEnumNoWithClause()
      handleImplements(null, 0)
      handleEnumHeader(null, enum, {)
      beginEnumBody({)
        handleEnumElements(}, 0)
      endEnumBody({, })
    endEnumDeclaration(enum, enum, {, 0, })
  endTopLevelDeclaration(})
  beginMetadataStar(enum)
  endMetadataStar(0)
  beginEnumDeclarationPrelude(enum)
    handleIdentifier(E, enumDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginEnumDeclaration(enum, null, enum, E)
      beginPrimaryConstructor(.)
        handleIdentifier(named, primaryConstructorDeclaration)
        handleNoFormalParameters(named, MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., const, true, false)
      handleEnumNoWithClause()
      handleImplements(null, 0)
      handleEnumHeader(null, enum, {)
      beginEnumBody({)
        handleEnumElements(}, 0)
      endEnumBody({, })
    endEnumDeclaration(enum, enum, {, 0, })
  endTopLevelDeclaration(})
endCompilationUnit(13, )
