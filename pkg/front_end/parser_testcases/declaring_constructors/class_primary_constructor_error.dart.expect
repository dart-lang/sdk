Problems reported:

parser/declaring_constructors/class_primary_constructor_error:1:11: Named parameter lists cannot be empty.
class C( {}
          ^

parser/declaring_constructors/class_primary_constructor_error:2:1: Expected ')' before this.
class C) {}
^^^^^

parser/declaring_constructors/class_primary_constructor_error:3:10: Expected an identifier, but got '{'.
class C. {}
         ^

parser/declaring_constructors/class_primary_constructor_error:4:9: Expected an identifier, but got '('.
class C.() {}
        ^

parser/declaring_constructors/class_primary_constructor_error:5:7: 'const' can only be used together with a primary constructor declaration.
class const C {}
      ^^^^^

parser/declaring_constructors/class_primary_constructor_error:6:14: Named parameter lists cannot be empty.
class C<T>( {}
             ^

parser/declaring_constructors/class_primary_constructor_error:7:1: Expected ')' before this.
class C<T>) {}
^^^^^

parser/declaring_constructors/class_primary_constructor_error:8:7: 'const' can only be used together with a primary constructor declaration.
class const C<T> {}
      ^^^^^

parser/declaring_constructors/class_primary_constructor_error:9:13: Expected an identifier, but got '{'.
class C<T>. {}
            ^

parser/declaring_constructors/class_primary_constructor_error:10:12: Expected an identifier, but got '('.
class C<T>.() {}
           ^

parser/declaring_constructors/class_primary_constructor_error:11:19: Expected an identifier, but got '{'.
class const C<T>. {}
                  ^

parser/declaring_constructors/class_primary_constructor_error:12:18: Expected an identifier, but got '('.
class const C<T>.() {}
                 ^

parser/declaring_constructors/class_primary_constructor_error:16:7: 'const' can only be used together with a primary constructor declaration.
class const C = O with M;
      ^^^^^

parser/declaring_constructors/class_primary_constructor_error:17:7: 'const' can only be used together with a primary constructor declaration.
class const C<T> = O with M;
      ^^^^^

beginCompilationUnit(class)
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    handleNoTypeVariables(()
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      beginPrimaryConstructor(()
        beginFormalParameters((, MemberKind.PrimaryConstructor)
          beginOptionalFormalParameters({)
            handleRecoverableError(EmptyNamedParameterList, }, })
            beginMetadataStar()
            endMetadataStar(0)
            beginFormalParameter(, MemberKind.PrimaryConstructor, null, null, null)
              handleNoType({)
              handleIdentifier(, formalParameterDeclaration)
              handleFormalParameterWithoutValue(})
            endFormalParameter(null, null, null, , null, null, FormalParameterKind.optionalNamed, MemberKind.PrimaryConstructor)
          endOptionalFormalParameters(1, {, }, MemberKind.PrimaryConstructor)
          handleRecoverableError(Message[Template(ExpectedButGot), Expected ')' before this., null, {string: )}], class, class)
        endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
      endPrimaryConstructor((, null, false, false)
      handleNoType())
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    handleNoTypeVariables(.)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      beginPrimaryConstructor(.)
        handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '{'., Try inserting an identifier before '{'., {lexeme: {}], {, {)
        handleIdentifier(, primaryConstructorDeclaration)
        handleNoFormalParameters(, MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., null, true, false)
      handleNoType()
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    handleNoTypeVariables(.)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      beginPrimaryConstructor(.)
        handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}], (, ()
        handleIdentifier(, primaryConstructorDeclaration)
        beginFormalParameters((, MemberKind.PrimaryConstructor)
        endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., null, true, false)
      handleNoType())
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    handleNoTypeVariables({)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      handleRecoverableError(ConstWithoutPrimaryConstructor, const, const)
      handleNoPrimaryConstructor(C, const, false)
      handleNoType(C)
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      beginPrimaryConstructor(()
        beginFormalParameters((, MemberKind.PrimaryConstructor)
          beginOptionalFormalParameters({)
            handleRecoverableError(EmptyNamedParameterList, }, })
            beginMetadataStar()
            endMetadataStar(0)
            beginFormalParameter(, MemberKind.PrimaryConstructor, null, null, null)
              handleNoType({)
              handleIdentifier(, formalParameterDeclaration)
              handleFormalParameterWithoutValue(})
            endFormalParameter(null, null, null, , null, null, FormalParameterKind.optionalNamed, MemberKind.PrimaryConstructor)
          endOptionalFormalParameters(1, {, }, MemberKind.PrimaryConstructor)
          handleRecoverableError(Message[Template(ExpectedButGot), Expected ')' before this., null, {string: )}], class, class)
        endFormalParameters(1, (, ), MemberKind.PrimaryConstructor)
      endPrimaryConstructor((, null, false, false)
      handleNoType())
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      handleRecoverableError(ConstWithoutPrimaryConstructor, const, const)
      handleNoPrimaryConstructor(>, const, false)
      handleNoType(>)
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      beginPrimaryConstructor(.)
        handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '{'., Try inserting an identifier before '{'., {lexeme: {}], {, {)
        handleIdentifier(, primaryConstructorDeclaration)
        handleNoFormalParameters(, MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., null, true, false)
      handleNoType()
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      beginPrimaryConstructor(.)
        handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}], (, ()
        handleIdentifier(, primaryConstructorDeclaration)
        beginFormalParameters((, MemberKind.PrimaryConstructor)
        endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., null, true, false)
      handleNoType())
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      beginPrimaryConstructor(.)
        handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '{'., Try inserting an identifier before '{'., {lexeme: {}], {, {)
        handleIdentifier(, primaryConstructorDeclaration)
        handleNoFormalParameters(, MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., const, true, false)
      handleNoType()
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      beginPrimaryConstructor(.)
        handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got '('., Try inserting an identifier before '('., {lexeme: (}], (, ()
        handleIdentifier(, primaryConstructorDeclaration)
        beginFormalParameters((, MemberKind.PrimaryConstructor)
        endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., const, true, false)
      handleNoType())
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      beginPrimaryConstructor(.)
        handleIdentifier(named, primaryConstructorDeclaration)
        handleNoFormalParameters(named, MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., null, true, false)
      handleNoType(named)
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      beginPrimaryConstructor(.)
        handleIdentifier(named, primaryConstructorDeclaration)
        beginFormalParameters((, MemberKind.PrimaryConstructor)
        endFormalParameters(0, (, ), MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., null, true, false)
      handleNoType())
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      beginPrimaryConstructor(.)
        handleIdentifier(named, primaryConstructorDeclaration)
        handleNoFormalParameters(named, MemberKind.PrimaryConstructor)
      endPrimaryConstructor(., const, true, false)
      handleNoType(named)
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    handleNoTypeVariables(=)
    handleRecoverableError(ConstWithoutPrimaryConstructor, const, const)
    beginNamedMixinApplication(class, null, null, null, null, null, null, null, null, C)
      handleIdentifier(O, typeReference)
      handleNoTypeArguments(with)
      handleType(O, null)
      beginTypeList(M)
        handleIdentifier(M, typeReference)
        handleNoTypeArguments(;)
        handleType(M, null)
      endTypeList(1)
      handleNamedMixinApplicationWithClause(with)
    endNamedMixinApplication(class, class, =, null, ;)
  endTopLevelDeclaration(;)
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    beginTypeVariables(<)
      beginMetadataStar(T)
      endMetadataStar(0)
      handleIdentifier(T, typeVariableDeclaration)
      beginTypeVariable(T)
        handleTypeVariablesDefined(T, 1)
        handleNoType(T)
      endTypeVariable(>, 0, null, null)
    endTypeVariables(<, >)
    handleRecoverableError(ConstWithoutPrimaryConstructor, const, const)
    beginNamedMixinApplication(class, null, null, null, null, null, null, null, null, C)
      handleIdentifier(O, typeReference)
      handleNoTypeArguments(with)
      handleType(O, null)
      beginTypeList(M)
        handleIdentifier(M, typeReference)
        handleNoTypeArguments(;)
        handleType(M, null)
      endTypeList(1)
      handleNamedMixinApplicationWithClause(with)
    endNamedMixinApplication(class, class, =, null, ;)
  endTopLevelDeclaration(;)
endCompilationUnit(15, )
