Problems reported:

parser/macros/augment_class:1:1: Variables must be declared using the keywords 'const', 'final', 'var' or a type name.
augment class Class {}
^^^^^^^

parser/macros/augment_class:1:1: Expected ';' after this.
augment class Class {}
^^^^^^^

parser/macros/augment_class:2:1: Can't have modifier 'abstract' here.
abstract augment class Class {}
^^^^^^^^

parser/macros/augment_class:2:10: Variables must be declared using the keywords 'const', 'final', 'var' or a type name.
abstract augment class Class {}
         ^^^^^^^

parser/macros/augment_class:2:10: Expected ';' after this.
abstract augment class Class {}
         ^^^^^^^

parser/macros/augment_class:3:1: Variables must be declared using the keywords 'const', 'final', 'var' or a type name.
augment class Class = Object with Mixin;
^^^^^^^

parser/macros/augment_class:3:1: Expected ';' after this.
augment class Class = Object with Mixin;
^^^^^^^

parser/macros/augment_class:4:1: Can't have modifier 'abstract' here.
abstract augment class Class = Object with Mixin;
^^^^^^^^

parser/macros/augment_class:4:10: Variables must be declared using the keywords 'const', 'final', 'var' or a type name.
abstract augment class Class = Object with Mixin;
         ^^^^^^^

parser/macros/augment_class:4:10: Expected ';' after this.
abstract augment class Class = Object with Mixin;
         ^^^^^^^

beginCompilationUnit(augment)
  beginMetadataStar(augment)
  endMetadataStar(0)
  beginTopLevelMember(augment)
    beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, )
      handleRecoverableError(MissingConstFinalVarOrType, augment, augment)
      handleNoType()
      handleIdentifier(augment, topLevelVariableDeclaration)
      handleNoFieldInitializer(class)
      handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], augment, augment)
    endTopLevelFields(null, null, null, null, null, 1, augment, ;)
  endTopLevelDeclaration(class)
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(Class, classOrMixinDeclaration)
    handleNoTypeVariables({)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, Class)
      handleNoType(Class)
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(abstract)
  beginMetadataStar(abstract)
  endMetadataStar(0)
  beginTopLevelMember(abstract)
    handleRecoverableError(Message[ExtraneousModifier, Can't have modifier 'abstract' here., Try removing 'abstract'., {lexeme: abstract}], abstract, abstract)
    beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
      handleRecoverableError(MissingConstFinalVarOrType, augment, augment)
      handleNoType(abstract)
      handleIdentifier(augment, topLevelVariableDeclaration)
      handleNoFieldInitializer(class)
      handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], augment, augment)
    endTopLevelFields(null, null, null, null, null, 1, abstract, ;)
  endTopLevelDeclaration(class)
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(Class, classOrMixinDeclaration)
    handleNoTypeVariables({)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, Class)
      handleNoType(Class)
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(augment)
  beginMetadataStar(augment)
  endMetadataStar(0)
  beginTopLevelMember(augment)
    beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
      handleRecoverableError(MissingConstFinalVarOrType, augment, augment)
      handleNoType(})
      handleIdentifier(augment, topLevelVariableDeclaration)
      handleNoFieldInitializer(class)
      handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], augment, augment)
    endTopLevelFields(null, null, null, null, null, 1, augment, ;)
  endTopLevelDeclaration(class)
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(Class, classOrMixinDeclaration)
    handleNoTypeVariables(=)
    beginNamedMixinApplication(class, null, null, null, null, null, null, null, null, null, Class)
      handleIdentifier(Object, typeReference)
      handleNoTypeArguments(with)
      handleType(Object, null)
      beginTypeList(Mixin)
        handleIdentifier(Mixin, typeReference)
        handleNoTypeArguments(;)
        handleType(Mixin, null)
      endTypeList(1)
      handleNamedMixinApplicationWithClause(with)
    endNamedMixinApplication(class, class, =, null, ;)
  endTopLevelDeclaration(abstract)
  beginMetadataStar(abstract)
  endMetadataStar(0)
  beginTopLevelMember(abstract)
    handleRecoverableError(Message[ExtraneousModifier, Can't have modifier 'abstract' here., Try removing 'abstract'., {lexeme: abstract}], abstract, abstract)
    beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
      handleRecoverableError(MissingConstFinalVarOrType, augment, augment)
      handleNoType(abstract)
      handleIdentifier(augment, topLevelVariableDeclaration)
      handleNoFieldInitializer(class)
      handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], augment, augment)
    endTopLevelFields(null, null, null, null, null, 1, abstract, ;)
  endTopLevelDeclaration(class)
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(Class, classOrMixinDeclaration)
    handleNoTypeVariables(=)
    beginNamedMixinApplication(class, null, null, null, null, null, null, null, null, null, Class)
      handleIdentifier(Object, typeReference)
      handleNoTypeArguments(with)
      handleType(Object, null)
      beginTypeList(Mixin)
        handleIdentifier(Mixin, typeReference)
        handleNoTypeArguments(;)
        handleType(Mixin, null)
      endTypeList(1)
      handleNamedMixinApplicationWithClause(with)
    endNamedMixinApplication(class, class, =, null, ;)
  endTopLevelDeclaration()
endCompilationUnit(8, )
