Problems reported:

parser/patterns/syntheticIdentifier_insideListPattern:3:11: Expected an identifier, but got 'if'.
    case [if]:
          ^^

beginCompilationUnit(void)
  beginMetadataStar(void)
  endMetadataStar(0)
  beginTopLevelMember(void)
    beginTopLevelMethod(, null, null)
      handleVoidKeyword(void)
      handleIdentifier(f, topLevelFunctionDeclaration)
      handleNoTypeVariables(()
      beginFormalParameters((, MemberKind.TopLevelMethod)
        beginMetadataStar(Object)
        endMetadataStar(0)
        beginFormalParameter(Object, MemberKind.TopLevelMethod, null, null, null)
          handleIdentifier(Object, typeReference)
          handleNoTypeArguments(?)
          handleType(Object, ?)
          handleIdentifier(x, formalParameterDeclaration)
          handleFormalParameterWithoutValue())
        endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
      endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
      handleAsyncModifier(null, null)
      beginBlockFunctionBody({)
        beginSwitchStatement(switch)
          handleIdentifier(x, expression)
          handleNoTypeArguments())
          handleNoArguments())
          handleSend(x, x)
          handleParenthesizedCondition((, null, null)
          beginSwitchBlock({)
            beginCaseExpression(case)
              beginPattern(case)
                handleNoTypeArguments([)
                beginPattern([)
                  beginConstantPattern(null)
                    handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got 'if'., Try inserting an identifier before 'if'., {lexeme: if}], if, if)
                    handleIdentifier(, expression)
                    handleNoTypeArguments(if)
                    handleNoArguments(if)
                    handleSend(, )
                  endConstantPattern(null)
                endPattern()
                handleListPattern(1, [, ])
              endPattern(])
              handleSwitchCaseNoWhenClause(])
            endCaseExpression(case, null, :)
            beginSwitchCase(0, 1, case)
            endSwitchCase(0, 1, null, null, 0, case, :)
          endSwitchBlock(1, {, })
        endSwitchStatement(switch, })
        handleEmptyStatement(;)
      endBlockFunctionBody(2, {, })
    endTopLevelMethod(void, null, })
  endTopLevelDeclaration(})
endCompilationUnit(1, )
