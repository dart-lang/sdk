Problems reported:

parser/patterns/issue50591_example2:1:19: Can't find '}' to match '{'.
void f(Object? x) {
                  ^

beginCompilationUnit(void)
  beginMetadataStar(void)
  endMetadataStar(0)
  beginTopLevelMember(void)
    beginTopLevelMethod(UnmatchedToken({), null, null)
      handleVoidKeyword(void)
      handleIdentifier(f, topLevelFunctionDeclaration)
      handleNoTypeVariables(()
      beginFormalParameters((, MemberKind.TopLevelMethod)
        beginMetadataStar(Object)
        endMetadataStar(0)
        beginFormalParameter(Object, MemberKind.TopLevelMethod, null, null, null)
          handleIdentifier(Object, typeReference)
          handleNoTypeArguments(?)
          handleType(Object, ?)
          handleIdentifier(x, formalParameterDeclaration)
          handleFormalParameterWithoutValue())
        endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
      endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
      handleAsyncModifier(null, null)
      beginBlockFunctionBody({)
        beginParenthesizedExpressionOrRecordLiteral(()
          beginSwitchExpression(switch)
            handleIdentifier(x, expression)
            handleNoTypeArguments())
            handleNoArguments())
            handleSend(x, ))
            handleParenthesizedCondition((, null, null)
            beginSwitchExpressionBlock({)
              beginSwitchExpressionCase()
                beginConstantPattern(const)
                  handleIdentifier(A, expression)
                  handleNoTypeArguments(()
                  beginArguments(()
                  endArguments(0, (, ))
                  handleSend(A, =>)
                endConstantPattern(const)
                handleSwitchExpressionCasePattern())
                handleLiteralInt(0)
              endSwitchExpressionCase(null, =>, 0)
              beginSwitchExpressionCase()
                handleNoType(_)
                handleWildcardPattern(null, _)
                handleSwitchExpressionCasePattern(_)
                handleLiteralInt(1)
              endSwitchExpressionCase(null, =>, 1)
            endSwitchExpressionBlock(2, {, })
          endSwitchExpression(switch, })
        endParenthesizedExpression(()
        handleExpressionStatement(;)
      endBlockFunctionBody(1, {, })
    endTopLevelMethod(void, null, })
  endTopLevelDeclaration()
  handleErrorToken(UnmatchedToken({))
  handleRecoverableError(Message[UnmatchedToken, Can't find '}' to match '{'., null, {string: }, lexeme: {}], UnmatchedToken({), UnmatchedToken({))
endCompilationUnit(1, )
