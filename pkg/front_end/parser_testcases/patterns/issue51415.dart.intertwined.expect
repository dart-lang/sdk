parseUnit(void)
  skipErrorTokens(void)
  listener: beginCompilationUnit(void)
  syntheticPreviousToken(void)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(, null, null, , Instance of 'VoidType', null, foo, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(foo, topLevelFunctionDeclaration)
        parseMethodTypeVar(foo)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(foo, foo, false, MemberKind.TopLevelMethod)
          parseFormalParameters(foo, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, if)
          parseStatement({)
            parseStatementX({)
              parseIfStatement({)
                listener: beginIfStatement(if)
                ensureParenthesizedCondition(if, allowCase: true)
                  parseExpressionInParenthesisRest((, allowCase: true)
                    parseExpression(()
                      looksLikeOuterPatternEquals(()
                        skipOuterPattern(()
                          skipObjectPatternRest(obj)
                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression((, true, ConstantPatternContext.none)
                          parsePrimary((, expression, ConstantPatternContext.none)
                            parseSendOrFunctionLiteral((, expression, ConstantPatternContext.none)
                              parseSend((, expression, ConstantPatternContext.none)
                                isNextIdentifier(()
                                ensureIdentifier((, expression)
                                  listener: handleIdentifier(obj, expression)
                                listener: handleNoTypeArguments(case)
                                parseArgumentsOpt(obj)
                                  listener: handleNoArguments(case)
                                listener: handleSend(obj, case)
                    parsePattern(case, PatternContext.matching, precedence: 1)
                      listener: beginPattern(case)
                      parsePrimaryPattern(case, PatternContext.matching)
                        parseParenthesizedPatternOrRecordPattern(case, PatternContext.matching)
                          ensureIdentifier((, namedRecordFieldReference)
                            listener: handleIdentifier(longFieldName, namedRecordFieldReference)
                          parsePattern(:, PatternContext.matching, precedence: 1)
                            listener: beginPattern(:)
                            parsePrimaryPattern(:, PatternContext.matching)
                              listener: beginConstantPattern(const)
                              parsePrecedenceExpression(const, 7, false, ConstantPatternContext.explicit)
                                parseUnaryExpression(const, false, ConstantPatternContext.explicit)
                                  parsePrimary(const, expression, ConstantPatternContext.explicit)
                                    parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(const, ConstantPatternContext.explicit)
                                      parseParenthesizedExpressionOrRecordLiteral(const, null, ConstantPatternContext.explicit)
                                        listener: beginParenthesizedExpressionOrRecordLiteral(()
                                        ensureIdentifier((, namedRecordFieldReference)
                                          listener: handleIdentifier(first, namedRecordFieldReference)
                                        parseExpression(:)
                                          looksLikeOuterPatternEquals(:)
                                            skipOuterPattern(:)
                                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                                              parsePrimary(:, expression, ConstantPatternContext.none)
                                                parseLiteralInt(:)
                                                  listener: handleLiteralInt(1)
                                        listener: handleNamedRecordField(:)
                                        ensureIdentifier(,, namedRecordFieldReference)
                                          listener: handleIdentifier(second, namedRecordFieldReference)
                                        parseExpression(:)
                                          looksLikeOuterPatternEquals(:)
                                            skipOuterPattern(:)
                                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                                              parsePrimary(:, expression, ConstantPatternContext.none)
                                                parseLiteralInt(:)
                                                  listener: handleLiteralInt(2)
                                        listener: handleNamedRecordField(:)
                                        ensureCloseParen(2, ()
                                        listener: endRecordLiteral((, 2, null)
                              listener: endConstantPattern(const)
                            listener: endPattern())
                          listener: handlePatternField(:)
                          ensureCloseParen(), ()
                          listener: handleRecordPattern((, 1)
                      listener: endPattern())
                    ensureCloseParen(), ()
                    listener: handleParenthesizedCondition((, case, null)
                listener: beginThenStatement({)
                parseStatement())
                  parseStatementX())
                    parseBlock(), BlockKind(statement))
                      ensureBlock(), null, null)
                      listener: beginBlock({, BlockKind(statement))
                      notEofOrValue(}, ;)
                      parseStatement({)
                        parseStatementX({)
                          parseEmptyStatement({)
                            listener: handleEmptyStatement(;)
                      notEofOrValue(}, })
                      listener: endBlock(1, {, }, BlockKind(statement))
                listener: endThenStatement(})
                listener: endIfStatement(if, null)
          notEofOrValue(}, if)
          parseStatement(})
            parseStatementX(})
              parseIfStatement(})
                listener: beginIfStatement(if)
                ensureParenthesizedCondition(if, allowCase: true)
                  parseExpressionInParenthesisRest((, allowCase: true)
                    parseExpression(()
                      looksLikeOuterPatternEquals(()
                        skipOuterPattern(()
                          skipObjectPatternRest(obj)
                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression((, true, ConstantPatternContext.none)
                          parsePrimary((, expression, ConstantPatternContext.none)
                            parseSendOrFunctionLiteral((, expression, ConstantPatternContext.none)
                              parseSend((, expression, ConstantPatternContext.none)
                                isNextIdentifier(()
                                ensureIdentifier((, expression)
                                  listener: handleIdentifier(obj, expression)
                                listener: handleNoTypeArguments(case)
                                parseArgumentsOpt(obj)
                                  listener: handleNoArguments(case)
                                listener: handleSend(obj, case)
                    parsePattern(case, PatternContext.matching, precedence: 1)
                      listener: beginPattern(case)
                      parsePrimaryPattern(case, PatternContext.matching)
                        listener: beginConstantPattern(const)
                        parsePrecedenceExpression(const, 7, false, ConstantPatternContext.explicit)
                          parseUnaryExpression(const, false, ConstantPatternContext.explicit)
                            parsePrimary(const, expression, ConstantPatternContext.explicit)
                              parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(const, ConstantPatternContext.explicit)
                                parseParenthesizedExpressionOrRecordLiteral(const, null, ConstantPatternContext.explicit)
                                  listener: beginParenthesizedExpressionOrRecordLiteral(()
                                  parseExpression(()
                                    looksLikeOuterPatternEquals(()
                                      skipOuterPattern(()
                                        skipObjectPatternRest(element)
                                    parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                      parseUnaryExpression((, true, ConstantPatternContext.none)
                                        parsePrimary((, expression, ConstantPatternContext.none)
                                          parseSendOrFunctionLiteral((, expression, ConstantPatternContext.none)
                                            parseSend((, expression, ConstantPatternContext.none)
                                              isNextIdentifier(()
                                              ensureIdentifier((, expression)
                                                listener: handleIdentifier(element, expression)
                                              listener: handleNoTypeArguments(,)
                                              parseArgumentsOpt(element)
                                                listener: handleNoArguments(,)
                                              listener: handleSend(element, ,)
                                  parseExpression(,)
                                    looksLikeOuterPatternEquals(,)
                                      skipOuterPattern(,)
                                        skipObjectPatternRest(element)
                                    parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                      parseUnaryExpression(,, true, ConstantPatternContext.none)
                                        parsePrimary(,, expression, ConstantPatternContext.none)
                                          parseSendOrFunctionLiteral(,, expression, ConstantPatternContext.none)
                                            parseSend(,, expression, ConstantPatternContext.none)
                                              isNextIdentifier(,)
                                              ensureIdentifier(,, expression)
                                                listener: handleIdentifier(element, expression)
                                              listener: handleNoTypeArguments(,)
                                              parseArgumentsOpt(element)
                                                listener: handleNoArguments(,)
                                              listener: handleSend(element, ,)
                                  parseExpression(,)
                                    looksLikeOuterPatternEquals(,)
                                      skipOuterPattern(,)
                                        skipObjectPatternRest(element)
                                    parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                      parseUnaryExpression(,, true, ConstantPatternContext.none)
                                        parsePrimary(,, expression, ConstantPatternContext.none)
                                          parseSendOrFunctionLiteral(,, expression, ConstantPatternContext.none)
                                            parseSend(,, expression, ConstantPatternContext.none)
                                              isNextIdentifier(,)
                                              ensureIdentifier(,, expression)
                                                listener: handleIdentifier(element, expression)
                                              listener: handleNoTypeArguments(,)
                                              parseArgumentsOpt(element)
                                                listener: handleNoArguments(,)
                                              listener: handleSend(element, ,)
                                  parseExpression(,)
                                    looksLikeOuterPatternEquals(,)
                                      skipOuterPattern(,)
                                        skipObjectPatternRest(element)
                                    parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                      parseUnaryExpression(,, true, ConstantPatternContext.none)
                                        parsePrimary(,, expression, ConstantPatternContext.none)
                                          parseSendOrFunctionLiteral(,, expression, ConstantPatternContext.none)
                                            parseSend(,, expression, ConstantPatternContext.none)
                                              isNextIdentifier(,)
                                              ensureIdentifier(,, expression)
                                                listener: handleIdentifier(element, expression)
                                              listener: handleNoTypeArguments())
                                              parseArgumentsOpt(element)
                                                listener: handleNoArguments())
                                              listener: handleSend(element, ))
                                  ensureCloseParen(element, ()
                                  listener: endRecordLiteral((, 4, null)
                        listener: endConstantPattern(const)
                      listener: endPattern())
                    ensureCloseParen(), ()
                    listener: handleParenthesizedCondition((, case, null)
                listener: beginThenStatement({)
                parseStatement())
                  parseStatementX())
                    parseBlock(), BlockKind(statement))
                      ensureBlock(), null, null)
                      listener: beginBlock({, BlockKind(statement))
                      notEofOrValue(}, ;)
                      parseStatement({)
                        parseStatementX({)
                          parseEmptyStatement({)
                            listener: handleEmptyStatement(;)
                      notEofOrValue(}, })
                      listener: endBlock(1, {, }, BlockKind(statement))
                listener: endThenStatement(})
                listener: endIfStatement(if, null)
          notEofOrValue(}, if)
          parseStatement(})
            parseStatementX(})
              parseIfStatement(})
                listener: beginIfStatement(if)
                ensureParenthesizedCondition(if, allowCase: true)
                  parseExpressionInParenthesisRest((, allowCase: true)
                    parseExpression(()
                      looksLikeOuterPatternEquals(()
                        skipOuterPattern(()
                          skipObjectPatternRest(obj)
                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression((, true, ConstantPatternContext.none)
                          parsePrimary((, expression, ConstantPatternContext.none)
                            parseSendOrFunctionLiteral((, expression, ConstantPatternContext.none)
                              parseSend((, expression, ConstantPatternContext.none)
                                isNextIdentifier(()
                                ensureIdentifier((, expression)
                                  listener: handleIdentifier(obj, expression)
                                listener: handleNoTypeArguments(case)
                                parseArgumentsOpt(obj)
                                  listener: handleNoArguments(case)
                                listener: handleSend(obj, case)
                    parsePattern(case, PatternContext.matching, precedence: 1)
                      listener: beginPattern(case)
                      parsePrimaryPattern(case, PatternContext.matching)
                        listener: handleNoTypeArguments(()
                        parseObjectPatternRest(Foo, PatternContext.matching)
                          ensureIdentifier((, namedArgumentReference)
                            listener: handleIdentifier(longFieldName, namedArgumentReference)
                          parsePattern(:, PatternContext.matching, precedence: 1)
                            listener: beginPattern(:)
                            parsePrimaryPattern(:, PatternContext.matching)
                              listener: beginConstantPattern(const)
                              parsePrecedenceExpression(const, 7, false, ConstantPatternContext.explicit)
                                parseUnaryExpression(const, false, ConstantPatternContext.explicit)
                                  parsePrimary(const, expression, ConstantPatternContext.explicit)
                                    parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(const, ConstantPatternContext.explicit)
                                      parseParenthesizedExpressionOrRecordLiteral(const, null, ConstantPatternContext.explicit)
                                        listener: beginParenthesizedExpressionOrRecordLiteral(()
                                        ensureIdentifier((, namedRecordFieldReference)
                                          listener: handleIdentifier(first, namedRecordFieldReference)
                                        parseExpression(:)
                                          looksLikeOuterPatternEquals(:)
                                            skipOuterPattern(:)
                                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                                              parsePrimary(:, expression, ConstantPatternContext.none)
                                                parseLiteralInt(:)
                                                  listener: handleLiteralInt(1)
                                        listener: handleNamedRecordField(:)
                                        ensureIdentifier(,, namedRecordFieldReference)
                                          listener: handleIdentifier(second, namedRecordFieldReference)
                                        parseExpression(:)
                                          looksLikeOuterPatternEquals(:)
                                            skipOuterPattern(:)
                                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                                              parsePrimary(:, expression, ConstantPatternContext.none)
                                                parseLiteralInt(:)
                                                  listener: handleLiteralInt(2)
                                        listener: handleNamedRecordField(:)
                                        ensureCloseParen(2, ()
                                        listener: endRecordLiteral((, 2, null)
                              listener: endConstantPattern(const)
                            listener: endPattern())
                          listener: handlePatternField(:)
                          listener: handleObjectPatternFields(1, (, ))
                        listener: handleObjectPattern(Foo, null, null)
                      listener: endPattern())
                    ensureCloseParen(), ()
                    listener: handleParenthesizedCondition((, case, null)
                listener: beginThenStatement({)
                parseStatement())
                  parseStatementX())
                    parseBlock(), BlockKind(statement))
                      ensureBlock(), null, null)
                      listener: beginBlock({, BlockKind(statement))
                      notEofOrValue(}, ;)
                      parseStatement({)
                        parseStatementX({)
                          parseEmptyStatement({)
                            listener: handleEmptyStatement(;)
                      notEofOrValue(}, })
                      listener: endBlock(1, {, }, BlockKind(statement))
                listener: endThenStatement(})
                listener: endIfStatement(if, null)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(3, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(void)
  listener: endCompilationUnit(1, )
