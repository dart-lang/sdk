Problems reported:

parser/patterns/error_recovery_after_question_suffix_in_expression:3:13: Expected an identifier, but got ':'.
    true ?  : 2;
            ^

beginCompilationUnit(f)
  beginMetadataStar(f)
  endMetadataStar(0)
  beginTopLevelMember(f)
    beginTopLevelMethod(, null, null)
      handleNoType()
      handleIdentifier(f, topLevelFunctionDeclaration)
      handleNoTypeVariables(()
      beginFormalParameters((, MemberKind.TopLevelMethod)
      endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
      handleAsyncModifier(null, null)
      beginBlockFunctionBody({)
        beginTryStatement(try)
          beginBlock({, BlockKind(try statement))
            handleLiteralBool(true)
            beginConditionalExpression(?)
              handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got ':'., Try inserting an identifier before ':'., {lexeme: :}], :, :)
              handleIdentifier(, expression)
              handleNoTypeArguments(:)
              handleNoArguments(:)
              handleSend(, )
              handleConditionalExpressionColon()
              handleLiteralInt(2)
            endConditionalExpression(?, :, 2)
            handleExpressionStatement(true, ;)
          endBlock(1, {, }, BlockKind(try statement))
          beginCatchClause(catch)
            beginFormalParameters((, MemberKind.Catch)
              beginMetadataStar(e)
              endMetadataStar(0)
              beginFormalParameter(e, MemberKind.Catch, null, null, null)
                handleNoType(()
                handleIdentifier(e, formalParameterDeclaration)
                handleFormalParameterWithoutValue())
              endFormalParameter(null, null, null, e, null, null, FormalParameterKind.requiredPositional, MemberKind.Catch)
            endFormalParameters(1, (, ), MemberKind.Catch)
          endCatchClause({)
          beginBlock({, BlockKind(catch clause))
          endBlock(0, {, }, BlockKind(catch clause))
          handleCatchBlock(null, catch, null)
        endTryStatement(1, try, null, })
      endBlockFunctionBody(1, {, })
    endTopLevelMethod(f, null, })
  endTopLevelDeclaration(})
endCompilationUnit(1, )
