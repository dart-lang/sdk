parseUnit(void)
  skipErrorTokens(void)
  listener: beginCompilationUnit(void)
  syntheticPreviousToken(void)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(, null, null, , Instance of 'VoidType', null, f, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(f, topLevelFunctionDeclaration)
        parseMethodTypeVar(f)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(f, f, false, MemberKind.TopLevelMethod)
          parseFormalParameters(f, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(condition)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(condition, MemberKind.TopLevelMethod, null, null, null)
                listener: handleNoType(()
                ensureIdentifier((, formalParameterDeclaration)
                  listener: handleIdentifier(condition, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, condition, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(when)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(when, MemberKind.TopLevelMethod, null, null, null)
                listener: handleNoType(,)
                ensureIdentifier(,, formalParameterDeclaration)
                  inPlainSync()
                  listener: handleIdentifier(when, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, when, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(otherwise)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(otherwise, MemberKind.TopLevelMethod, null, null, null)
                listener: handleNoType(,)
                ensureIdentifier(,, formalParameterDeclaration)
                  listener: handleIdentifier(otherwise, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, otherwise, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(3, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              looksLikeOuterPatternEquals(=>)
                skipOuterPattern(=>)
                  skipObjectPatternRest(condition)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    parseSendOrFunctionLiteral(=>, expression, ConstantPatternContext.none)
                      parseSend(=>, expression, ConstantPatternContext.none)
                        isNextIdentifier(=>)
                        ensureIdentifier(=>, expression)
                          listener: handleIdentifier(condition, expression)
                        listener: handleNoTypeArguments(as)
                        parseArgumentsOpt(condition)
                          listener: handleNoArguments(as)
                        listener: handleSend(condition, as)
                parseAsOperatorRest(condition)
                  listener: beginAsOperatorType(as)
                  computeTypeAfterIsOrAs(as)
                    canParseAsConditional(?)
                      parseExpressionWithoutCascade(?)
                        parsePrecedenceExpression(?, 1, false, ConstantPatternContext.none)
                          parseUnaryExpression(?, false, ConstantPatternContext.none)
                            parsePrimary(?, expression, ConstantPatternContext.none)
                              inPlainSync()
                              parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                parseSend(?, expression, ConstantPatternContext.none)
                                  isNextIdentifier(?)
                                  ensureIdentifier(?, expression)
                                    inPlainSync()
                                  parseArgumentsOpt(when)
                      parseExpressionWithoutCascade(:)
                        parsePrecedenceExpression(:, 1, false, ConstantPatternContext.none)
                          parseUnaryExpression(:, false, ConstantPatternContext.none)
                            parsePrimary(:, expression, ConstantPatternContext.none)
                              parseSendOrFunctionLiteral(:, expression, ConstantPatternContext.none)
                                parseSend(:, expression, ConstantPatternContext.none)
                                  isNextIdentifier(:)
                                  ensureIdentifier(:, expression)
                                  parseArgumentsOpt(otherwise)
                  listener: handleIdentifier(bool, typeReference)
                  listener: handleNoTypeArguments(?)
                  listener: handleType(bool, null)
                  listener: endAsOperatorType(as)
                  listener: handleAsOperator(as)
                  skipChainedAsIsOperators(bool)
                parseConditionalExpressionRest(bool)
                  listener: beginConditionalExpression(?)
                  parseExpressionWithoutCascade(?)
                    parsePrecedenceExpression(?, 1, false, ConstantPatternContext.none)
                      parseUnaryExpression(?, false, ConstantPatternContext.none)
                        parsePrimary(?, expression, ConstantPatternContext.none)
                          inPlainSync()
                          parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                            parseSend(?, expression, ConstantPatternContext.none)
                              isNextIdentifier(?)
                              ensureIdentifier(?, expression)
                                inPlainSync()
                                listener: handleIdentifier(when, expression)
                              listener: handleNoTypeArguments(:)
                              parseArgumentsOpt(when)
                                listener: handleNoArguments(:)
                              listener: handleSend(when, :)
                  ensureColon(when)
                  listener: handleConditionalExpressionColon()
                  parseExpressionWithoutCascade(:)
                    parsePrecedenceExpression(:, 1, false, ConstantPatternContext.none)
                      parseUnaryExpression(:, false, ConstantPatternContext.none)
                        parsePrimary(:, expression, ConstantPatternContext.none)
                          parseSendOrFunctionLiteral(:, expression, ConstantPatternContext.none)
                            parseSend(:, expression, ConstantPatternContext.none)
                              isNextIdentifier(:)
                              ensureIdentifier(:, expression)
                                listener: handleIdentifier(otherwise, expression)
                              listener: handleNoTypeArguments(;)
                              parseArgumentsOpt(otherwise)
                                listener: handleNoArguments(;)
                              listener: handleSend(otherwise, ;)
                  listener: endConditionalExpression(?, :)
            ensureSemicolon(otherwise)
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(void)
  listener: endCompilationUnit(1, )
