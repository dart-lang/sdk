parseUnit(f)
  skipErrorTokens(f)
  listener: beginCompilationUnit(f)
  syntheticPreviousToken(f)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(f)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(f)
      isReservedKeyword(()
      parseTopLevelMethod(, null, null, , Instance of 'NoType', null, f, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleNoType()
        ensureIdentifierPotentiallyRecovered(, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(f, topLevelFunctionDeclaration)
        parseMethodTypeVar(f)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(f, f, false, MemberKind.TopLevelMethod)
          parseFormalParameters(f, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(x)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(x, MemberKind.TopLevelMethod, null, null, null)
                listener: handleNoType(()
                ensureIdentifier((, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, @)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseMetadataStar({)
                  listener: beginMetadataStar(@)
                  parseMetadata({)
                    listener: beginMetadata(@)
                    ensureIdentifier(@, metadataReference)
                      listener: handleIdentifier(annotation, metadataReference)
                    parseQualifiedRestOpt(annotation, metadataContinuation)
                    listener: handleNoTypeArguments(var)
                    parseArgumentsOptMetadata(annotation, false)
                      listener: handleNoArguments(var)
                    listener: endMetadata(@, null, var)
                  listener: endMetadataStar(1)
                parseExpressionStatementOrDeclarationAfterModifiers(var, {, null, var, null, null)
                  skipOuterPattern(var)
                  parsePatternVariableDeclarationStatement(var, {, var)
                    parsePattern(var, PatternContext.declaration, precedence: 1)
                      parsePrimaryPattern(var, PatternContext.declaration)
                        listener: handleNoTypeArguments([)
                        parseListPatternSuffix(var, PatternContext.declaration)
                          parsePattern([, PatternContext.declaration, precedence: 1)
                            parsePrimaryPattern([, PatternContext.declaration)
                              parseVariablePattern([, PatternContext.declaration, typeInfo: Instance of 'NoType')
                                listener: handleNoType(a)
                                listener: handleDeclaredVariablePattern(null, a, false)
                          listener: handleListPattern(1, [, ])
                    parseExpression(=)
                      looksLikeOuterPatternEquals(=)
                        skipOuterPattern(=)
                          skipObjectPatternRest(x)
                      parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression(=, true, ConstantPatternContext.none)
                          parsePrimary(=, expression, ConstantPatternContext.none)
                            parseSendOrFunctionLiteral(=, expression, ConstantPatternContext.none)
                              parseSend(=, expression, ConstantPatternContext.none)
                                isNextIdentifier(=)
                                ensureIdentifier(=, expression)
                                  listener: handleIdentifier(x, expression)
                                listener: handleNoTypeArguments(;)
                                parseArgumentsOpt(x)
                                  listener: handleNoArguments(;)
                                listener: handleSend(x, ;)
                    ensureSemicolon(x)
                    listener: handlePatternVariableDeclarationStatement(var, =, ;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod(f, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(f)
  listener: endCompilationUnit(1, )
