Problems reported:

parser/general/call_on_after_try_block4:12:6: Expected a type, but got '='.
  on = 42;
     ^

parser/general/call_on_after_try_block4:12:6: A catch clause must have a body, even if it is empty.
  on = 42;
     ^

parser/general/call_on_after_try_block4:12:6: Expected an identifier, but got '='.
  on = 42;
     ^

beginCompilationUnit(void)
  beginMetadataStar(void)
  endMetadataStar(0)
  beginTopLevelMember(void)
    beginTopLevelMethod(, null, null)
      handleVoidKeyword(void)
      handleIdentifier(main, topLevelFunctionDeclaration)
      handleNoTypeVariables(()
      beginFormalParameters((, MemberKind.TopLevelMethod)
        beginMetadataStar(int)
        endMetadataStar(0)
        beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
          handleIdentifier(int, typeReference)
          handleNoTypeArguments(on)
          handleType(int, null)
          handleIdentifier(on, formalParameterDeclaration)
          handleFormalParameterWithoutValue())
        endFormalParameter(null, null, null, on, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
      endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
      handleAsyncModifier(null, null)
      beginBlockFunctionBody({)
        beginTryStatement(try)
          beginBlock({, BlockKind(try statement))
            handleEmptyStatement(;)
          endBlock(1, {, }, BlockKind(try statement))
          beginCatchClause(catch)
            beginFormalParameters((, MemberKind.Catch)
              beginMetadataStar(e)
              endMetadataStar(0)
              beginFormalParameter(e, MemberKind.Catch, null, null, null)
                handleNoType(()
                handleIdentifier(e, formalParameterDeclaration)
                handleFormalParameterWithoutValue())
              endFormalParameter(null, null, null, e, null, null, FormalParameterKind.requiredPositional, MemberKind.Catch)
            endFormalParameters(1, (, ), MemberKind.Catch)
          endCatchClause({)
          beginBlock({, BlockKind(catch clause))
            handleEmptyStatement(;)
          endBlock(1, {, }, BlockKind(catch clause))
          handleCatchBlock(null, catch, null)
          beginCatchClause(on)
            handleIdentifier(Foo, typeReference)
            handleNoTypeArguments({)
            handleType(Foo, null)
          endCatchClause({)
          beginBlock({, BlockKind(catch clause))
            handleEmptyStatement(;)
          endBlock(1, {, }, BlockKind(catch clause))
          handleCatchBlock(on, null, null)
          beginCatchClause(on)
            handleRecoverableError(Message[ExpectedType, Expected a type, but got '='., null, {lexeme: =}], =, =)
            handleIdentifier(, typeReference)
            handleNoTypeArguments(=)
            handleType(, null)
          endCatchClause(=)
          handleRecoverableError(Message[ExpectedClassOrMixinBody, A catch clause must have a body, even if it is empty., Try adding an empty body., {string: catch clause}], =, =)
          beginBlock({, BlockKind(catch clause))
          endBlock(0, {, }, BlockKind(catch clause))
          handleCatchBlock(on, null, null)
        endTryStatement(3, try, null)
        handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '='., Try inserting an identifier before '='., {lexeme: =}], =, =)
        handleIdentifier(, expression)
        handleNoTypeArguments(=)
        handleNoArguments(=)
        handleSend(, =)
        handleLiteralInt(42)
        handleAssignmentExpression(=)
        handleExpressionStatement(;)
      endBlockFunctionBody(2, {, })
    endTopLevelMethod(void, null, })
  endTopLevelDeclaration()
endCompilationUnit(1, )
