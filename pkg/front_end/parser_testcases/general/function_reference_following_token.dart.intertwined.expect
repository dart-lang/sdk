parseUnit(var)
  skipErrorTokens(var)
  listener: beginCompilationUnit(var)
  syntheticPreviousToken(var)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(var)
      parseFields(, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_ampersand, DeclarationKind.TopLevel, null, false)
        listener: beginFields()
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_ampersand, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_ampersand, typeArgs_ampersand, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              listener: beginBinaryExpression(&)
              parsePrecedenceExpression(&, 12, true)
                parseUnaryExpression(&, true)
                  parsePrimary(&, expression)
                    parseLiteralInt(&)
                      listener: handleLiteralInt(0)
              listener: endBinaryExpression(&)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_asterisk, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_asterisk, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_asterisk, typeArgs_asterisk, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              listener: beginBinaryExpression(*)
              parsePrecedenceExpression(*, 15, true)
                parseUnaryExpression(*, true)
                  parsePrimary(*, expression)
                    parseLiteralInt(*)
                      listener: handleLiteralInt(0)
              listener: endBinaryExpression(*)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_bar, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_bar, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_bar, typeArgs_bar, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              listener: beginBinaryExpression(|)
              parsePrecedenceExpression(|, 10, true)
                parseUnaryExpression(|, true)
                  parsePrimary(|, expression)
                    parseLiteralInt(|)
                      listener: handleLiteralInt(0)
              listener: endBinaryExpression(|)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_caret, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_caret, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_caret, typeArgs_caret, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              listener: beginBinaryExpression(^)
              parsePrecedenceExpression(^, 11, true)
                parseUnaryExpression(^, true)
                  parsePrimary(^, expression)
                    parseLiteralInt(^)
                      listener: handleLiteralInt(0)
              listener: endBinaryExpression(^)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_closeBrace, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_closeBrace, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_closeBrace, typeArgs_closeBrace, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  listener: handleNoTypeArguments({)
                  parseLiteralSetOrMapSuffix(=, null)
                    parseExpression({)
                      parsePrecedenceExpression({, 1, true)
                        parseUnaryExpression({, true)
                          parsePrimary({, expression)
                            parseSendOrFunctionLiteral({, expression)
                              parseSend({, expression)
                                isNextIdentifier({)
                                ensureIdentifier({, expression)
                                  listener: handleIdentifier(f, expression)
                                listener: handleNoTypeArguments(<)
                                parseArgumentsOpt(f)
                                  listener: handleNoArguments(<)
                                listener: handleSend(f, <)
                        listener: beginTypeArguments(<)
                        listener: handleIdentifier(a, typeReference)
                        listener: handleNoTypeArguments(,)
                        listener: handleType(a, null)
                        listener: handleIdentifier(b, typeReference)
                        listener: handleNoTypeArguments(>)
                        listener: handleType(b, null)
                        listener: endTypeArguments(2, <, >)
                        listener: handleTypeArgumentApplication(<)
                    listener: handleLiteralSetOrMap(1, {, null, }, true)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_closeBracket, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_closeBracket, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_closeBracket, typeArgs_closeBracket, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  listener: handleNoTypeArguments([)
                  parseLiteralListSuffix(=, null)
                    parseExpression([)
                      parsePrecedenceExpression([, 1, true)
                        parseUnaryExpression([, true)
                          parsePrimary([, expression)
                            parseSendOrFunctionLiteral([, expression)
                              parseSend([, expression)
                                isNextIdentifier([)
                                ensureIdentifier([, expression)
                                  listener: handleIdentifier(f, expression)
                                listener: handleNoTypeArguments(<)
                                parseArgumentsOpt(f)
                                  listener: handleNoArguments(<)
                                listener: handleSend(f, <)
                        listener: beginTypeArguments(<)
                        listener: handleIdentifier(a, typeReference)
                        listener: handleNoTypeArguments(,)
                        listener: handleType(a, null)
                        listener: handleIdentifier(b, typeReference)
                        listener: handleNoTypeArguments(>)
                        listener: handleType(b, null)
                        listener: endTypeArguments(2, <, >)
                        listener: handleTypeArgumentApplication(<)
                    listener: handleLiteralList(1, [, null, ])
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_closeParen, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_closeParen, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_closeParen, typeArgs_closeParen, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    looksLikeFunctionBody(;)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(g, expression)
                      listener: handleNoTypeArguments(()
                      parseArgumentsOpt(g)
                        parseArguments(g)
                          parseArgumentsRest(()
                            listener: beginArguments(()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true)
                                parseUnaryExpression((, true)
                                  parsePrimary((, expression)
                                    parseSendOrFunctionLiteral((, expression)
                                      parseSend((, expression)
                                        isNextIdentifier(()
                                        ensureIdentifier((, expression)
                                          listener: handleIdentifier(f, expression)
                                        listener: handleNoTypeArguments(<)
                                        parseArgumentsOpt(f)
                                          listener: handleNoArguments(<)
                                        listener: handleSend(f, <)
                                listener: beginTypeArguments(<)
                                listener: handleIdentifier(a, typeReference)
                                listener: handleNoTypeArguments(,)
                                listener: handleType(a, null)
                                listener: handleIdentifier(b, typeReference)
                                listener: handleNoTypeArguments(>)
                                listener: handleType(b, null)
                                listener: endTypeArguments(2, <, >)
                                listener: handleTypeArgumentApplication(<)
                            listener: endArguments(1, (, ))
                      listener: handleSend(g, ;)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_colon, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_colon, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_colon, typeArgs_colon, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  listener: handleNoTypeArguments({)
                  parseLiteralSetOrMapSuffix(=, null)
                    parseExpression({)
                      parsePrecedenceExpression({, 1, true)
                        parseUnaryExpression({, true)
                          parsePrimary({, expression)
                            parseSendOrFunctionLiteral({, expression)
                              parseSend({, expression)
                                isNextIdentifier({)
                                ensureIdentifier({, expression)
                                  listener: handleIdentifier(f, expression)
                                listener: handleNoTypeArguments(<)
                                parseArgumentsOpt(f)
                                  listener: handleNoArguments(<)
                                listener: handleSend(f, <)
                        listener: beginTypeArguments(<)
                        listener: handleIdentifier(a, typeReference)
                        listener: handleNoTypeArguments(,)
                        listener: handleType(a, null)
                        listener: handleIdentifier(b, typeReference)
                        listener: handleNoTypeArguments(>)
                        listener: handleType(b, null)
                        listener: endTypeArguments(2, <, >)
                        listener: handleTypeArgumentApplication(<)
                    parseExpression(:)
                      parsePrecedenceExpression(:, 1, true)
                        parseUnaryExpression(:, true)
                          parsePrimary(:, expression)
                            parseLiteralNull(:)
                              listener: handleLiteralNull(null)
                    listener: handleLiteralMapEntry(:, })
                    listener: handleLiteralSetOrMap(1, {, null, }, false)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_comma, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_comma, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_comma, typeArgs_comma, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  listener: handleNoTypeArguments([)
                  parseLiteralListSuffix(=, null)
                    parseExpression([)
                      parsePrecedenceExpression([, 1, true)
                        parseUnaryExpression([, true)
                          parsePrimary([, expression)
                            parseSendOrFunctionLiteral([, expression)
                              parseSend([, expression)
                                isNextIdentifier([)
                                ensureIdentifier([, expression)
                                  listener: handleIdentifier(f, expression)
                                listener: handleNoTypeArguments(<)
                                parseArgumentsOpt(f)
                                  listener: handleNoArguments(<)
                                listener: handleSend(f, <)
                        listener: beginTypeArguments(<)
                        listener: handleIdentifier(a, typeReference)
                        listener: handleNoTypeArguments(,)
                        listener: handleType(a, null)
                        listener: handleIdentifier(b, typeReference)
                        listener: handleNoTypeArguments(>)
                        listener: handleType(b, null)
                        listener: endTypeArguments(2, <, >)
                        listener: handleTypeArgumentApplication(<)
                    parseExpression(,)
                      parsePrecedenceExpression(,, 1, true)
                        parseUnaryExpression(,, true)
                          parsePrimary(,, expression)
                            parseLiteralNull(,)
                              listener: handleLiteralNull(null)
                    listener: handleLiteralList(2, [, null, ])
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_equals, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_equals, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_equals, typeArgs_equals, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              listener: beginBinaryExpression(==)
              parsePrecedenceExpression(==, 8, true)
                parseUnaryExpression(==, true)
                  parsePrimary(==, expression)
                    parseLiteralNull(==)
                      listener: handleLiteralNull(null)
              listener: endBinaryExpression(==)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_not_equals, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_not_equals, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_not_equals, typeArgs_not_equals, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              listener: beginBinaryExpression(!=)
              parsePrecedenceExpression(!=, 8, true)
                parseUnaryExpression(!=, true)
                  parsePrimary(!=, expression)
                    parseLiteralNull(!=)
                      listener: handleLiteralNull(null)
              listener: endBinaryExpression(!=)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_openParen, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_openParen, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_openParen, typeArgs_openParen, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    looksLikeFunctionBody(;)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(a, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(a, null)
                      listener: handleIdentifier(b, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(b, null)
                      listener: endTypeArguments(2, <, >)
                      parseArgumentsOpt(>)
                        parseArguments(>)
                          parseArgumentsRest(()
                            listener: beginArguments(()
                            listener: endArguments(0, (, ))
                      listener: handleSend(f, ;)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_percent, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_percent, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_percent, typeArgs_percent, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              listener: beginBinaryExpression(%)
              parsePrecedenceExpression(%, 15, true)
                parseUnaryExpression(%, true)
                  parsePrimary(%, expression)
                    parseLiteralInt(%)
                      listener: handleLiteralInt(0)
              listener: endBinaryExpression(%)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_period_methodInvocation, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_period_methodInvocation, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_period_methodInvocation, typeArgs_period_methodInvocation, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parseImplicitCreationExpression(=, Instance of 'ComplexTypeParamOrArgInfo')
                  listener: beginImplicitCreationExpression(=)
                  parseConstructorReference(=, Instance of 'ComplexTypeParamOrArgInfo')
                    ensureIdentifier(=, constructorReference)
                      listener: handleIdentifier(f, constructorReference)
                    listener: beginConstructorReference(f)
                    parseQualifiedRestOpt(f, constructorReferenceContinuation)
                    listener: beginTypeArguments(<)
                    listener: handleIdentifier(a, typeReference)
                    listener: handleNoTypeArguments(,)
                    listener: handleType(a, null)
                    listener: handleIdentifier(b, typeReference)
                    listener: handleNoTypeArguments(>)
                    listener: handleType(b, null)
                    listener: endTypeArguments(2, <, >)
                    ensureIdentifier(., constructorReferenceContinuationAfterTypeArguments)
                      listener: handleIdentifier(toString, constructorReferenceContinuationAfterTypeArguments)
                    listener: endConstructorReference(f, ., ()
                  parseConstructorInvocationArguments(toString)
                    parseArgumentsRest(()
                      listener: beginArguments(()
                      listener: endArguments(0, (, ))
                  listener: endImplicitCreationExpression(=)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_period_methodInvocation_generic, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_period_methodInvocation_generic, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_period_methodInvocation_generic, typeArgs_period_methodInvocation_generic, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              parsePrimary(., expressionContinuation)
                parseSendOrFunctionLiteral(., expressionContinuation)
                  looksLikeFunctionBody(;)
                  parseSend(., expressionContinuation)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(foo, expressionContinuation)
                    listener: beginTypeArguments(<)
                    listener: handleIdentifier(c, typeReference)
                    listener: handleNoTypeArguments(>)
                    listener: handleType(c, null)
                    listener: endTypeArguments(1, <, >)
                    parseArgumentsOpt(>)
                      parseArguments(>)
                        parseArgumentsRest(()
                          listener: beginArguments(()
                          listener: endArguments(0, (, ))
                    listener: handleSend(foo, ;)
              listener: handleEndingBinaryExpression(.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_period_period, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_period_period, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_period_period, typeArgs_period_period, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              parseCascadeExpression(>)
                listener: beginCascade(..)
                parseSend(.., expressionContinuation)
                  isNextIdentifier(..)
                  ensureIdentifier(.., expressionContinuation)
                    listener: handleIdentifier(toString, expressionContinuation)
                  listener: handleNoTypeArguments(()
                  parseArgumentsOpt(toString)
                    parseArguments(toString)
                      parseArgumentsRest(()
                        listener: beginArguments(()
                        listener: endArguments(0, (, ))
                  listener: handleSend(toString, ;)
                listener: handleEndingBinaryExpression(..)
                parseArgumentOrIndexStar(), Instance of 'NoTypeParamOrArg', false)
                listener: endCascade()
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_period_propertyAccess, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_period_propertyAccess, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_period_propertyAccess, typeArgs_period_propertyAccess, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              parsePrimary(., expressionContinuation)
                parseSendOrFunctionLiteral(., expressionContinuation)
                  parseSend(., expressionContinuation)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(hashCode, expressionContinuation)
                    listener: handleNoTypeArguments(;)
                    parseArgumentsOpt(hashCode)
                      listener: handleNoArguments(;)
                    listener: handleSend(hashCode, ;)
              listener: handleEndingBinaryExpression(.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_plus, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_plus, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_plus, typeArgs_plus, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              listener: beginBinaryExpression(+)
              parsePrecedenceExpression(+, 14, true)
                parseUnaryExpression(+, true)
                  parsePrimary(+, expression)
                    parseLiteralInt(+)
                      listener: handleLiteralInt(0)
              listener: endBinaryExpression(+)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_question, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_question, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_question, typeArgs_question, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              parseConditionalExpressionRest(>)
                listener: beginConditionalExpression(?)
                parseExpressionWithoutCascade(?)
                  parsePrecedenceExpression(?, 1, false)
                    parseUnaryExpression(?, false)
                      parsePrimary(?, expression)
                        parseLiteralNull(?)
                          listener: handleLiteralNull(null)
                ensureColon(null)
                listener: handleConditionalExpressionColon()
                parseExpressionWithoutCascade(:)
                  parsePrecedenceExpression(:, 1, false)
                    parseUnaryExpression(:, false)
                      parsePrimary(:, expression)
                        parseLiteralNull(:)
                          listener: handleLiteralNull(null)
                listener: endConditionalExpression(?, :)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_question_period_methodInvocation, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_question_period_methodInvocation, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_question_period_methodInvocation, typeArgs_question_period_methodInvocation, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              parsePrimary(?., expressionContinuation)
                parseSendOrFunctionLiteral(?., expressionContinuation)
                  looksLikeFunctionBody(;)
                  parseSend(?., expressionContinuation)
                    isNextIdentifier(?.)
                    ensureIdentifier(?., expressionContinuation)
                      listener: handleIdentifier(toString, expressionContinuation)
                    listener: handleNoTypeArguments(()
                    parseArgumentsOpt(toString)
                      parseArguments(toString)
                        parseArgumentsRest(()
                          listener: beginArguments(()
                          listener: endArguments(0, (, ))
                    listener: handleSend(toString, ;)
              listener: handleEndingBinaryExpression(?.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_question_period_methodInvocation_generic, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_question_period_methodInvocation_generic, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_question_period_methodInvocation_generic, typeArgs_question_period_methodInvocation_generic, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              parsePrimary(?., expressionContinuation)
                parseSendOrFunctionLiteral(?., expressionContinuation)
                  looksLikeFunctionBody(;)
                  parseSend(?., expressionContinuation)
                    isNextIdentifier(?.)
                    ensureIdentifier(?., expressionContinuation)
                      listener: handleIdentifier(foo, expressionContinuation)
                    listener: beginTypeArguments(<)
                    listener: handleIdentifier(c, typeReference)
                    listener: handleNoTypeArguments(>)
                    listener: handleType(c, null)
                    listener: endTypeArguments(1, <, >)
                    parseArgumentsOpt(>)
                      parseArguments(>)
                        parseArgumentsRest(()
                          listener: beginArguments(()
                          listener: endArguments(0, (, ))
                    listener: handleSend(foo, ;)
              listener: handleEndingBinaryExpression(?.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_question_period_period, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_question_period_period, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_question_period_period, typeArgs_question_period_period, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              parseCascadeExpression(>)
                listener: beginCascade(?..)
                parseSend(?.., expressionContinuation)
                  isNextIdentifier(?..)
                  ensureIdentifier(?.., expressionContinuation)
                    listener: handleIdentifier(toString, expressionContinuation)
                  listener: handleNoTypeArguments(()
                  parseArgumentsOpt(toString)
                    parseArguments(toString)
                      parseArgumentsRest(()
                        listener: beginArguments(()
                        listener: endArguments(0, (, ))
                  listener: handleSend(toString, ;)
                listener: handleEndingBinaryExpression(?..)
                parseArgumentOrIndexStar(), Instance of 'NoTypeParamOrArg', false)
                listener: endCascade()
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_question_period_propertyAccess, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_question_period_propertyAccess, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_question_period_propertyAccess, typeArgs_question_period_propertyAccess, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              parsePrimary(?., expressionContinuation)
                parseSendOrFunctionLiteral(?., expressionContinuation)
                  parseSend(?., expressionContinuation)
                    isNextIdentifier(?.)
                    ensureIdentifier(?., expressionContinuation)
                      listener: handleIdentifier(hashCode, expressionContinuation)
                    listener: handleNoTypeArguments(;)
                    parseArgumentsOpt(hashCode)
                      listener: handleNoArguments(;)
                    listener: handleSend(hashCode, ;)
              listener: handleEndingBinaryExpression(?.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_question_question, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_question_question, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_question_question, typeArgs_question_question, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              listener: beginBinaryExpression(??)
              parsePrecedenceExpression(??, 5, true)
                parseUnaryExpression(??, true)
                  parsePrimary(??, expression)
                    parseLiteralInt(??)
                      listener: handleLiteralInt(0)
              listener: endBinaryExpression(??)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_semicolon, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_semicolon, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_semicolon, typeArgs_semicolon, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_slash, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_slash, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_slash, typeArgs_slash, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              listener: beginBinaryExpression(/)
              parsePrecedenceExpression(/, 15, true)
                parseUnaryExpression(/, true)
                  parsePrimary(/, expression)
                    parseLiteralInt(/)
                      listener: handleLiteralInt(1)
              listener: endBinaryExpression(/)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', typeArgs_tilde_slash, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(typeArgs_tilde_slash, topLevelVariableDeclaration)
        parseFieldInitializerOpt(typeArgs_tilde_slash, typeArgs_tilde_slash, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(a, typeReference)
              listener: handleNoTypeArguments(,)
              listener: handleType(a, null)
              listener: handleIdentifier(b, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(b, null)
              listener: endTypeArguments(2, <, >)
              listener: handleTypeArgumentApplication(<)
              listener: beginBinaryExpression(~/)
              parsePrecedenceExpression(~/, 15, true)
                parseUnaryExpression(~/, true)
                  parsePrimary(~/, expression)
                    parseLiteralInt(~/)
                      listener: handleLiteralInt(1)
              listener: endBinaryExpression(~/)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', operators_bang_openBracket, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(operators_bang_openBracket, topLevelVariableDeclaration)
        parseFieldInitializerOpt(operators_bang_openBracket, operators_bang_openBracket, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    looksLikeFunctionBody(;)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(()
                      parseArgumentsOpt(f)
                        parseArguments(f)
                          parseArgumentsRest(()
                            listener: beginArguments(()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true)
                                parseUnaryExpression((, true)
                                  parsePrimary((, expression)
                                    parseSendOrFunctionLiteral((, expression)
                                      parseSend((, expression)
                                        isNextIdentifier(()
                                        ensureIdentifier((, expression)
                                          listener: handleIdentifier(a, expression)
                                        listener: handleNoTypeArguments(<)
                                        parseArgumentsOpt(a)
                                          listener: handleNoArguments(<)
                                        listener: handleSend(a, <)
                                listener: beginBinaryExpression(<)
                                parsePrecedenceExpression(<, 9, true)
                                  parseUnaryExpression(<, true)
                                    parsePrimary(<, expression)
                                      parseSendOrFunctionLiteral(<, expression)
                                        parseSend(<, expression)
                                          isNextIdentifier(<)
                                          ensureIdentifier(<, expression)
                                            listener: handleIdentifier(b, expression)
                                          listener: handleNoTypeArguments(,)
                                          parseArgumentsOpt(b)
                                            listener: handleNoArguments(,)
                                          listener: handleSend(b, ,)
                                listener: endBinaryExpression(<)
                            parseExpression(,)
                              parsePrecedenceExpression(,, 1, true)
                                parseUnaryExpression(,, true)
                                  parsePrimary(,, expression)
                                    parseSendOrFunctionLiteral(,, expression)
                                      parseSend(,, expression)
                                        isNextIdentifier(,)
                                        ensureIdentifier(,, expression)
                                          listener: handleIdentifier(c, expression)
                                        listener: handleNoTypeArguments(>)
                                        parseArgumentsOpt(c)
                                          listener: handleNoArguments(>)
                                        listener: handleSend(c, >)
                                listener: beginBinaryExpression(>)
                                parsePrecedenceExpression(>, 9, true)
                                  parseUnaryExpression(>, true)
                                    parsePrecedenceExpression(!, 16, true)
                                      parseUnaryExpression(!, true)
                                        parsePrimary(!, expression)
                                          listener: handleNoTypeArguments([)
                                          parseLiteralListSuffix(!, null)
                                            parseExpression([)
                                              parsePrecedenceExpression([, 1, true)
                                                parseUnaryExpression([, true)
                                                  parsePrimary([, expression)
                                                    parseSendOrFunctionLiteral([, expression)
                                                      parseSend([, expression)
                                                        isNextIdentifier([)
                                                        ensureIdentifier([, expression)
                                                          listener: handleIdentifier(d, expression)
                                                        listener: handleNoTypeArguments(])
                                                        parseArgumentsOpt(d)
                                                          listener: handleNoArguments(])
                                                        listener: handleSend(d, ])
                                            listener: handleLiteralList(1, [, null, ])
                                    listener: handleUnaryPrefixExpression(!)
                                listener: endBinaryExpression(>)
                            listener: endArguments(2, (, ))
                      listener: handleSend(f, ;)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', operators_bang_paren, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(operators_bang_paren, topLevelVariableDeclaration)
        parseFieldInitializerOpt(operators_bang_paren, operators_bang_paren, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    looksLikeFunctionBody(;)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(()
                      parseArgumentsOpt(f)
                        parseArguments(f)
                          parseArgumentsRest(()
                            listener: beginArguments(()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true)
                                parseUnaryExpression((, true)
                                  parsePrimary((, expression)
                                    parseSendOrFunctionLiteral((, expression)
                                      parseSend((, expression)
                                        isNextIdentifier(()
                                        ensureIdentifier((, expression)
                                          listener: handleIdentifier(a, expression)
                                        listener: handleNoTypeArguments(<)
                                        parseArgumentsOpt(a)
                                          listener: handleNoArguments(<)
                                        listener: handleSend(a, <)
                                listener: beginBinaryExpression(<)
                                parsePrecedenceExpression(<, 9, true)
                                  parseUnaryExpression(<, true)
                                    parsePrimary(<, expression)
                                      parseSendOrFunctionLiteral(<, expression)
                                        parseSend(<, expression)
                                          isNextIdentifier(<)
                                          ensureIdentifier(<, expression)
                                            listener: handleIdentifier(b, expression)
                                          listener: handleNoTypeArguments(,)
                                          parseArgumentsOpt(b)
                                            listener: handleNoArguments(,)
                                          listener: handleSend(b, ,)
                                listener: endBinaryExpression(<)
                            parseExpression(,)
                              parsePrecedenceExpression(,, 1, true)
                                parseUnaryExpression(,, true)
                                  parsePrimary(,, expression)
                                    parseSendOrFunctionLiteral(,, expression)
                                      parseSend(,, expression)
                                        isNextIdentifier(,)
                                        ensureIdentifier(,, expression)
                                          listener: handleIdentifier(c, expression)
                                        listener: handleNoTypeArguments(>)
                                        parseArgumentsOpt(c)
                                          listener: handleNoArguments(>)
                                        listener: handleSend(c, >)
                                listener: beginBinaryExpression(>)
                                parsePrecedenceExpression(>, 9, true)
                                  parseUnaryExpression(>, true)
                                    parsePrecedenceExpression(!, 16, true)
                                      parseUnaryExpression(!, true)
                                        parsePrimary(!, expression)
                                          parseParenthesizedExpressionOrFunctionLiteral(!)
                                            parseParenthesizedExpression(!)
                                              parseExpressionInParenthesis(!)
                                                parseExpressionInParenthesisRest(()
                                                  parseExpression(()
                                                    parsePrecedenceExpression((, 1, true)
                                                      parseUnaryExpression((, true)
                                                        parsePrimary((, expression)
                                                          parseSendOrFunctionLiteral((, expression)
                                                            parseSend((, expression)
                                                              isNextIdentifier(()
                                                              ensureIdentifier((, expression)
                                                                listener: handleIdentifier(d, expression)
                                                              listener: handleNoTypeArguments())
                                                              parseArgumentsOpt(d)
                                                                listener: handleNoArguments())
                                                              listener: handleSend(d, ))
                                                  ensureCloseParen(d, ()
                                              listener: handleParenthesizedExpression(()
                                    listener: handleUnaryPrefixExpression(!)
                                listener: endBinaryExpression(>)
                            listener: endArguments(2, (, ))
                      listener: handleSend(f, ;)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', operators_lessThan, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(operators_lessThan, topLevelVariableDeclaration)
        parseFieldInitializerOpt(operators_lessThan, operators_lessThan, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(f)
                        listener: handleNoArguments(<)
                      listener: handleSend(f, <)
              listener: beginBinaryExpression(<)
              parsePrecedenceExpression(<, 9, true)
                parseUnaryExpression(<, true)
                  parsePrimary(<, expression)
                    parseSendOrFunctionLiteral(<, expression)
                      parseSend(<, expression)
                        isNextIdentifier(<)
                        ensureIdentifier(<, expression)
                          listener: handleIdentifier(a, expression)
                        listener: handleNoTypeArguments(>)
                        parseArgumentsOpt(a)
                          listener: handleNoArguments(>)
                        listener: handleSend(a, >)
              listener: endBinaryExpression(<)
              reportRecoverableError(>, EqualityCannotBeEqualityOperand)
                listener: handleRecoverableError(EqualityCannotBeEqualityOperand, >, >)
              listener: beginBinaryExpression(>)
              parsePrecedenceExpression(>, 9, true)
                parseUnaryExpression(>, true)
                  parsePrimary(>, expression)
                    parseLiteralListSetMapOrFunction(>, null)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(b, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(b, null)
                      listener: endTypeArguments(1, <, >)
                      reportRecoverableError(;, Message[ExpectedButGot, Expected '[' before this., null, {string: [}])
                        listener: handleRecoverableError(Message[ExpectedButGot, Expected '[' before this., null, {string: [}], ;, ;)
                      rewriter()
                      parseLiteralListSuffix(>, null)
                        rewriteSquareBrackets(>)
                          link([, ])
                          rewriter()
                        listener: handleLiteralList(0, [, null, ])
              listener: endBinaryExpression(>)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', operators_minus, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(operators_minus, topLevelVariableDeclaration)
        parseFieldInitializerOpt(operators_minus, operators_minus, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    looksLikeFunctionBody(;)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(()
                      parseArgumentsOpt(f)
                        parseArguments(f)
                          parseArgumentsRest(()
                            listener: beginArguments(()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true)
                                parseUnaryExpression((, true)
                                  parsePrimary((, expression)
                                    parseSendOrFunctionLiteral((, expression)
                                      parseSend((, expression)
                                        isNextIdentifier(()
                                        ensureIdentifier((, expression)
                                          listener: handleIdentifier(a, expression)
                                        listener: handleNoTypeArguments(<)
                                        parseArgumentsOpt(a)
                                          listener: handleNoArguments(<)
                                        listener: handleSend(a, <)
                                listener: beginBinaryExpression(<)
                                parsePrecedenceExpression(<, 9, true)
                                  parseUnaryExpression(<, true)
                                    parsePrimary(<, expression)
                                      parseSendOrFunctionLiteral(<, expression)
                                        parseSend(<, expression)
                                          isNextIdentifier(<)
                                          ensureIdentifier(<, expression)
                                            listener: handleIdentifier(b, expression)
                                          listener: handleNoTypeArguments(,)
                                          parseArgumentsOpt(b)
                                            listener: handleNoArguments(,)
                                          listener: handleSend(b, ,)
                                listener: endBinaryExpression(<)
                            parseExpression(,)
                              parsePrecedenceExpression(,, 1, true)
                                parseUnaryExpression(,, true)
                                  parsePrimary(,, expression)
                                    parseSendOrFunctionLiteral(,, expression)
                                      parseSend(,, expression)
                                        isNextIdentifier(,)
                                        ensureIdentifier(,, expression)
                                          listener: handleIdentifier(c, expression)
                                        listener: handleNoTypeArguments(>)
                                        parseArgumentsOpt(c)
                                          listener: handleNoArguments(>)
                                        listener: handleSend(c, >)
                                listener: beginBinaryExpression(>)
                                parsePrecedenceExpression(>, 9, true)
                                  parseUnaryExpression(>, true)
                                    parsePrecedenceExpression(-, 16, true)
                                      parseUnaryExpression(-, true)
                                        parsePrimary(-, expression)
                                          parseSendOrFunctionLiteral(-, expression)
                                            parseSend(-, expression)
                                              isNextIdentifier(-)
                                              ensureIdentifier(-, expression)
                                                listener: handleIdentifier(d, expression)
                                              listener: handleNoTypeArguments())
                                              parseArgumentsOpt(d)
                                                listener: handleNoArguments())
                                              listener: handleSend(d, ))
                                    listener: handleUnaryPrefixExpression(-)
                                listener: endBinaryExpression(>)
                            listener: endArguments(2, (, ))
                      listener: handleSend(f, ;)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', operators_openBracket, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(operators_openBracket, topLevelVariableDeclaration)
        parseFieldInitializerOpt(operators_openBracket, operators_openBracket, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    looksLikeFunctionBody(;)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(()
                      parseArgumentsOpt(f)
                        parseArguments(f)
                          parseArgumentsRest(()
                            listener: beginArguments(()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true)
                                parseUnaryExpression((, true)
                                  parsePrimary((, expression)
                                    parseSendOrFunctionLiteral((, expression)
                                      parseSend((, expression)
                                        isNextIdentifier(()
                                        ensureIdentifier((, expression)
                                          listener: handleIdentifier(a, expression)
                                        listener: handleNoTypeArguments(<)
                                        parseArgumentsOpt(a)
                                          listener: handleNoArguments(<)
                                        listener: handleSend(a, <)
                                listener: beginBinaryExpression(<)
                                parsePrecedenceExpression(<, 9, true)
                                  parseUnaryExpression(<, true)
                                    parsePrimary(<, expression)
                                      parseSendOrFunctionLiteral(<, expression)
                                        parseSend(<, expression)
                                          isNextIdentifier(<)
                                          ensureIdentifier(<, expression)
                                            listener: handleIdentifier(b, expression)
                                          listener: handleNoTypeArguments(,)
                                          parseArgumentsOpt(b)
                                            listener: handleNoArguments(,)
                                          listener: handleSend(b, ,)
                                listener: endBinaryExpression(<)
                            parseExpression(,)
                              parsePrecedenceExpression(,, 1, true)
                                parseUnaryExpression(,, true)
                                  parsePrimary(,, expression)
                                    parseSendOrFunctionLiteral(,, expression)
                                      parseSend(,, expression)
                                        isNextIdentifier(,)
                                        ensureIdentifier(,, expression)
                                          listener: handleIdentifier(c, expression)
                                        listener: handleNoTypeArguments(>)
                                        parseArgumentsOpt(c)
                                          listener: handleNoArguments(>)
                                        listener: handleSend(c, >)
                                listener: beginBinaryExpression(>)
                                parsePrecedenceExpression(>, 9, true)
                                  parseUnaryExpression(>, true)
                                    parsePrimary(>, expression)
                                      listener: handleNoTypeArguments([)
                                      parseLiteralListSuffix(>, null)
                                        parseExpression([)
                                          parsePrecedenceExpression([, 1, true)
                                            parseUnaryExpression([, true)
                                              parsePrimary([, expression)
                                                parseSendOrFunctionLiteral([, expression)
                                                  parseSend([, expression)
                                                    isNextIdentifier([)
                                                    ensureIdentifier([, expression)
                                                      listener: handleIdentifier(d, expression)
                                                    listener: handleNoTypeArguments(])
                                                    parseArgumentsOpt(d)
                                                      listener: handleNoArguments(])
                                                    listener: handleSend(d, ])
                                        listener: handleLiteralList(1, [, null, ])
                                listener: endBinaryExpression(>)
                            listener: endArguments(2, (, ))
                      listener: handleSend(f, ;)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', operators_openBracket_error, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(operators_openBracket_error, topLevelVariableDeclaration)
        parseFieldInitializerOpt(operators_openBracket_error, operators_openBracket_error, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    looksLikeFunctionBody(;)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(()
                      parseArgumentsOpt(f)
                        parseArguments(f)
                          parseArgumentsRest(()
                            listener: beginArguments(()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true)
                                parseUnaryExpression((, true)
                                  parsePrimary((, expression)
                                    parseSendOrFunctionLiteral((, expression)
                                      parseSend((, expression)
                                        isNextIdentifier(()
                                        ensureIdentifier((, expression)
                                          listener: handleIdentifier(a, expression)
                                        listener: handleNoTypeArguments(<)
                                        parseArgumentsOpt(a)
                                          listener: handleNoArguments(<)
                                        listener: handleSend(a, <)
                                listener: beginBinaryExpression(<)
                                parsePrecedenceExpression(<, 9, true)
                                  parseUnaryExpression(<, true)
                                    parsePrimary(<, expression)
                                      parseSendOrFunctionLiteral(<, expression)
                                        parseSend(<, expression)
                                          isNextIdentifier(<)
                                          ensureIdentifier(<, expression)
                                            listener: handleIdentifier(b, expression)
                                          listener: handleNoTypeArguments(,)
                                          parseArgumentsOpt(b)
                                            listener: handleNoArguments(,)
                                          listener: handleSend(b, ,)
                                listener: endBinaryExpression(<)
                            parseExpression(,)
                              parsePrecedenceExpression(,, 1, true)
                                parseUnaryExpression(,, true)
                                  parsePrimary(,, expression)
                                    parseSendOrFunctionLiteral(,, expression)
                                      parseSend(,, expression)
                                        isNextIdentifier(,)
                                        ensureIdentifier(,, expression)
                                          listener: handleIdentifier(c, expression)
                                        listener: handleNoTypeArguments(>)
                                        parseArgumentsOpt(c)
                                          listener: handleNoArguments(>)
                                        listener: handleSend(c, >)
                                listener: beginBinaryExpression(>)
                                parsePrecedenceExpression(>, 9, true)
                                  parseUnaryExpression(>, true)
                                    parsePrimary(>, expression)
                                      listener: handleNoTypeArguments([)
                                      parseLiteralListSuffix(>, null)
                                        parseExpression([)
                                          parsePrecedenceExpression([, 1, true)
                                            parseUnaryExpression([, true)
                                              parsePrimary([, expression)
                                                parseSendOrFunctionLiteral([, expression)
                                                  parseSend([, expression)
                                                    isNextIdentifier([)
                                                    ensureIdentifier([, expression)
                                                      listener: handleIdentifier(d, expression)
                                                    listener: handleNoTypeArguments(])
                                                    parseArgumentsOpt(d)
                                                      listener: handleNoArguments(])
                                                    listener: handleSend(d, ])
                                        listener: handleLiteralList(1, [, null, ])
                                listener: endBinaryExpression(>)
                                reportRecoverableError(>, EqualityCannotBeEqualityOperand)
                                  listener: handleRecoverableError(EqualityCannotBeEqualityOperand, >, >)
                                listener: beginBinaryExpression(>)
                                parsePrecedenceExpression(>, 9, true)
                                  parseUnaryExpression(>, true)
                                    parsePrimary(>, expression)
                                      parseSendOrFunctionLiteral(>, expression)
                                        parseSend(>, expression)
                                          isNextIdentifier(>)
                                          ensureIdentifier(>, expression)
                                            listener: handleIdentifier(e, expression)
                                          listener: handleNoTypeArguments())
                                          parseArgumentsOpt(e)
                                            listener: handleNoArguments())
                                          listener: handleSend(e, ))
                                listener: endBinaryExpression(>)
                            listener: endArguments(2, (, ))
                      listener: handleSend(f, ;)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      parseFields(;, null, null, null, null, null, var, var, Instance of 'NoType', operators_openBracket_unambiguous, DeclarationKind.TopLevel, null, false)
        listener: beginFields(;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(operators_openBracket_unambiguous, topLevelVariableDeclaration)
        parseFieldInitializerOpt(operators_openBracket_unambiguous, operators_openBracket_unambiguous, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    looksLikeFunctionBody(;)
                    parseSend(=, expression)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(f, expression)
                      listener: handleNoTypeArguments(()
                      parseArgumentsOpt(f)
                        parseArguments(f)
                          parseArgumentsRest(()
                            listener: beginArguments(()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true)
                                parseUnaryExpression((, true)
                                  parsePrimary((, expression)
                                    parseSendOrFunctionLiteral((, expression)
                                      parseSend((, expression)
                                        isNextIdentifier(()
                                        ensureIdentifier((, expression)
                                          listener: handleIdentifier(a, expression)
                                        listener: handleNoTypeArguments(<)
                                        parseArgumentsOpt(a)
                                          listener: handleNoArguments(<)
                                        listener: handleSend(a, <)
                                listener: beginBinaryExpression(<)
                                parsePrecedenceExpression(<, 9, true)
                                  parseUnaryExpression(<, true)
                                    parsePrimary(<, expression)
                                      parseSendOrFunctionLiteral(<, expression)
                                        parseSend(<, expression)
                                          isNextIdentifier(<)
                                          ensureIdentifier(<, expression)
                                            listener: handleIdentifier(b, expression)
                                          listener: handleNoTypeArguments(,)
                                          parseArgumentsOpt(b)
                                            listener: handleNoArguments(,)
                                          listener: handleSend(b, ,)
                                listener: endBinaryExpression(<)
                            parseExpression(,)
                              parsePrecedenceExpression(,, 1, true)
                                parseUnaryExpression(,, true)
                                  parsePrimary(,, expression)
                                    parseSendOrFunctionLiteral(,, expression)
                                      parseSend(,, expression)
                                        isNextIdentifier(,)
                                        ensureIdentifier(,, expression)
                                          listener: handleIdentifier(c, expression)
                                        listener: handleNoTypeArguments(>)
                                        parseArgumentsOpt(c)
                                          listener: handleNoArguments(>)
                                        listener: handleSend(c, >)
                                listener: beginBinaryExpression(>)
                                parsePrecedenceExpression(>, 9, true)
                                  parseUnaryExpression(>, true)
                                    parsePrimary(>, expression)
                                      listener: handleNoTypeArguments([)
                                      parseLiteralListSuffix(>, null)
                                        parseExpression([)
                                          parsePrecedenceExpression([, 1, true)
                                            parseUnaryExpression([, true)
                                              parsePrimary([, expression)
                                                parseSendOrFunctionLiteral([, expression)
                                                  parseSend([, expression)
                                                    isNextIdentifier([)
                                                    ensureIdentifier([, expression)
                                                      listener: handleIdentifier(d, expression)
                                                    listener: handleNoTypeArguments(,)
                                                    parseArgumentsOpt(d)
                                                      listener: handleNoArguments(,)
                                                    listener: handleSend(d, ,)
                                        parseExpression(,)
                                          parsePrecedenceExpression(,, 1, true)
                                            parseUnaryExpression(,, true)
                                              parsePrimary(,, expression)
                                                parseSendOrFunctionLiteral(,, expression)
                                                  parseSend(,, expression)
                                                    isNextIdentifier(,)
                                                    ensureIdentifier(,, expression)
                                                      listener: handleIdentifier(e, expression)
                                                    listener: handleNoTypeArguments(])
                                                    parseArgumentsOpt(e)
                                                      listener: handleNoArguments(])
                                                    listener: handleSend(e, ])
                                        listener: handleLiteralList(2, [, null, ])
                                listener: endBinaryExpression(>)
                            listener: endArguments(2, (, ))
                      listener: handleSend(f, ;)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(var)
  listener: endCompilationUnit(34, )
