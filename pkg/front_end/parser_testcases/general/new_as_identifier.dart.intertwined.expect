parseUnit(class)
  skipErrorTokens(class)
  listener: beginCompilationUnit(class)
  syntheticPreviousToken(class)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, class, null, null, null, null, null, Instance of 'DirectiveContext')
      parseClassOrNamedMixinApplication(null, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(C, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, C)
        parseClass(C, class, class, C)
          parseClassHeaderOpt(C, class, class)
            parseClassExtendsOpt(C)
              listener: handleNoType(C)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(C)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(C)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(C, DeclarationKind.Class, C)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, C)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, C)
              parseMetadataStar({)
                listener: beginMetadataStar(C)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(.)
              parseMethod({, null, null, null, null, null, null, null, {, Instance of 'NoType', null, C, DeclarationKind.Class, C, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, C)
                listener: handleNoType({)
                ensureIdentifierPotentiallyRecovered({, methodDeclaration, false)
                  listener: handleIdentifier(C, methodDeclaration)
                parseQualifiedRestOpt(C, methodDeclarationContinuation)
                  parseQualifiedRest(C, methodDeclarationContinuation)
                    rewriter()
                    listener: handleNewAsIdentifier(new)
                    ensureIdentifier(., methodDeclarationContinuation)
                      listener: handleIdentifier(new, methodDeclarationContinuation)
                    listener: handleQualified(.)
                parseMethodTypeVar(new)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(new, C, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(new, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  listener: handleEmptyFunctionBody(;)
                listener: endClassConstructor(null, C, (, null, ;)
              listener: endMember()
            notEofOrValue(}, C)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, C)
              parseMetadataStar(;)
                listener: beginMetadataStar(C)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(.)
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', null, C, DeclarationKind.Class, C, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, C)
                listener: handleNoType(;)
                ensureIdentifierPotentiallyRecovered(;, methodDeclaration, false)
                  listener: handleIdentifier(C, methodDeclaration)
                parseQualifiedRestOpt(C, methodDeclarationContinuation)
                  parseQualifiedRest(C, methodDeclarationContinuation)
                    ensureIdentifier(., methodDeclarationContinuation)
                      listener: handleIdentifier(constructor_field_initializer, methodDeclarationContinuation)
                    listener: handleQualified(.)
                parseMethodTypeVar(constructor_field_initializer)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(constructor_field_initializer, C, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(constructor_field_initializer, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  parseInitializers(:)
                    listener: beginInitializers(:)
                    parseInitializer(:)
                      listener: beginInitializer(this)
                      insertSyntheticIdentifier(., fieldInitializer, message: null, messageOnToken: null)
                        reportRecoverableError(new, Message[ExpectedIdentifier, Expected an identifier, but got 'new'., Try inserting an identifier before 'new'., {lexeme: new}])
                          listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'new'., Try inserting an identifier before 'new'., {lexeme: new}], new, new)
                        rewriter()
                      insertSyntheticIdentifier(:, fieldInitializer, message: MissingAssignmentInInitializer, messageOnToken: null)
                        reportRecoverableError(this, MissingAssignmentInInitializer)
                          listener: handleRecoverableError(MissingAssignmentInInitializer, this, this)
                        rewriter()
                      rewriter()
                      parseInitializerExpressionRest(:)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                              parsePrimary(:, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(:, expression, ConstantPatternContext.none)
                                  parseSend(:, expression, ConstantPatternContext.none)
                                    isNextIdentifier(:)
                                    ensureIdentifier(:, expression)
                                      listener: handleIdentifier(, expression)
                                    listener: handleNoTypeArguments(=)
                                    parseArgumentsOpt()
                                      listener: handleNoArguments(=)
                                    listener: handleSend(, =)
                            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                              parseUnaryExpression(=, true, ConstantPatternContext.none)
                                parsePrimary(=, expression, ConstantPatternContext.none)
                                  parseThisExpression(=, expression)
                                    listener: handleThisExpression(this, expression)
                              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                                    isNextIdentifier(.)
                                    ensureIdentifier(., expressionContinuation)
                                      listener: handleIdentifier(, expressionContinuation)
                                    listener: handleNoTypeArguments(new)
                                    parseArgumentsOpt()
                                      listener: handleNoArguments(new)
                                    listener: handleSend(, new)
                              listener: handleEndingBinaryExpression(.)
                            listener: handleAssignmentExpression(=)
                        listener: endInitializer(new)
                    listener: endInitializers(1, :, new)
                parseAsyncModifierOpt()
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(, false, true)
                  ensureBlock(, Instance of 'Template<(Token) => Message>', null)
                    reportRecoverableError(new, Message[ExpectedFunctionBody, Expected a function body, but got 'new'., null, {lexeme: new}])
                      listener: handleRecoverableError(Message[ExpectedFunctionBody, Expected a function body, but got 'new'., null, {lexeme: new}], new, new)
                    insertBlock()
                      rewriter()
                      rewriter()
                  listener: handleInvalidFunctionBody({)
                listener: endClassConstructor(null, C, (, :, })
              listener: endMember()
            notEofOrValue(}, new)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, C)
              parseMetadataStar(})
                listener: beginMetadataStar(new)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(}, }, null, null, null, null, null, null, null, }, Instance of 'NoType', null, DeclarationKind.Class, C)
                reportRecoverableErrorWithToken(new, Instance of 'Template<(Token) => Message>')
                  listener: handleRecoverableError(Message[ExpectedClassMember, Expected a class member, but got 'new'., null, {lexeme: new}], new, new)
                listener: handleInvalidMember(new)
                listener: endMember()
            notEofOrValue(}, =)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(new, DeclarationKind.Class, C)
              parseMetadataStar(new)
                listener: beginMetadataStar(=)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(new, new, null, null, null, null, null, null, null, new, Instance of 'NoType', null, DeclarationKind.Class, C)
                parseInvalidOperatorDeclaration(new, null, null, null, null, null, null, null, new, DeclarationKind.Class, C)
                  reportRecoverableError(=, MissingOperatorKeyword)
                    listener: handleRecoverableError(MissingOperatorKeyword, =, =)
                  rewriter()
                  parseMethod(new, null, null, null, null, null, null, null, new, Instance of 'NoType', null, operator, DeclarationKind.Class, C, false)
                    listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, operator)
                    listener: handleNoType(new)
                    parseOperatorName(new)
                      isUnaryMinus(=)
                      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
                        listener: handleRecoverableError(Message[InvalidOperator, The string '=' isn't a user-definable operator., null, {lexeme: =}], =, =)
                      listener: handleInvalidOperatorName(operator, =)
                    parseMethodTypeVar(=)
                      listener: handleNoTypeVariables(null)
                    parseGetterOrFormalParameters(=, operator, false, MemberKind.NonStaticMethod)
                      missingParameterMessage(MemberKind.NonStaticMethod)
                      reportRecoverableError(=, MissingMethodParameters)
                        listener: handleRecoverableError(MissingMethodParameters, =, =)
                      rewriter()
                      parseFormalParametersRest((, MemberKind.NonStaticMethod)
                        listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                        listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                    parseInitializersOpt())
                      listener: handleNoInitializers()
                    parseAsyncModifierOpt())
                      listener: handleAsyncModifier(null, null)
                      inPlainSync()
                    inPlainSync()
                    parseFunctionBody(), false, true)
                      ensureBlock(), Instance of 'Template<(Token) => Message>', null)
                        reportRecoverableError(null, Message[ExpectedFunctionBody, Expected a function body, but got 'null'., null, {lexeme: null}])
                          listener: handleRecoverableError(Message[ExpectedFunctionBody, Expected a function body, but got 'null'., null, {lexeme: null}], null, null)
                        insertBlock())
                          rewriter()
                          rewriter()
                      listener: handleInvalidFunctionBody({)
                    listener: endClassMethod(null, operator, (, null, })
                  listener: endMember()
            notEofOrValue(}, null)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, C)
              parseMetadataStar(})
                listener: beginMetadataStar(null)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(}, }, null, null, null, null, null, null, null, }, Instance of 'NoType', null, DeclarationKind.Class, C)
                reportRecoverableErrorWithToken(null, Instance of 'Template<(Token) => Message>')
                  listener: handleRecoverableError(Message[ExpectedClassMember, Expected a class member, but got 'null'., null, {lexeme: null}], null, null)
                listener: handleInvalidMember(null)
                listener: endMember()
            notEofOrValue(}, ;)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(null, DeclarationKind.Class, C)
              parseMetadataStar(null)
                listener: beginMetadataStar(;)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(null, null, null, null, null, null, null, null, null, null, Instance of 'NoType', null, DeclarationKind.Class, C)
                reportRecoverableErrorWithToken(;, Instance of 'Template<(Token) => Message>')
                  listener: handleRecoverableError(Message[ExpectedClassMember, Expected a class member, but got ';'., null, {lexeme: ;}], ;, ;)
                listener: handleInvalidMember(;)
                listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 6, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(class)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, class, null, null, null, null, null, Instance of 'DirectiveContext')
      parseClassOrNamedMixinApplication(null, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(D, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, D)
        parseClass(D, class, class, D)
          parseClassHeaderOpt(D, class, class)
            parseClassExtendsOpt(D)
              listener: handleNoType(D)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(D)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(D)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(D, DeclarationKind.Class, D)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, factory)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, D)
              parseMetadataStar({)
                listener: beginMetadataStar(factory)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFactoryMethod({, DeclarationKind.Class, {, null, null, null)
                listener: beginFactoryMethod(DeclarationKind.Class, {, null, null)
                ensureIdentifier(factory, methodDeclaration)
                  listener: handleIdentifier(D, methodDeclaration)
                parseQualifiedRestOpt(D, methodDeclarationContinuation)
                  parseQualifiedRest(D, methodDeclarationContinuation)
                    rewriter()
                    listener: handleNewAsIdentifier(new)
                    ensureIdentifier(., methodDeclarationContinuation)
                      listener: handleIdentifier(new, methodDeclarationContinuation)
                    listener: handleQualified(.)
                parseMethodTypeVar(new)
                  listener: handleNoTypeVariables(()
                parseFormalParametersRequiredOpt(new, MemberKind.Factory)
                  parseFormalParametersRest((, MemberKind.Factory)
                    listener: beginFormalParameters((, MemberKind.Factory)
                    listener: endFormalParameters(0, (, ), MemberKind.Factory)
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression(=>, true, ConstantPatternContext.none)
                          parsePrimary(=>, expression, ConstantPatternContext.none)
                            parseSendOrFunctionLiteral(=>, expression, ConstantPatternContext.none)
                              looksLikeFunctionBody(;)
                              parseSend(=>, expression, ConstantPatternContext.none)
                                isNextIdentifier(=>)
                                ensureIdentifier(=>, expression)
                                  listener: handleIdentifier(C, expression)
                                listener: handleNoTypeArguments(()
                                parseArgumentsOpt(C)
                                  parseArguments(C)
                                    parseArgumentsRest(()
                                      listener: beginArguments(()
                                      listener: endArguments(0, (, ))
                                listener: handleSend(C, ;)
                    ensureSemicolon())
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassFactoryMethod(factory, factory, ;)
              listener: endMember()
            notEofOrValue(}, factory)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, D)
              parseMetadataStar(;)
                listener: beginMetadataStar(factory)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFactoryMethod(;, DeclarationKind.Class, ;, null, null, null)
                listener: beginFactoryMethod(DeclarationKind.Class, ;, null, null)
                ensureIdentifier(factory, methodDeclaration)
                  listener: handleIdentifier(D, methodDeclaration)
                parseQualifiedRestOpt(D, methodDeclarationContinuation)
                  parseQualifiedRest(D, methodDeclarationContinuation)
                    ensureIdentifier(., methodDeclarationContinuation)
                      listener: handleIdentifier(factory_redirection, methodDeclarationContinuation)
                    listener: handleQualified(.)
                parseMethodTypeVar(factory_redirection)
                  listener: handleNoTypeVariables(()
                parseFormalParametersRequiredOpt(factory_redirection, MemberKind.Factory)
                  parseFormalParametersRest((, MemberKind.Factory)
                    listener: beginFormalParameters((, MemberKind.Factory)
                    listener: endFormalParameters(0, (, ), MemberKind.Factory)
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseRedirectingFactoryBody())
                  listener: beginRedirectingFactoryBody(=)
                  parseConstructorReference(=, ConstructorReferenceContext.RedirectingFactory, null)
                    ensureIdentifier(=, constructorReference)
                      listener: handleIdentifier(C, constructorReference)
                    listener: beginConstructorReference(C)
                    parseQualifiedRestOpt(C, constructorReferenceContinuation)
                      parseQualifiedRest(C, constructorReferenceContinuation)
                        rewriter()
                        listener: handleNewAsIdentifier(new)
                        ensureIdentifier(., constructorReferenceContinuation)
                          listener: handleIdentifier(new, constructorReferenceContinuation)
                        listener: handleQualified(.)
                    listener: handleNoTypeArguments(;)
                    listener: handleNoConstructorReferenceContinuationAfterTypeArguments(;)
                    listener: endConstructorReference(C, null, ;, ConstructorReferenceContext.RedirectingFactory)
                  ensureSemicolon(new)
                  listener: endRedirectingFactoryBody(=, ;)
                listener: endClassFactoryMethod(factory, factory, ;)
              listener: endMember()
            notEofOrValue(}, factory)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, D)
              parseMetadataStar(;)
                listener: beginMetadataStar(factory)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFactoryMethod(;, DeclarationKind.Class, ;, null, null, null)
                listener: beginFactoryMethod(DeclarationKind.Class, ;, null, null)
                ensureIdentifier(factory, methodDeclaration)
                  listener: handleIdentifier(D, methodDeclaration)
                parseQualifiedRestOpt(D, methodDeclarationContinuation)
                  parseQualifiedRest(D, methodDeclarationContinuation)
                    ensureIdentifier(., methodDeclarationContinuation)
                      listener: handleIdentifier(factory_redirection_generic, methodDeclarationContinuation)
                    listener: handleQualified(.)
                parseMethodTypeVar(factory_redirection_generic)
                  listener: handleNoTypeVariables(()
                parseFormalParametersRequiredOpt(factory_redirection_generic, MemberKind.Factory)
                  parseFormalParametersRest((, MemberKind.Factory)
                    listener: beginFormalParameters((, MemberKind.Factory)
                    listener: endFormalParameters(0, (, ), MemberKind.Factory)
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseRedirectingFactoryBody())
                  listener: beginRedirectingFactoryBody(=)
                  parseConstructorReference(=, ConstructorReferenceContext.RedirectingFactory, null)
                    ensureIdentifier(=, constructorReference)
                      listener: handleIdentifier(C, constructorReference)
                    listener: beginConstructorReference(C)
                    parseQualifiedRestOpt(C, constructorReferenceContinuation)
                    listener: beginTypeArguments(<)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(>)
                    listener: handleType(int, null)
                    listener: endTypeArguments(1, <, >)
                    ensureIdentifier(., constructorReferenceContinuationAfterTypeArguments)
                      rewriter()
                      listener: handleNewAsIdentifier(new)
                      listener: handleIdentifier(new, constructorReferenceContinuationAfterTypeArguments)
                    listener: endConstructorReference(C, ., ;, ConstructorReferenceContext.RedirectingFactory)
                  ensureSemicolon(new)
                  listener: endRedirectingFactoryBody(=, ;)
                listener: endClassFactoryMethod(factory, factory, ;)
              listener: endMember()
            notEofOrValue(}, factory)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, D)
              parseMetadataStar(;)
                listener: beginMetadataStar(factory)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFactoryMethod(;, DeclarationKind.Class, ;, null, null, null)
                listener: beginFactoryMethod(DeclarationKind.Class, ;, null, null)
                ensureIdentifier(factory, methodDeclaration)
                  listener: handleIdentifier(D, methodDeclaration)
                parseQualifiedRestOpt(D, methodDeclarationContinuation)
                  parseQualifiedRest(D, methodDeclarationContinuation)
                    ensureIdentifier(., methodDeclarationContinuation)
                      listener: handleIdentifier(factory_redirection_prefixed, methodDeclarationContinuation)
                    listener: handleQualified(.)
                parseMethodTypeVar(factory_redirection_prefixed)
                  listener: handleNoTypeVariables(()
                parseFormalParametersRequiredOpt(factory_redirection_prefixed, MemberKind.Factory)
                  parseFormalParametersRest((, MemberKind.Factory)
                    listener: beginFormalParameters((, MemberKind.Factory)
                    listener: endFormalParameters(0, (, ), MemberKind.Factory)
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseRedirectingFactoryBody())
                  listener: beginRedirectingFactoryBody(=)
                  parseConstructorReference(=, ConstructorReferenceContext.RedirectingFactory, null)
                    ensureIdentifier(=, constructorReference)
                      listener: handleIdentifier(prefix, constructorReference)
                    listener: beginConstructorReference(prefix)
                    parseQualifiedRestOpt(prefix, constructorReferenceContinuation)
                      parseQualifiedRest(prefix, constructorReferenceContinuation)
                        ensureIdentifier(., constructorReferenceContinuation)
                          listener: handleIdentifier(C, constructorReferenceContinuation)
                        listener: handleQualified(.)
                    listener: handleNoTypeArguments(.)
                    ensureIdentifier(., constructorReferenceContinuationAfterTypeArguments)
                      rewriter()
                      listener: handleNewAsIdentifier(new)
                      listener: handleIdentifier(new, constructorReferenceContinuationAfterTypeArguments)
                    listener: endConstructorReference(prefix, ., ;, ConstructorReferenceContext.RedirectingFactory)
                  ensureSemicolon(new)
                  listener: endRedirectingFactoryBody(=, ;)
                listener: endClassFactoryMethod(factory, factory, ;)
              listener: endMember()
            notEofOrValue(}, factory)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, D)
              parseMetadataStar(;)
                listener: beginMetadataStar(factory)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFactoryMethod(;, DeclarationKind.Class, ;, null, null, null)
                listener: beginFactoryMethod(DeclarationKind.Class, ;, null, null)
                ensureIdentifier(factory, methodDeclaration)
                  listener: handleIdentifier(D, methodDeclaration)
                parseQualifiedRestOpt(D, methodDeclarationContinuation)
                  parseQualifiedRest(D, methodDeclarationContinuation)
                    ensureIdentifier(., methodDeclarationContinuation)
                      listener: handleIdentifier(factory_redirection_prefixed_generic, methodDeclarationContinuation)
                    listener: handleQualified(.)
                parseMethodTypeVar(factory_redirection_prefixed_generic)
                  listener: handleNoTypeVariables(()
                parseFormalParametersRequiredOpt(factory_redirection_prefixed_generic, MemberKind.Factory)
                  parseFormalParametersRest((, MemberKind.Factory)
                    listener: beginFormalParameters((, MemberKind.Factory)
                    listener: endFormalParameters(0, (, ), MemberKind.Factory)
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseRedirectingFactoryBody())
                  listener: beginRedirectingFactoryBody(=)
                  parseConstructorReference(=, ConstructorReferenceContext.RedirectingFactory, null)
                    ensureIdentifier(=, constructorReference)
                      listener: handleIdentifier(prefix, constructorReference)
                    listener: beginConstructorReference(prefix)
                    parseQualifiedRestOpt(prefix, constructorReferenceContinuation)
                      parseQualifiedRest(prefix, constructorReferenceContinuation)
                        ensureIdentifier(., constructorReferenceContinuation)
                          listener: handleIdentifier(C, constructorReferenceContinuation)
                        listener: handleQualified(.)
                    listener: beginTypeArguments(<)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(>)
                    listener: handleType(int, null)
                    listener: endTypeArguments(1, <, >)
                    ensureIdentifier(., constructorReferenceContinuationAfterTypeArguments)
                      rewriter()
                      listener: handleNewAsIdentifier(new)
                      listener: handleIdentifier(new, constructorReferenceContinuationAfterTypeArguments)
                    listener: endConstructorReference(prefix, ., ;, ConstructorReferenceContext.RedirectingFactory)
                  ensureSemicolon(new)
                  listener: endRedirectingFactoryBody(=, ;)
                listener: endClassFactoryMethod(factory, factory, ;)
              listener: endMember()
            notEofOrValue(}, D)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, D)
              parseMetadataStar(;)
                listener: beginMetadataStar(D)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(.)
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', null, D, DeclarationKind.Class, D, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, D)
                listener: handleNoType(;)
                ensureIdentifierPotentiallyRecovered(;, methodDeclaration, false)
                  listener: handleIdentifier(D, methodDeclaration)
                parseQualifiedRestOpt(D, methodDeclarationContinuation)
                  parseQualifiedRest(D, methodDeclarationContinuation)
                    ensureIdentifier(., methodDeclarationContinuation)
                      listener: handleIdentifier(super_invocation, methodDeclarationContinuation)
                    listener: handleQualified(.)
                parseMethodTypeVar(super_invocation)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(super_invocation, D, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(super_invocation, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  parseInitializers(:)
                    listener: beginInitializers(:)
                    parseInitializer(:)
                      listener: beginInitializer(super)
                      parseSuperInitializerExpression(:)
                        rewriter()
                        listener: handleNewAsIdentifier(new)
                        parseInitializerExpressionRest(:)
                          parseExpression(:)
                            parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                              parseUnaryExpression(:, true, ConstantPatternContext.none)
                                parsePrimary(:, expression, ConstantPatternContext.none)
                                  parseSuperExpression(:, expression)
                                    listener: handleSuperExpression(super, expression)
                              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                                    isNextIdentifier(.)
                                    ensureIdentifier(., expressionContinuation)
                                      listener: handleIdentifier(new, expressionContinuation)
                                    listener: handleNoTypeArguments(()
                                    parseArgumentsOpt(new)
                                      parseArguments(new)
                                        parseArgumentsRest(()
                                          listener: beginArguments(()
                                          listener: endArguments(0, (, ))
                                    listener: handleSend(new, ;)
                              listener: handleEndingBinaryExpression(.)
                          listener: endInitializer(;)
                    listener: endInitializers(1, :, ;)
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  listener: handleEmptyFunctionBody(;)
                listener: endClassConstructor(null, D, (, :, ;)
              listener: endMember()
            notEofOrValue(}, D)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, D)
              parseMetadataStar(;)
                listener: beginMetadataStar(D)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(.)
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', null, D, DeclarationKind.Class, D, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, D)
                listener: handleNoType(;)
                ensureIdentifierPotentiallyRecovered(;, methodDeclaration, false)
                  listener: handleIdentifier(D, methodDeclaration)
                parseQualifiedRestOpt(D, methodDeclarationContinuation)
                  parseQualifiedRest(D, methodDeclarationContinuation)
                    ensureIdentifier(., methodDeclarationContinuation)
                      listener: handleIdentifier(this_redirection, methodDeclarationContinuation)
                    listener: handleQualified(.)
                parseMethodTypeVar(this_redirection)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(this_redirection, D, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(this_redirection, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  parseInitializers(:)
                    listener: beginInitializers(:)
                    parseInitializer(:)
                      listener: beginInitializer(this)
                      rewriter()
                      listener: handleNewAsIdentifier(new)
                      parseInitializerExpressionRest(:)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                              parsePrimary(:, expression, ConstantPatternContext.none)
                                parseThisExpression(:, expression)
                                  listener: handleThisExpression(this, expression)
                            parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                              parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                                parseSend(., expressionContinuation, ConstantPatternContext.none)
                                  isNextIdentifier(.)
                                  ensureIdentifier(., expressionContinuation)
                                    listener: handleIdentifier(new, expressionContinuation)
                                  listener: handleNoTypeArguments(()
                                  parseArgumentsOpt(new)
                                    parseArguments(new)
                                      parseArgumentsRest(()
                                        listener: beginArguments(()
                                        listener: endArguments(0, (, ))
                                  listener: handleSend(new, ;)
                            listener: handleEndingBinaryExpression(.)
                        listener: endInitializer(;)
                    listener: endInitializers(1, :, ;)
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  listener: handleEmptyFunctionBody(;)
                listener: endClassConstructor(null, D, (, :, ;)
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 7, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_invocation_const)
      parseFields(}, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_invocation_const, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, })
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_invocation_const, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_invocation_const, constructor_invocation_const, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseConstExpression(=)
                    listener: beginConstExpression(const)
                    parseConstructorReference(const, ConstructorReferenceContext.Const, null)
                      ensureIdentifier(const, constructorReference)
                        listener: handleIdentifier(C, constructorReference)
                      listener: beginConstructorReference(C)
                      parseQualifiedRestOpt(C, constructorReferenceContinuation)
                        parseQualifiedRest(C, constructorReferenceContinuation)
                          rewriter()
                          listener: handleNewAsIdentifier(new)
                          ensureIdentifier(., constructorReferenceContinuation)
                            listener: handleIdentifier(new, constructorReferenceContinuation)
                          listener: handleQualified(.)
                      listener: handleNoTypeArguments(()
                      listener: handleNoConstructorReferenceContinuationAfterTypeArguments(()
                      listener: endConstructorReference(C, null, (, ConstructorReferenceContext.Const)
                    parseConstructorInvocationArguments(new)
                      parseArgumentsRest(()
                        listener: beginArguments(()
                        listener: endArguments(0, (, ))
                    listener: endConstExpression(const)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_invocation_const_generic)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_invocation_const_generic, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_invocation_const_generic, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_invocation_const_generic, constructor_invocation_const_generic, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseConstExpression(=)
                    listener: beginConstExpression(const)
                    parseConstructorReference(const, ConstructorReferenceContext.Const, null)
                      ensureIdentifier(const, constructorReference)
                        listener: handleIdentifier(C, constructorReference)
                      listener: beginConstructorReference(C)
                      parseQualifiedRestOpt(C, constructorReferenceContinuation)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(int, null)
                      listener: endTypeArguments(1, <, >)
                      ensureIdentifier(., constructorReferenceContinuationAfterTypeArguments)
                        rewriter()
                        listener: handleNewAsIdentifier(new)
                        listener: handleIdentifier(new, constructorReferenceContinuationAfterTypeArguments)
                      listener: endConstructorReference(C, ., (, ConstructorReferenceContext.Const)
                    parseConstructorInvocationArguments(new)
                      parseArgumentsRest(()
                        listener: beginArguments(()
                        listener: endArguments(0, (, ))
                    listener: endConstExpression(const)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_invocation_const_prefixed)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_invocation_const_prefixed, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_invocation_const_prefixed, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_invocation_const_prefixed, constructor_invocation_const_prefixed, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseConstExpression(=)
                    listener: beginConstExpression(const)
                    parseConstructorReference(const, ConstructorReferenceContext.Const, null)
                      ensureIdentifier(const, constructorReference)
                        listener: handleIdentifier(prefix, constructorReference)
                      listener: beginConstructorReference(prefix)
                      parseQualifiedRestOpt(prefix, constructorReferenceContinuation)
                        parseQualifiedRest(prefix, constructorReferenceContinuation)
                          ensureIdentifier(., constructorReferenceContinuation)
                            listener: handleIdentifier(C, constructorReferenceContinuation)
                          listener: handleQualified(.)
                      listener: handleNoTypeArguments(.)
                      ensureIdentifier(., constructorReferenceContinuationAfterTypeArguments)
                        rewriter()
                        listener: handleNewAsIdentifier(new)
                        listener: handleIdentifier(new, constructorReferenceContinuationAfterTypeArguments)
                      listener: endConstructorReference(prefix, ., (, ConstructorReferenceContext.Const)
                    parseConstructorInvocationArguments(new)
                      parseArgumentsRest(()
                        listener: beginArguments(()
                        listener: endArguments(0, (, ))
                    listener: endConstExpression(const)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_invocation_const_prefixed_generic)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_invocation_const_prefixed_generic, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_invocation_const_prefixed_generic, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_invocation_const_prefixed_generic, constructor_invocation_const_prefixed_generic, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseConstExpression(=)
                    listener: beginConstExpression(const)
                    parseConstructorReference(const, ConstructorReferenceContext.Const, null)
                      ensureIdentifier(const, constructorReference)
                        listener: handleIdentifier(prefix, constructorReference)
                      listener: beginConstructorReference(prefix)
                      parseQualifiedRestOpt(prefix, constructorReferenceContinuation)
                        parseQualifiedRest(prefix, constructorReferenceContinuation)
                          ensureIdentifier(., constructorReferenceContinuation)
                            listener: handleIdentifier(C, constructorReferenceContinuation)
                          listener: handleQualified(.)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(int, null)
                      listener: endTypeArguments(1, <, >)
                      ensureIdentifier(., constructorReferenceContinuationAfterTypeArguments)
                        rewriter()
                        listener: handleNewAsIdentifier(new)
                        listener: handleIdentifier(new, constructorReferenceContinuationAfterTypeArguments)
                      listener: endConstructorReference(prefix, ., (, ConstructorReferenceContext.Const)
                    parseConstructorInvocationArguments(new)
                      parseArgumentsRest(()
                        listener: beginArguments(()
                        listener: endArguments(0, (, ))
                    listener: endConstExpression(const)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_invocation_explicit)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_invocation_explicit, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_invocation_explicit, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_invocation_explicit, constructor_invocation_explicit, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseNewExpression(=)
                    isNextIdentifier(new)
                    listener: beginNewExpression(new)
                    parseConstructorReference(new, ConstructorReferenceContext.New, null)
                      ensureIdentifier(new, constructorReference)
                        listener: handleIdentifier(C, constructorReference)
                      listener: beginConstructorReference(C)
                      parseQualifiedRestOpt(C, constructorReferenceContinuation)
                        parseQualifiedRest(C, constructorReferenceContinuation)
                          rewriter()
                          listener: handleNewAsIdentifier(new)
                          ensureIdentifier(., constructorReferenceContinuation)
                            listener: handleIdentifier(new, constructorReferenceContinuation)
                          listener: handleQualified(.)
                      listener: handleNoTypeArguments(()
                      listener: handleNoConstructorReferenceContinuationAfterTypeArguments(()
                      listener: endConstructorReference(C, null, (, ConstructorReferenceContext.New)
                    parseConstructorInvocationArguments(new)
                      parseArgumentsRest(()
                        listener: beginArguments(()
                        listener: endArguments(0, (, ))
                    listener: endNewExpression(new)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_invocation_explicit_generic)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_invocation_explicit_generic, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_invocation_explicit_generic, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_invocation_explicit_generic, constructor_invocation_explicit_generic, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseNewExpression(=)
                    isNextIdentifier(new)
                    listener: beginNewExpression(new)
                    parseConstructorReference(new, ConstructorReferenceContext.New, null)
                      ensureIdentifier(new, constructorReference)
                        listener: handleIdentifier(C, constructorReference)
                      listener: beginConstructorReference(C)
                      parseQualifiedRestOpt(C, constructorReferenceContinuation)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(int, null)
                      listener: endTypeArguments(1, <, >)
                      ensureIdentifier(., constructorReferenceContinuationAfterTypeArguments)
                        rewriter()
                        listener: handleNewAsIdentifier(new)
                        listener: handleIdentifier(new, constructorReferenceContinuationAfterTypeArguments)
                      listener: endConstructorReference(C, ., (, ConstructorReferenceContext.New)
                    parseConstructorInvocationArguments(new)
                      parseArgumentsRest(()
                        listener: beginArguments(()
                        listener: endArguments(0, (, ))
                    listener: endNewExpression(new)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_invocation_explicit_prefixed)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_invocation_explicit_prefixed, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_invocation_explicit_prefixed, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_invocation_explicit_prefixed, constructor_invocation_explicit_prefixed, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseNewExpression(=)
                    isNextIdentifier(new)
                    listener: beginNewExpression(new)
                    parseConstructorReference(new, ConstructorReferenceContext.New, null)
                      ensureIdentifier(new, constructorReference)
                        listener: handleIdentifier(prefix, constructorReference)
                      listener: beginConstructorReference(prefix)
                      parseQualifiedRestOpt(prefix, constructorReferenceContinuation)
                        parseQualifiedRest(prefix, constructorReferenceContinuation)
                          ensureIdentifier(., constructorReferenceContinuation)
                            listener: handleIdentifier(C, constructorReferenceContinuation)
                          listener: handleQualified(.)
                      listener: handleNoTypeArguments(.)
                      ensureIdentifier(., constructorReferenceContinuationAfterTypeArguments)
                        rewriter()
                        listener: handleNewAsIdentifier(new)
                        listener: handleIdentifier(new, constructorReferenceContinuationAfterTypeArguments)
                      listener: endConstructorReference(prefix, ., (, ConstructorReferenceContext.New)
                    parseConstructorInvocationArguments(new)
                      parseArgumentsRest(()
                        listener: beginArguments(()
                        listener: endArguments(0, (, ))
                    listener: endNewExpression(new)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_invocation_explicit_prefixed_generic)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_invocation_explicit_prefixed_generic, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_invocation_explicit_prefixed_generic, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_invocation_explicit_prefixed_generic, constructor_invocation_explicit_prefixed_generic, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseNewExpression(=)
                    isNextIdentifier(new)
                    listener: beginNewExpression(new)
                    parseConstructorReference(new, ConstructorReferenceContext.New, null)
                      ensureIdentifier(new, constructorReference)
                        listener: handleIdentifier(prefix, constructorReference)
                      listener: beginConstructorReference(prefix)
                      parseQualifiedRestOpt(prefix, constructorReferenceContinuation)
                        parseQualifiedRest(prefix, constructorReferenceContinuation)
                          ensureIdentifier(., constructorReferenceContinuation)
                            listener: handleIdentifier(C, constructorReferenceContinuation)
                          listener: handleQualified(.)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(int, null)
                      listener: endTypeArguments(1, <, >)
                      ensureIdentifier(., constructorReferenceContinuationAfterTypeArguments)
                        rewriter()
                        listener: handleNewAsIdentifier(new)
                        listener: handleIdentifier(new, constructorReferenceContinuationAfterTypeArguments)
                      listener: endConstructorReference(prefix, ., (, ConstructorReferenceContext.New)
                    parseConstructorInvocationArguments(new)
                      parseArgumentsRest(()
                        listener: beginArguments(()
                        listener: endArguments(0, (, ))
                    listener: endNewExpression(new)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_invocation_implicit)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_invocation_implicit, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_invocation_implicit, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_invocation_implicit, constructor_invocation_implicit, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseSendOrFunctionLiteral(=, expression, ConstantPatternContext.none)
                    parseSend(=, expression, ConstantPatternContext.none)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(C, expression)
                      listener: handleNoTypeArguments(.)
                      parseArgumentsOpt(C)
                        listener: handleNoArguments(.)
                      listener: handleSend(C, .)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                rewriter()
                listener: handleNewAsIdentifier(new)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  looksLikeFunctionBody(;)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(new, expressionContinuation)
                    listener: handleNoTypeArguments(()
                    parseArgumentsOpt(new)
                      parseArguments(new)
                        parseArgumentsRest(()
                          listener: beginArguments(()
                          listener: endArguments(0, (, ))
                    listener: handleSend(new, ;)
              listener: handleEndingBinaryExpression(.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_invocation_implicit_generic)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_invocation_implicit_generic, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_invocation_implicit_generic, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_invocation_implicit_generic, constructor_invocation_implicit_generic, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parseImplicitCreationExpression(=, <, Instance of 'SimpleTypeArgument1')
                  listener: beginImplicitCreationExpression(C)
                  parseConstructorReference(=, ConstructorReferenceContext.Implicit, Instance of 'SimpleTypeArgument1')
                    ensureIdentifier(=, constructorReference)
                      listener: handleIdentifier(C, constructorReference)
                    listener: beginConstructorReference(C)
                    parseQualifiedRestOpt(C, constructorReferenceContinuation)
                    listener: beginTypeArguments(<)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(>)
                    listener: handleType(int, null)
                    listener: endTypeArguments(1, <, >)
                    ensureIdentifier(., constructorReferenceContinuationAfterTypeArguments)
                      rewriter()
                      listener: handleNewAsIdentifier(new)
                      listener: handleIdentifier(new, constructorReferenceContinuationAfterTypeArguments)
                    listener: endConstructorReference(C, ., (, ConstructorReferenceContext.Implicit)
                  parseConstructorInvocationArguments(new)
                    parseArgumentsRest(()
                      listener: beginArguments(()
                      listener: endArguments(0, (, ))
                  listener: endImplicitCreationExpression(C, <)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_invocation_implicit_prefixed)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_invocation_implicit_prefixed, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_invocation_implicit_prefixed, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_invocation_implicit_prefixed, constructor_invocation_implicit_prefixed, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseSendOrFunctionLiteral(=, expression, ConstantPatternContext.none)
                    parseSend(=, expression, ConstantPatternContext.none)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(prefix, expression)
                      listener: handleNoTypeArguments(.)
                      parseArgumentsOpt(prefix)
                        listener: handleNoArguments(.)
                      listener: handleSend(prefix, .)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(C, expressionContinuation)
                    listener: handleNoTypeArguments(.)
                    parseArgumentsOpt(C)
                      listener: handleNoArguments(.)
                    listener: handleSend(C, .)
              listener: handleEndingBinaryExpression(.)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                rewriter()
                listener: handleNewAsIdentifier(new)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  looksLikeFunctionBody(;)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(new, expressionContinuation)
                    listener: handleNoTypeArguments(()
                    parseArgumentsOpt(new)
                      parseArguments(new)
                        parseArgumentsRest(()
                          listener: beginArguments(()
                          listener: endArguments(0, (, ))
                    listener: handleSend(new, ;)
              listener: handleEndingBinaryExpression(.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_invocation_implicit_prefixed_generic)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_invocation_implicit_prefixed_generic, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_invocation_implicit_prefixed_generic, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_invocation_implicit_prefixed_generic, constructor_invocation_implicit_prefixed_generic, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parseImplicitCreationExpression(=, <, Instance of 'SimpleTypeArgument1')
                  listener: beginImplicitCreationExpression(prefix)
                  parseConstructorReference(=, ConstructorReferenceContext.Implicit, Instance of 'SimpleTypeArgument1')
                    ensureIdentifier(=, constructorReference)
                      listener: handleIdentifier(prefix, constructorReference)
                    listener: beginConstructorReference(prefix)
                    parseQualifiedRestOpt(prefix, constructorReferenceContinuation)
                      parseQualifiedRest(prefix, constructorReferenceContinuation)
                        ensureIdentifier(., constructorReferenceContinuation)
                          listener: handleIdentifier(C, constructorReferenceContinuation)
                        listener: handleQualified(.)
                    listener: beginTypeArguments(<)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(>)
                    listener: handleType(int, null)
                    listener: endTypeArguments(1, <, >)
                    ensureIdentifier(., constructorReferenceContinuationAfterTypeArguments)
                      rewriter()
                      listener: handleNewAsIdentifier(new)
                      listener: handleIdentifier(new, constructorReferenceContinuationAfterTypeArguments)
                    listener: endConstructorReference(prefix, ., (, ConstructorReferenceContext.Implicit)
                  parseConstructorInvocationArguments(new)
                    parseArgumentsRest(()
                      listener: beginArguments(()
                      listener: endArguments(0, (, ))
                  listener: endImplicitCreationExpression(prefix, <)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_tearoff)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_tearoff, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_tearoff, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_tearoff, constructor_tearoff, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseSendOrFunctionLiteral(=, expression, ConstantPatternContext.none)
                    parseSend(=, expression, ConstantPatternContext.none)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(C, expression)
                      listener: handleNoTypeArguments(.)
                      parseArgumentsOpt(C)
                        listener: handleNoArguments(.)
                      listener: handleSend(C, .)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                rewriter()
                listener: handleNewAsIdentifier(new)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(new, expressionContinuation)
                    listener: handleNoTypeArguments(;)
                    parseArgumentsOpt(new)
                      listener: handleNoArguments(;)
                    listener: handleSend(new, ;)
              listener: handleEndingBinaryExpression(.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_tearoff_generic)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_tearoff_generic, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_tearoff_generic, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_tearoff_generic, constructor_tearoff_generic, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseSendOrFunctionLiteral(=, expression, ConstantPatternContext.none)
                    parseSend(=, expression, ConstantPatternContext.none)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(C, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(C)
                        listener: handleNoArguments(<)
                      listener: handleSend(C, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(int, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(int, null)
              listener: endTypeArguments(1, <, >)
              listener: handleTypeArgumentApplication(<)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                rewriter()
                listener: handleNewAsIdentifier(new)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(new, expressionContinuation)
                    listener: handleNoTypeArguments(;)
                    parseArgumentsOpt(new)
                      listener: handleNoArguments(;)
                    listener: handleSend(new, ;)
              listener: handleEndingBinaryExpression(.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_tearoff_generic_method_invocation)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_tearoff_generic_method_invocation, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_tearoff_generic_method_invocation, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_tearoff_generic_method_invocation, constructor_tearoff_generic_method_invocation, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseSendOrFunctionLiteral(=, expression, ConstantPatternContext.none)
                    parseSend(=, expression, ConstantPatternContext.none)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(C, expression)
                      listener: handleNoTypeArguments(<)
                      parseArgumentsOpt(C)
                        listener: handleNoArguments(<)
                      listener: handleSend(C, <)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(int, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(int, null)
              listener: endTypeArguments(1, <, >)
              listener: handleTypeArgumentApplication(<)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                rewriter()
                listener: handleNewAsIdentifier(new)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(new, expressionContinuation)
                    listener: handleNoTypeArguments(.)
                    parseArgumentsOpt(new)
                      listener: handleNoArguments(.)
                    listener: handleSend(new, .)
              listener: handleEndingBinaryExpression(.)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  looksLikeFunctionBody(;)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(toString, expressionContinuation)
                    listener: handleNoTypeArguments(()
                    parseArgumentsOpt(toString)
                      parseArguments(toString)
                        parseArgumentsRest(()
                          listener: beginArguments(()
                          listener: endArguments(0, (, ))
                    listener: handleSend(toString, ;)
              listener: handleEndingBinaryExpression(.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_tearoff_method_invocation)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_tearoff_method_invocation, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_tearoff_method_invocation, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_tearoff_method_invocation, constructor_tearoff_method_invocation, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseSendOrFunctionLiteral(=, expression, ConstantPatternContext.none)
                    parseSend(=, expression, ConstantPatternContext.none)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(C, expression)
                      listener: handleNoTypeArguments(.)
                      parseArgumentsOpt(C)
                        listener: handleNoArguments(.)
                      listener: handleSend(C, .)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                rewriter()
                listener: handleNewAsIdentifier(new)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(new, expressionContinuation)
                    listener: handleNoTypeArguments(.)
                    parseArgumentsOpt(new)
                      listener: handleNoArguments(.)
                    listener: handleSend(new, .)
              listener: handleEndingBinaryExpression(.)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  looksLikeFunctionBody(;)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(toString, expressionContinuation)
                    listener: handleNoTypeArguments(()
                    parseArgumentsOpt(toString)
                      parseArguments(toString)
                        parseArgumentsRest(()
                          listener: beginArguments(()
                          listener: endArguments(0, (, ))
                    listener: handleSend(toString, ;)
              listener: handleEndingBinaryExpression(.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_tearoff_prefixed)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_tearoff_prefixed, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_tearoff_prefixed, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_tearoff_prefixed, constructor_tearoff_prefixed, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseSendOrFunctionLiteral(=, expression, ConstantPatternContext.none)
                    parseSend(=, expression, ConstantPatternContext.none)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(prefix, expression)
                      listener: handleNoTypeArguments(.)
                      parseArgumentsOpt(prefix)
                        listener: handleNoArguments(.)
                      listener: handleSend(prefix, .)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(C, expressionContinuation)
                    listener: handleNoTypeArguments(.)
                    parseArgumentsOpt(C)
                      listener: handleNoArguments(.)
                    listener: handleSend(C, .)
              listener: handleEndingBinaryExpression(.)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                rewriter()
                listener: handleNewAsIdentifier(new)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(new, expressionContinuation)
                    listener: handleNoTypeArguments(;)
                    parseArgumentsOpt(new)
                      listener: handleNoArguments(;)
                    listener: handleSend(new, ;)
              listener: handleEndingBinaryExpression(.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_tearoff_prefixed_generic)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_tearoff_prefixed_generic, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_tearoff_prefixed_generic, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_tearoff_prefixed_generic, constructor_tearoff_prefixed_generic, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseSendOrFunctionLiteral(=, expression, ConstantPatternContext.none)
                    parseSend(=, expression, ConstantPatternContext.none)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(prefix, expression)
                      listener: handleNoTypeArguments(.)
                      parseArgumentsOpt(prefix)
                        listener: handleNoArguments(.)
                      listener: handleSend(prefix, .)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(C, expressionContinuation)
                    listener: handleNoTypeArguments(<)
                    parseArgumentsOpt(C)
                      listener: handleNoArguments(<)
                    listener: handleSend(C, <)
              listener: handleEndingBinaryExpression(.)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(int, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(int, null)
              listener: endTypeArguments(1, <, >)
              listener: handleTypeArgumentApplication(<)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                rewriter()
                listener: handleNewAsIdentifier(new)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(new, expressionContinuation)
                    listener: handleNoTypeArguments(;)
                    parseArgumentsOpt(new)
                      listener: handleNoArguments(;)
                    listener: handleSend(new, ;)
              listener: handleEndingBinaryExpression(.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_tearoff_prefixed_generic_method_invocation)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_tearoff_prefixed_generic_method_invocation, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_tearoff_prefixed_generic_method_invocation, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_tearoff_prefixed_generic_method_invocation, constructor_tearoff_prefixed_generic_method_invocation, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseSendOrFunctionLiteral(=, expression, ConstantPatternContext.none)
                    parseSend(=, expression, ConstantPatternContext.none)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(prefix, expression)
                      listener: handleNoTypeArguments(.)
                      parseArgumentsOpt(prefix)
                        listener: handleNoArguments(.)
                      listener: handleSend(prefix, .)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(C, expressionContinuation)
                    listener: handleNoTypeArguments(<)
                    parseArgumentsOpt(C)
                      listener: handleNoArguments(<)
                    listener: handleSend(C, <)
              listener: handleEndingBinaryExpression(.)
              listener: beginTypeArguments(<)
              listener: handleIdentifier(int, typeReference)
              listener: handleNoTypeArguments(>)
              listener: handleType(int, null)
              listener: endTypeArguments(1, <, >)
              listener: handleTypeArgumentApplication(<)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                rewriter()
                listener: handleNewAsIdentifier(new)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(new, expressionContinuation)
                    listener: handleNoTypeArguments(.)
                    parseArgumentsOpt(new)
                      listener: handleNoArguments(.)
                    listener: handleSend(new, .)
              listener: handleEndingBinaryExpression(.)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  looksLikeFunctionBody(;)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(toString, expressionContinuation)
                    listener: handleNoTypeArguments(()
                    parseArgumentsOpt(toString)
                      parseArguments(toString)
                        parseArgumentsRest(()
                          listener: beginArguments(()
                          listener: endArguments(0, (, ))
                    listener: handleSend(toString, ;)
              listener: handleEndingBinaryExpression(.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(constructor_tearoff_prefixed_method_invocation)
      parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', constructor_tearoff_prefixed_method_invocation, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, ;)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(constructor_tearoff_prefixed_method_invocation, topLevelVariableDeclaration)
        parseFieldInitializerOpt(constructor_tearoff_prefixed_method_invocation, constructor_tearoff_prefixed_method_invocation, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
              parseUnaryExpression(=, true, ConstantPatternContext.none)
                parsePrimary(=, expression, ConstantPatternContext.none)
                  parseSendOrFunctionLiteral(=, expression, ConstantPatternContext.none)
                    parseSend(=, expression, ConstantPatternContext.none)
                      isNextIdentifier(=)
                      ensureIdentifier(=, expression)
                        listener: handleIdentifier(prefix, expression)
                      listener: handleNoTypeArguments(.)
                      parseArgumentsOpt(prefix)
                        listener: handleNoArguments(.)
                      listener: handleSend(prefix, .)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(C, expressionContinuation)
                    listener: handleNoTypeArguments(.)
                    parseArgumentsOpt(C)
                      listener: handleNoArguments(.)
                    listener: handleSend(C, .)
              listener: handleEndingBinaryExpression(.)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                rewriter()
                listener: handleNewAsIdentifier(new)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(new, expressionContinuation)
                    listener: handleNoTypeArguments(.)
                    parseArgumentsOpt(new)
                      listener: handleNoArguments(.)
                    listener: handleSend(new, .)
              listener: handleEndingBinaryExpression(.)
              parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                  looksLikeFunctionBody(;)
                  parseSend(., expressionContinuation, ConstantPatternContext.none)
                    isNextIdentifier(.)
                    ensureIdentifier(., expressionContinuation)
                      listener: handleIdentifier(toString, expressionContinuation)
                    listener: handleNoTypeArguments(()
                    parseArgumentsOpt(toString)
                      parseArguments(toString)
                        parseArgumentsRest(()
                          listener: beginArguments(()
                          listener: endArguments(0, (, ))
                    listener: handleSend(toString, ;)
              listener: handleEndingBinaryExpression(.)
          listener: endFieldInitializer(=, ;)
        listener: endTopLevelFields(null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(class)
  listener: endCompilationUnit(22, )
