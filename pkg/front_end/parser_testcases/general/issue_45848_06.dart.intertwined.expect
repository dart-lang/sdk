parseUnit(void)
  skipErrorTokens(void)
  listener: beginCompilationUnit(void)
  syntheticPreviousToken(void)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(, null, null, , Instance of 'VoidType', null, f, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(f, topLevelFunctionDeclaration)
        parseMethodTypeVar(f)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(f, f, false, MemberKind.TopLevelMethod)
          parseFormalParameters(f, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(bool)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(bool, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(bool, typeReference)
                listener: handleNoTypeArguments(b1)
                listener: handleType(bool, null)
                ensureIdentifier(bool, formalParameterDeclaration)
                  listener: handleIdentifier(b1, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, b1, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(bool)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(bool, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(bool, typeReference)
                listener: handleNoTypeArguments(b2)
                listener: handleType(bool, null)
                ensureIdentifier(bool, formalParameterDeclaration)
                  listener: handleIdentifier(b2, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, b2, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(2, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, print)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                looksLikeLocalFunction(print)
                parseExpressionStatement({)
                  parseExpression({)
                    parsePrecedenceExpression({, 1, true)
                      parseUnaryExpression({, true)
                        parsePrimary({, expression)
                          parseSendOrFunctionLiteral({, expression)
                            looksLikeFunctionBody(;)
                            parseSend({, expression)
                              isNextIdentifier({)
                              ensureIdentifier({, expression)
                                listener: handleIdentifier(print, expression)
                              listener: handleNoTypeArguments(()
                              parseArgumentsOpt(print)
                                parseArguments(print)
                                  parseArgumentsRest(()
                                    listener: beginArguments(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseLiteralString(()
                                              parseSingleLiteralString(()
                                                listener: beginLiteralString('b1=)
                                                parseIdentifierExpression($)
                                                  parseSend($, expression)
                                                    isNextIdentifier($)
                                                    ensureIdentifier($, expression)
                                                      listener: handleIdentifier(b1, expression)
                                                    listener: handleNoTypeArguments(, b2=)
                                                    parseArgumentsOpt(b1)
                                                      listener: handleNoArguments(, b2=)
                                                    listener: handleSend(b1, , b2=)
                                                listener: handleInterpolationExpression($, null)
                                                parseStringPart(b1)
                                                  listener: handleStringPart(, b2=)
                                                parseIdentifierExpression($)
                                                  parseSend($, expression)
                                                    isNextIdentifier($)
                                                    ensureIdentifier($, expression)
                                                      listener: handleIdentifier(b2, expression)
                                                    listener: handleNoTypeArguments(')
                                                    parseArgumentsOpt(b2)
                                                      listener: handleNoArguments(')
                                                    listener: handleSend(b2, ')
                                                listener: handleInterpolationExpression($, null)
                                                parseStringPart(b2)
                                                  listener: handleStringPart(')
                                                listener: endLiteralString(2, ))
                                    listener: endArguments(1, (, ))
                              listener: handleSend(print, ;)
                  ensureSemicolon())
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(}, null, null, }, Instance of 'VoidType', null, g, false)
        listener: beginTopLevelMethod(}, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(g, topLevelFunctionDeclaration)
        parseMethodTypeVar(g)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(g, g, false, MemberKind.TopLevelMethod)
          parseFormalParameters(g, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(x)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(y)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(y, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(Object)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(Object, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(Object, typeReference)
                listener: handleNoTypeArguments(o)
                listener: handleType(Object, null)
                ensureIdentifier(Object, formalParameterDeclaration)
                  listener: handleIdentifier(o, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, o, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(Object)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(Object, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(Object, typeReference)
                listener: handleNoTypeArguments(p)
                listener: handleType(Object, null)
                ensureIdentifier(Object, formalParameterDeclaration)
                  listener: handleIdentifier(p, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, p, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(4, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(async, null)
          inPlainSync()
        parseFunctionBody(async, false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, f)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                looksLikeLocalFunction(f)
                parseExpressionStatement({)
                  parseExpression({)
                    parsePrecedenceExpression({, 1, true)
                      parseUnaryExpression({, true)
                        parsePrimary({, expression)
                          parseSendOrFunctionLiteral({, expression)
                            looksLikeFunctionBody(;)
                            parseSend({, expression)
                              isNextIdentifier({)
                              ensureIdentifier({, expression)
                                listener: handleIdentifier(f, expression)
                              listener: handleNoTypeArguments(()
                              parseArgumentsOpt(f)
                                parseArguments(f)
                                  parseArgumentsRest(()
                                    listener: beginArguments(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseSendOrFunctionLiteral((, expression)
                                              looksLikeFunctionBody())
                                              parseSend((, expression)
                                                isNextIdentifier(()
                                                ensureIdentifier((, expression)
                                                  listener: handleIdentifier(x, expression)
                                                listener: beginTypeArguments(<)
                                                listener: handleIdentifier(y, typeReference)
                                                listener: handleNoTypeArguments(,)
                                                listener: handleType(y, null)
                                                parseRecordType((, ,, false)
                                                  listener: beginRecordType(()
                                                  parseRecordTypeField((, identifierIsOptional: true)
                                                    listener: beginRecordTypeEntry()
                                                    parseMetadataStar(()
                                                      listener: beginMetadataStar(await)
                                                      listener: endMetadataStar(0)
                                                    listener: handleIdentifier(await, typeReference)
                                                    listener: handleNoTypeArguments(o)
                                                    listener: handleType(await, null)
                                                    ensureIdentifier(await, recordFieldDeclaration)
                                                      listener: handleIdentifier(o, recordFieldDeclaration)
                                                    listener: endRecordTypeEntry()
                                                  listener: endRecordType((, null, 1, false)
                                                listener: endTypeArguments(2, <, >)
                                                parseArgumentsOpt(>)
                                                  parseArguments(>)
                                                    parseArgumentsRest(()
                                                      listener: beginArguments(()
                                                      parseExpression(()
                                                        parsePrecedenceExpression((, 1, true)
                                                          parseUnaryExpression((, true)
                                                            parsePrimary((, expression)
                                                              parseSendOrFunctionLiteral((, expression)
                                                                parseSend((, expression)
                                                                  isNextIdentifier(()
                                                                  ensureIdentifier((, expression)
                                                                    listener: handleIdentifier(p, expression)
                                                                  listener: handleNoTypeArguments(as)
                                                                  parseArgumentsOpt(p)
                                                                    listener: handleNoArguments(as)
                                                                  listener: handleSend(p, as)
                                                          parseAsOperatorRest(p)
                                                            listener: beginAsOperatorType(as)
                                                            computeTypeAfterIsOrAs(as)
                                                            listener: handleIdentifier(int, typeReference)
                                                            listener: handleNoTypeArguments())
                                                            listener: handleType(int, null)
                                                            listener: endAsOperatorType(as)
                                                            listener: handleAsOperator(as)
                                                            skipChainedAsIsOperators(int)
                                                      listener: endArguments(1, (, ))
                                                listener: handleSend(x, ))
                                    listener: endArguments(1, (, ))
                              listener: handleSend(f, ;)
                  ensureSemicolon())
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(}, null, null, }, Instance of 'VoidType', null, main, false)
        listener: beginTopLevelMethod(}, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, g)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                looksLikeLocalFunction(g)
                parseExpressionStatement({)
                  parseExpression({)
                    parsePrecedenceExpression({, 1, true)
                      parseUnaryExpression({, true)
                        parsePrimary({, expression)
                          parseSendOrFunctionLiteral({, expression)
                            looksLikeFunctionBody(;)
                            parseSend({, expression)
                              isNextIdentifier({)
                              ensureIdentifier({, expression)
                                listener: handleIdentifier(g, expression)
                              listener: handleNoTypeArguments(()
                              parseArgumentsOpt(g)
                                parseArguments(g)
                                  parseArgumentsRest(()
                                    listener: beginArguments(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(0)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true)
                                        parseUnaryExpression(,, true)
                                          parsePrimary(,, expression)
                                            parseLiteralInt(,)
                                              listener: handleLiteralInt(1)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true)
                                        parseUnaryExpression(,, true)
                                          parsePrimary(,, expression)
                                            parseLiteralInt(,)
                                              listener: handleLiteralInt(2)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true)
                                        parseUnaryExpression(,, true)
                                          parsePrimary(,, expression)
                                            parseLiteralInt(,)
                                              listener: handleLiteralInt(3)
                                    listener: endArguments(4, (, ))
                              listener: handleSend(g, ;)
                  ensureSemicolon())
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(extension)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, extension, null, null, null, null, null, Instance of 'DirectiveContext')
      parseExtension(extension)
        listener: beginExtensionDeclarationPrelude(extension)
        listener: handleNoTypeVariables(on)
        listener: beginExtensionDeclaration(extension, null)
        listener: handleIdentifier(Map, typeReference)
        listener: handleNoTypeArguments({)
        listener: handleType(Map, null)
        listener: handleExtensionShowHide(null, 0, null, 0)
        parseClassOrMixinOrExtensionBody(Map, DeclarationKind.Extension, null)
          listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Extension, {)
          notEofOrValue(}, bool)
          parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Extension, null)
            parseMetadataStar({)
              listener: beginMetadataStar(bool)
              listener: endMetadataStar(0)
            listener: beginMember()
            parseMethod({, null, null, null, null, null, null, null, {, Instance of 'SimpleType', null, operator, DeclarationKind.Extension, null, false)
              listener: beginMethod(DeclarationKind.Extension, null, null, null, null, null, null, operator)
              listener: handleIdentifier(bool, typeReference)
              listener: handleNoTypeArguments(operator)
              listener: handleType(bool, null)
              parseOperatorName(bool)
                listener: handleOperatorName(operator, >)
              parseMethodTypeVar(>)
                listener: handleNoTypeVariables(()
              parseGetterOrFormalParameters(>, operator, false, MemberKind.ExtensionNonStaticMethod)
                parseFormalParameters(>, MemberKind.ExtensionNonStaticMethod)
                  parseFormalParametersRest((, MemberKind.ExtensionNonStaticMethod)
                    listener: beginFormalParameters((, MemberKind.ExtensionNonStaticMethod)
                    parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.ExtensionNonStaticMethod)
                      parseMetadataStar(()
                        listener: beginMetadataStar(dynamic)
                        listener: endMetadataStar(0)
                      listener: beginFormalParameter(dynamic, MemberKind.ExtensionNonStaticMethod, null, null, null)
                      listener: handleIdentifier(dynamic, typeReference)
                      listener: handleNoTypeArguments(whatever)
                      listener: handleType(dynamic, null)
                      ensureIdentifier(dynamic, formalParameterDeclaration)
                        listener: handleIdentifier(whatever, formalParameterDeclaration)
                      listener: handleFormalParameterWithoutValue())
                      listener: endFormalParameter(null, null, null, whatever, null, null, FormalParameterKind.requiredPositional, MemberKind.ExtensionNonStaticMethod)
                    listener: endFormalParameters(1, (, ), MemberKind.ExtensionNonStaticMethod)
              parseInitializersOpt())
                listener: handleNoInitializers()
              parseAsyncModifierOpt())
                listener: handleAsyncModifier(null, null)
                inPlainSync()
              inPlainSync()
              parseFunctionBody(), false, true)
                listener: beginBlockFunctionBody({)
                notEofOrValue(}, return)
                parseStatement({)
                  parseStatementX({)
                    parseReturnStatement({)
                      listener: beginReturnStatement(return)
                      parseExpression(return)
                        parsePrecedenceExpression(return, 1, true)
                          parseUnaryExpression(return, true)
                            parsePrimary(return, expression)
                              parseLiteralBool(return)
                                listener: handleLiteralBool(true)
                      ensureSemicolon(true)
                      listener: endReturnStatement(true, return, ;)
                      inGenerator()
                notEofOrValue(}, })
                listener: endBlockFunctionBody(1, {, })
              listener: endExtensionMethod(null, bool, (, null, })
            listener: endMember()
          notEofOrValue(}, })
          listener: endClassOrMixinOrExtensionBody(DeclarationKind.Extension, 1, {, })
        listener: endExtensionDeclaration(extension, null, on, null, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(void)
  listener: endCompilationUnit(4, )
