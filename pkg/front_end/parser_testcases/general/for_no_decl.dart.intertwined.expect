parseUnit(main)
  skipErrorTokens(main)
  listener: beginCompilationUnit(main)
  syntheticPreviousToken(main)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(main)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(main)
      isReservedKeyword(()
      parseTopLevelMethod(, null, , Instance of 'NoType', null, main, false)
        listener: beginTopLevelMethod(, null)
        listener: handleNoType()
        ensureIdentifierPotentiallyRecovered(, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, int)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, false)
                looksLikeLocalFunction(i)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                listener: beginVariablesDeclaration(i, null, null)
                parseVariablesDeclarationRest(int, true)
                  parseOptionallyInitializedIdentifier(int)
                    ensureIdentifier(int, localVariableDeclaration)
                      listener: handleIdentifier(i, localVariableDeclaration)
                    listener: beginInitializedIdentifier(i)
                    parseVariableInitializerOpt(i)
                      listener: handleNoVariableInitializer(i)
                    listener: endInitializedIdentifier(i)
                  ensureSemicolon(i)
                  listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, for)
          parseStatement(;)
            parseStatementX(;)
              parseForStatement(;, null)
                listener: beginForStatement(for)
                parseForLoopPartsStart(null, for)
                  parseExpressionStatementOrDeclaration((, true)
                    parseExpressionStatementOrDeclarationAfterModifiers((, (, null, null, null, true)
                parseForLoopPartsMid((, null, for)
                  parseExpression(()
                    parsePrecedenceExpression((, 1, true)
                      parseUnaryExpression((, true)
                        parsePrimary((, expression)
                          parseSendOrFunctionLiteral((, expression)
                            parseSend((, expression)
                              ensureIdentifier((, expression)
                                listener: handleIdentifier(i, expression)
                              listener: handleNoTypeArguments(=)
                              parseArgumentsOpt(i)
                                listener: handleNoArguments(=)
                              listener: handleSend(i, =)
                      parsePrecedenceExpression(=, 1, true)
                        parseUnaryExpression(=, true)
                          parsePrimary(=, expression)
                            parseLiteralInt(=)
                              listener: handleLiteralInt(0)
                      listener: handleAssignmentExpression(=)
                  listener: handleForInitializerExpressionStatement(0, false)
                parseForRest(null, 0, for)
                  parseForLoopPartsRest(0, for, null)
                    ensureSemicolon(0)
                    parseExpressionStatement(;)
                      parseExpression(;)
                        parsePrecedenceExpression(;, 1, true)
                          parseUnaryExpression(;, true)
                            parsePrimary(;, expression)
                              parseSendOrFunctionLiteral(;, expression)
                                parseSend(;, expression)
                                  ensureIdentifier(;, expression)
                                    listener: handleIdentifier(i, expression)
                                  listener: handleNoTypeArguments(<)
                                  parseArgumentsOpt(i)
                                    listener: handleNoArguments(<)
                                  listener: handleSend(i, <)
                          listener: beginBinaryExpression(<)
                          parsePrecedenceExpression(<, 9, true)
                            parseUnaryExpression(<, true)
                              parsePrimary(<, expression)
                                parseLiteralInt(<)
                                  listener: handleLiteralInt(10)
                          listener: endBinaryExpression(<)
                      ensureSemicolon(10)
                      listener: handleExpressionStatement(;)
                    parseExpression(;)
                      parsePrecedenceExpression(;, 1, true)
                        parseUnaryExpression(;, true)
                          parsePrimary(;, expression)
                            parseSendOrFunctionLiteral(;, expression)
                              parseSend(;, expression)
                                ensureIdentifier(;, expression)
                                  listener: handleIdentifier(i, expression)
                                listener: handleNoTypeArguments(++)
                                parseArgumentsOpt(i)
                                  listener: handleNoArguments(++)
                                listener: handleSend(i, ++)
                        listener: handleUnaryPostfixAssignmentExpression(++)
                    listener: handleForLoopParts(for, (, ;, 1)
                  listener: beginForStatementBody({)
                  parseStatement())
                    parseStatementX())
                      parseBlock(), BlockKind(statement))
                        ensureBlock(), null, null)
                        listener: beginBlock({, BlockKind(statement))
                        notEofOrValue(}, })
                        listener: endBlock(0, {, }, BlockKind(statement))
                  listener: endForStatementBody(})
                  listener: endForStatement(})
          notEofOrValue(}, })
          listener: endBlockFunctionBody(2, {, })
        listener: endTopLevelMethod(main, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(main)
  listener: endCompilationUnit(1, )
