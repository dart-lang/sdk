parseUnit(enum)
  skipErrorTokens(enum)
  listener: beginCompilationUnit(enum)
  syntheticPreviousToken(enum)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(enum)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(enum, , enum, null, null, null, null, DirectiveContext(DirectiveState.Unknown))
      parseEnum(enum, null, enum)
        listener: beginUncategorizedTopLevelDeclaration(enum)
        ensureIdentifier(enum, enumDeclaration)
          listener: handleIdentifier(Color, enumDeclaration)
        listener: beginEnum(enum)
        listener: handleNoTypeVariables({)
        parsePrimaryConstructorOpt(Color, null, false)
          listener: handleNoPrimaryConstructor(Color, null, false)
        parseEnumHeaderOpt(Color, enum)
          parseEnumWithClauseOpt(Color)
            listener: handleEnumNoWithClause()
          parseClassOrMixinOrEnumImplementsOpt(Color)
            listener: handleImplements(null, 0)
        listener: handleEnumHeader(null, enum, {)
        listener: beginEnumBody({)
        parseEnumElement({)
          parseMetadataStar({)
            listener: beginMetadataStar(red)
            listener: endMetadataStar(0)
          ensureIdentifier({, enumValueDeclaration)
            listener: handleIdentifier(red, enumValueDeclaration)
          listener: handleNoTypeNameInConstructorReference(,)
          listener: beginConstructorReference(red)
          listener: handleNoTypeArguments(,)
          listener: handleNoConstructorReferenceContinuationAfterTypeArguments(red)
          listener: endConstructorReference(red, null, red, ConstructorReferenceContext.Const)
          listener: handleNoArguments(red)
          listener: handleEnumElement({, null)
        parseEnumElement(,)
          parseMetadataStar(,)
            listener: beginMetadataStar(blue)
            listener: endMetadataStar(0)
          ensureIdentifier(,, enumValueDeclaration)
            listener: handleIdentifier(blue, enumValueDeclaration)
          listener: handleNoTypeNameInConstructorReference(,)
          listener: beginConstructorReference(blue)
          listener: handleNoTypeArguments(,)
          listener: handleNoConstructorReferenceContinuationAfterTypeArguments(blue)
          listener: endConstructorReference(blue, null, blue, ConstructorReferenceContext.Const)
          listener: handleNoArguments(blue)
          listener: handleEnumElement(,, null)
        parseEnumElement(,)
          parseMetadataStar(,)
            listener: beginMetadataStar(green)
            listener: endMetadataStar(0)
          ensureIdentifier(,, enumValueDeclaration)
            listener: handleIdentifier(green, enumValueDeclaration)
          listener: handleNoTypeNameInConstructorReference(})
          listener: beginConstructorReference(green)
          listener: handleNoTypeArguments(})
          listener: handleNoConstructorReferenceContinuationAfterTypeArguments(green)
          listener: endConstructorReference(green, null, green, ConstructorReferenceContext.Const)
          listener: handleNoArguments(green)
          listener: handleEnumElement(,, null)
        listener: handleEnumElements(}, 3)
        listener: endEnumBody({, })
        listener: endEnum(enum, enum, {, 0, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(}, null, null, }, VoidType(), null, main, false)
        listener: beginTopLevelMethod(}, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrType(CLOSE_CURLY_BRACKET, Color)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                looksLikeLocalFunction(c)
                listener: beginMetadataStar(Color)
                listener: endMetadataStar(0)
                listener: handleIdentifier(Color, typeReference)
                listener: handleNoTypeArguments(c)
                listener: handleType(Color, null)
                listener: beginVariablesDeclaration(c, null, null)
                parseVariablesDeclarationRest(Color, true)
                  parseOptionallyInitializedIdentifier(Color)
                    ensureIdentifier(Color, localVariableDeclaration)
                      listener: handleIdentifier(c, localVariableDeclaration)
                    listener: beginInitializedIdentifier(c)
                    parseVariableInitializerOpt(c)
                      listener: beginVariableInitializer(=)
                      parseExpression(=)
                        parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                          parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                            parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                              parseSend(., expressionContinuation, ConstantPatternContext.none)
                                ensureIdentifier(., expressionContinuation)
                                  listener: handleIdentifier(red, expressionContinuation)
                                listener: handleNoTypeArguments(;)
                                parseArgumentsOpt(red)
                                  listener: handleNoArguments(;)
                                listener: handleSend(red, red)
                          listener: handleDotShorthandHead(.)
                          listener: handleDotShorthandContext(.)
                      listener: endVariableInitializer(=)
                    listener: endInitializedIdentifier(c)
                  ensureSemicolon(red)
                  listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(})
  reportAllErrorTokens(enum)
  listener: endCompilationUnit(2, )
