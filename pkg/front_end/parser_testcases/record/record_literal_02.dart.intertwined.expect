parseUnit(void)
  skipErrorTokens(void)
  listener: beginCompilationUnit(void)
  syntheticPreviousToken(void)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(, null, null, , VoidType(), null, foo, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(foo, topLevelFunctionDeclaration)
        parseMethodTypeVar(foo)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(foo, foo, false, MemberKind.TopLevelMethod)
          parseFormalParameters(foo, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(()
                  parseExpressionStatement({)
                    parseExpression({)
                      parsePrecedenceExpression({, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression({, true, ConstantPatternContext.none)
                          parsePrimary({, expression, ConstantPatternContext.none)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral({, ConstantPatternContext.none)
                              parseParenthesizedExpressionOrRecordLiteral({, null, ConstantPatternContext.none)
                                listener: beginParenthesizedExpressionOrRecordLiteral(()
                                parseExpression(()
                                  parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                    parseUnaryExpression((, true, ConstantPatternContext.none)
                                      parsePrimary((, expression, ConstantPatternContext.none)
                                        parseLiteralInt(()
                                          listener: handleLiteralInt(42)
                                parseExpression(,)
                                  parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                    parseUnaryExpression(,, true, ConstantPatternContext.none)
                                      parsePrimary(,, expression, ConstantPatternContext.none)
                                        parseLiteralInt(,)
                                          listener: handleLiteralInt(42)
                                parseExpression(,)
                                  parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                    parseUnaryExpression(,, true, ConstantPatternContext.none)
                                      parsePrimary(,, expression, ConstantPatternContext.none)
                                        parseLiteralInt(,)
                                          listener: handleLiteralInt(42)
                                ensureCloseParen(,, ()
                                listener: endRecordLiteral((, 3, null)
                    ensureSemicolon())
                    listener: handleExpressionStatement((, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(()
                  parseExpressionStatement(;)
                    parseExpression(;)
                      parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression(;, true, ConstantPatternContext.none)
                          parsePrimary(;, expression, ConstantPatternContext.none)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(;, ConstantPatternContext.none)
                              parseParenthesizedExpressionOrRecordLiteral(;, null, ConstantPatternContext.none)
                                listener: beginParenthesizedExpressionOrRecordLiteral(()
                                ensureIdentifier((, namedRecordFieldReference)
                                  listener: handleIdentifier(foo, namedRecordFieldReference)
                                parseExpression(:)
                                  parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                    parseUnaryExpression(:, true, ConstantPatternContext.none)
                                      parsePrimary(:, expression, ConstantPatternContext.none)
                                        parseLiteralInt(:)
                                          listener: handleLiteralInt(42)
                                listener: handleNamedRecordField(:)
                                ensureIdentifier(,, namedRecordFieldReference)
                                  listener: handleIdentifier(bar, namedRecordFieldReference)
                                parseExpression(:)
                                  parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                    parseUnaryExpression(:, true, ConstantPatternContext.none)
                                      parsePrimary(:, expression, ConstantPatternContext.none)
                                        parseLiteralInt(:)
                                          listener: handleLiteralInt(42)
                                listener: handleNamedRecordField(:)
                                parseExpression(,)
                                  parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                    parseUnaryExpression(,, true, ConstantPatternContext.none)
                                      parsePrimary(,, expression, ConstantPatternContext.none)
                                        parseLiteralInt(,)
                                          listener: handleLiteralInt(42)
                                ensureIdentifier(,, namedRecordFieldReference)
                                  listener: handleIdentifier(baz, namedRecordFieldReference)
                                parseExpression(:)
                                  parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                    parseUnaryExpression(:, true, ConstantPatternContext.none)
                                      parsePrimary(:, expression, ConstantPatternContext.none)
                                        parseLiteralInt(:)
                                          listener: handleLiteralInt(42)
                                listener: handleNamedRecordField(:)
                                ensureCloseParen(,, ()
                                listener: endRecordLiteral((, 4, null)
                    ensureSemicolon())
                    listener: handleExpressionStatement((, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(()
                  parseExpressionStatement(;)
                    parseExpression(;)
                      parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression(;, true, ConstantPatternContext.none)
                          parsePrimary(;, expression, ConstantPatternContext.none)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(;, ConstantPatternContext.none)
                              parseParenthesizedExpressionOrRecordLiteral(;, null, ConstantPatternContext.none)
                                listener: beginParenthesizedExpressionOrRecordLiteral(()
                                parseExpression(()
                                  parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                    parseUnaryExpression((, true, ConstantPatternContext.none)
                                      parsePrimary((, expression, ConstantPatternContext.none)
                                        parseParenthesizedExpressionFunctionLiteralOrRecordLiteral((, ConstantPatternContext.none)
                                          parseParenthesizedExpressionOrRecordLiteral((, null, ConstantPatternContext.none)
                                            listener: beginParenthesizedExpressionOrRecordLiteral(()
                                            parseExpression(()
                                              parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                                parseUnaryExpression((, true, ConstantPatternContext.none)
                                                  parsePrimary((, expression, ConstantPatternContext.none)
                                                    parseLiteralInt(()
                                                      listener: handleLiteralInt(42)
                                            parseExpression(,)
                                              parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                                parseUnaryExpression(,, true, ConstantPatternContext.none)
                                                  parsePrimary(,, expression, ConstantPatternContext.none)
                                                    parseLiteralInt(,)
                                                      listener: handleLiteralInt(42)
                                            ensureCloseParen(42, ()
                                            listener: endRecordLiteral((, 2, null)
                                parseExpression(,)
                                  parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                    parseUnaryExpression(,, true, ConstantPatternContext.none)
                                      parsePrimary(,, expression, ConstantPatternContext.none)
                                        parseLiteralInt(,)
                                          listener: handleLiteralInt(42)
                                ensureCloseParen(42, ()
                                listener: endRecordLiteral((, 2, null)
                    ensureSemicolon())
                    listener: handleExpressionStatement((, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(()
                  parseExpressionStatement(;)
                    parseExpression(;)
                      parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression(;, true, ConstantPatternContext.none)
                          parsePrimary(;, expression, ConstantPatternContext.none)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(;, ConstantPatternContext.none)
                              parseParenthesizedExpressionOrRecordLiteral(;, null, ConstantPatternContext.none)
                                listener: beginParenthesizedExpressionOrRecordLiteral(()
                                parseExpression(()
                                  parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                    parseUnaryExpression((, true, ConstantPatternContext.none)
                                      parsePrimary((, expression, ConstantPatternContext.none)
                                        parseParenthesizedExpressionFunctionLiteralOrRecordLiteral((, ConstantPatternContext.none)
                                          listener: handleNoTypeVariables(()
                                          parseFunctionExpression(()
                                            listener: beginFunctionExpression(()
                                            parseFormalParametersRequiredOpt((, MemberKind.Local)
                                              parseFormalParametersRest((, MemberKind.Local)
                                                listener: beginFormalParameters((, MemberKind.Local)
                                                parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.Local)
                                                  parseMetadataStar(()
                                                    listener: beginMetadataStar(foo)
                                                    listener: endMetadataStar(0)
                                                  listener: beginFormalParameter(foo, MemberKind.Local, null, null, null)
                                                  listener: handleNoType(()
                                                  ensureIdentifier((, formalParameterDeclaration)
                                                    listener: handleIdentifier(foo, formalParameterDeclaration)
                                                  listener: handleFormalParameterWithoutValue(,)
                                                  listener: endFormalParameter(null, null, null, null, foo, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                                                parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.Local)
                                                  parseMetadataStar(,)
                                                    listener: beginMetadataStar(bar)
                                                    listener: endMetadataStar(0)
                                                  listener: beginFormalParameter(bar, MemberKind.Local, null, null, null)
                                                  listener: handleNoType(,)
                                                  ensureIdentifier(,, formalParameterDeclaration)
                                                    listener: handleIdentifier(bar, formalParameterDeclaration)
                                                  listener: handleFormalParameterWithoutValue())
                                                  listener: endFormalParameter(null, null, null, null, bar, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                                                listener: endFormalParameters(2, (, ), MemberKind.Local)
                                            parseAsyncOptBody(), true, false)
                                              parseAsyncModifierOpt())
                                                listener: handleAsyncModifier(null, null)
                                                inPlainSync()
                                              parseFunctionBody(), true, false)
                                                parseExpressionFunctionBody(=>, true)
                                                  parseExpression(=>)
                                                    parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                                                      parseUnaryExpression(=>, true, ConstantPatternContext.none)
                                                        parsePrimary(=>, expression, ConstantPatternContext.none)
                                                          parseLiteralInt(=>)
                                                            listener: handleLiteralInt(42)
                                                  listener: handleExpressionFunctionBody(=>, null)
                                                  inGenerator()
                                            listener: endFunctionExpression((, 42)
                                parseExpression(,)
                                  parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                    parseUnaryExpression(,, true, ConstantPatternContext.none)
                                      parsePrimary(,, expression, ConstantPatternContext.none)
                                        parseLiteralInt(,)
                                          listener: handleLiteralInt(42)
                                ensureCloseParen(42, ()
                                listener: endRecordLiteral((, 2, null)
                    ensureSemicolon())
                    listener: handleExpressionStatement((, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, })
          listener: endBlockFunctionBody(4, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(})
  reportAllErrorTokens(void)
  listener: endCompilationUnit(1, )
