Problems reported:

parser/record/record_and_commas:6:4: A record type without fields can't have a trailing comma.
  (,) emptyRecord2 = ();
   ^

parser/record/record_and_commas:7:22: A record literal without fields can't have a trailing comma.
  () emptyRecord3 = (,);
                     ^

parser/record/record_and_commas:8:4: A record type without fields can't have a trailing comma.
  (,) emptyRecord4 = (,);
   ^

parser/record/record_and_commas:8:23: A record literal without fields can't have a trailing comma.
  (,) emptyRecord4 = (,);
                      ^

parser/record/record_and_commas:11:9: Expected a type, but got ','.
  (int, ,) emptyRecord5 = (42, 42, ,);
        ^

parser/record/record_and_commas:11:36: Expected an identifier, but got ','.
  (int, ,) emptyRecord5 = (42, 42, ,);
                                   ^

parser/record/record_and_commas:12:14: Expected a type, but got ','.
  (int, int, ,) emptyRecord6 = (42, 42, ,);
             ^

parser/record/record_and_commas:12:41: Expected an identifier, but got ','.
  (int, int, ,) emptyRecord6 = (42, 42, ,);
                                        ^

parser/record/record_and_commas:13:9: Expected a type, but got ','.
  (int, , ,) emptyRecord7 = (42, 42, , ,);
        ^

parser/record/record_and_commas:13:11: Expected a type, but got ','.
  (int, , ,) emptyRecord7 = (42, 42, , ,);
          ^

parser/record/record_and_commas:13:38: Expected an identifier, but got ','.
  (int, , ,) emptyRecord7 = (42, 42, , ,);
                                     ^

parser/record/record_and_commas:13:40: Expected an identifier, but got ','.
  (int, , ,) emptyRecord7 = (42, 42, , ,);
                                       ^

parser/record/record_and_commas:14:14: Expected a type, but got ','.
  (int, int, , ,) emptyRecord8 = (42, 42, , ,);
             ^

parser/record/record_and_commas:14:16: Expected a type, but got ','.
  (int, int, , ,) emptyRecord8 = (42, 42, , ,);
               ^

parser/record/record_and_commas:14:43: Expected an identifier, but got ','.
  (int, int, , ,) emptyRecord8 = (42, 42, , ,);
                                          ^

parser/record/record_and_commas:14:45: Expected an identifier, but got ','.
  (int, int, , ,) emptyRecord8 = (42, 42, , ,);
                                            ^

beginCompilationUnit(main)
  beginMetadataStar(main)
  endMetadataStar(0)
  beginTopLevelMember(main)
    beginTopLevelMethod(, null, null)
      handleNoType()
      handleIdentifier(main, topLevelFunctionDeclaration)
      handleNoTypeVariables(()
      beginFormalParameters((, MemberKind.TopLevelMethod)
      endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
      handleAsyncModifier(null, null)
      beginBlockFunctionBody({)
        beginMetadataStar(()
        endMetadataStar(0)
        beginRecordType(()
        endRecordType((, null, 0, false)
        beginVariablesDeclaration(emptyRecord1, null, null)
          handleIdentifier(emptyRecord1, localVariableDeclaration)
          beginInitializedIdentifier(emptyRecord1)
            beginVariableInitializer(=)
              beginParenthesizedExpressionOrRecordLiteral(()
              endRecordLiteral((, 0, null)
            endVariableInitializer(=)
          endInitializedIdentifier(emptyRecord1)
        endVariablesDeclaration(1, ;)
        beginMetadataStar(()
        endMetadataStar(0)
        beginRecordType(()
          handleRecoverableError(RecordTypeZeroFieldsButTrailingComma, ,, ,)
        endRecordType((, null, 0, false)
        beginVariablesDeclaration(emptyRecord2, null, null)
          handleIdentifier(emptyRecord2, localVariableDeclaration)
          beginInitializedIdentifier(emptyRecord2)
            beginVariableInitializer(=)
              beginParenthesizedExpressionOrRecordLiteral(()
              endRecordLiteral((, 0, null)
            endVariableInitializer(=)
          endInitializedIdentifier(emptyRecord2)
        endVariablesDeclaration(1, ;)
        beginMetadataStar(()
        endMetadataStar(0)
        beginRecordType(()
        endRecordType((, null, 0, false)
        beginVariablesDeclaration(emptyRecord3, null, null)
          handleIdentifier(emptyRecord3, localVariableDeclaration)
          beginInitializedIdentifier(emptyRecord3)
            beginVariableInitializer(=)
              beginParenthesizedExpressionOrRecordLiteral(()
                handleRecoverableError(RecordLiteralZeroFieldsWithTrailingComma, ,, ,)
              endRecordLiteral((, 0, null)
            endVariableInitializer(=)
          endInitializedIdentifier(emptyRecord3)
        endVariablesDeclaration(1, ;)
        beginMetadataStar(()
        endMetadataStar(0)
        beginRecordType(()
          handleRecoverableError(RecordTypeZeroFieldsButTrailingComma, ,, ,)
        endRecordType((, null, 0, false)
        beginVariablesDeclaration(emptyRecord4, null, null)
          handleIdentifier(emptyRecord4, localVariableDeclaration)
          beginInitializedIdentifier(emptyRecord4)
            beginVariableInitializer(=)
              beginParenthesizedExpressionOrRecordLiteral(()
                handleRecoverableError(RecordLiteralZeroFieldsWithTrailingComma, ,, ,)
              endRecordLiteral((, 0, null)
            endVariableInitializer(=)
          endInitializedIdentifier(emptyRecord4)
        endVariablesDeclaration(1, ;)
        beginMetadataStar(()
        endMetadataStar(0)
        beginRecordType(()
          beginRecordTypeEntry()
            beginMetadataStar(int)
            endMetadataStar(0)
            handleIdentifier(int, typeReference)
            handleNoTypeArguments(,)
            handleType(int, null)
            handleNoName(,)
          endRecordTypeEntry()
          beginRecordTypeEntry()
            beginMetadataStar(,)
            endMetadataStar(0)
            handleRecoverableError(Message[ExpectedType, Expected a type, but got ','., null, {lexeme: ,}], ,, ,)
            handleIdentifier(, typeReference)
            handleNoTypeArguments(,)
            handleType(, null)
            handleNoName(,)
          endRecordTypeEntry()
        endRecordType((, null, 2, false)
        beginVariablesDeclaration(emptyRecord5, null, null)
          handleIdentifier(emptyRecord5, localVariableDeclaration)
          beginInitializedIdentifier(emptyRecord5)
            beginVariableInitializer(=)
              beginParenthesizedExpressionOrRecordLiteral(()
                handleLiteralInt(42)
                handleLiteralInt(42)
                handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got ','., Try inserting an identifier before ','., {lexeme: ,}], ,, ,)
                handleIdentifier(, expression)
                handleNoTypeArguments(,)
                handleNoArguments(,)
                handleSend(, ,)
              endRecordLiteral((, 3, null)
            endVariableInitializer(=)
          endInitializedIdentifier(emptyRecord5)
        endVariablesDeclaration(1, ;)
        beginMetadataStar(()
        endMetadataStar(0)
        beginRecordType(()
          beginRecordTypeEntry()
            beginMetadataStar(int)
            endMetadataStar(0)
            handleIdentifier(int, typeReference)
            handleNoTypeArguments(,)
            handleType(int, null)
            handleNoName(,)
          endRecordTypeEntry()
          beginRecordTypeEntry()
            beginMetadataStar(int)
            endMetadataStar(0)
            handleIdentifier(int, typeReference)
            handleNoTypeArguments(,)
            handleType(int, null)
            handleNoName(,)
          endRecordTypeEntry()
          beginRecordTypeEntry()
            beginMetadataStar(,)
            endMetadataStar(0)
            handleRecoverableError(Message[ExpectedType, Expected a type, but got ','., null, {lexeme: ,}], ,, ,)
            handleIdentifier(, typeReference)
            handleNoTypeArguments(,)
            handleType(, null)
            handleNoName(,)
          endRecordTypeEntry()
        endRecordType((, null, 3, false)
        beginVariablesDeclaration(emptyRecord6, null, null)
          handleIdentifier(emptyRecord6, localVariableDeclaration)
          beginInitializedIdentifier(emptyRecord6)
            beginVariableInitializer(=)
              beginParenthesizedExpressionOrRecordLiteral(()
                handleLiteralInt(42)
                handleLiteralInt(42)
                handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got ','., Try inserting an identifier before ','., {lexeme: ,}], ,, ,)
                handleIdentifier(, expression)
                handleNoTypeArguments(,)
                handleNoArguments(,)
                handleSend(, ,)
              endRecordLiteral((, 3, null)
            endVariableInitializer(=)
          endInitializedIdentifier(emptyRecord6)
        endVariablesDeclaration(1, ;)
        beginMetadataStar(()
        endMetadataStar(0)
        beginRecordType(()
          beginRecordTypeEntry()
            beginMetadataStar(int)
            endMetadataStar(0)
            handleIdentifier(int, typeReference)
            handleNoTypeArguments(,)
            handleType(int, null)
            handleNoName(,)
          endRecordTypeEntry()
          beginRecordTypeEntry()
            beginMetadataStar(,)
            endMetadataStar(0)
            handleRecoverableError(Message[ExpectedType, Expected a type, but got ','., null, {lexeme: ,}], ,, ,)
            handleIdentifier(, typeReference)
            handleNoTypeArguments(,)
            handleType(, null)
            handleNoName(,)
          endRecordTypeEntry()
          beginRecordTypeEntry()
            beginMetadataStar(,)
            endMetadataStar(0)
            handleRecoverableError(Message[ExpectedType, Expected a type, but got ','., null, {lexeme: ,}], ,, ,)
            handleIdentifier(, typeReference)
            handleNoTypeArguments(,)
            handleType(, null)
            handleNoName(,)
          endRecordTypeEntry()
        endRecordType((, null, 3, false)
        beginVariablesDeclaration(emptyRecord7, null, null)
          handleIdentifier(emptyRecord7, localVariableDeclaration)
          beginInitializedIdentifier(emptyRecord7)
            beginVariableInitializer(=)
              beginParenthesizedExpressionOrRecordLiteral(()
                handleLiteralInt(42)
                handleLiteralInt(42)
                handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got ','., Try inserting an identifier before ','., {lexeme: ,}], ,, ,)
                handleIdentifier(, expression)
                handleNoTypeArguments(,)
                handleNoArguments(,)
                handleSend(, ,)
                handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got ','., Try inserting an identifier before ','., {lexeme: ,}], ,, ,)
                handleIdentifier(, expression)
                handleNoTypeArguments(,)
                handleNoArguments(,)
                handleSend(, ,)
              endRecordLiteral((, 4, null)
            endVariableInitializer(=)
          endInitializedIdentifier(emptyRecord7)
        endVariablesDeclaration(1, ;)
        beginMetadataStar(()
        endMetadataStar(0)
        beginRecordType(()
          beginRecordTypeEntry()
            beginMetadataStar(int)
            endMetadataStar(0)
            handleIdentifier(int, typeReference)
            handleNoTypeArguments(,)
            handleType(int, null)
            handleNoName(,)
          endRecordTypeEntry()
          beginRecordTypeEntry()
            beginMetadataStar(int)
            endMetadataStar(0)
            handleIdentifier(int, typeReference)
            handleNoTypeArguments(,)
            handleType(int, null)
            handleNoName(,)
          endRecordTypeEntry()
          beginRecordTypeEntry()
            beginMetadataStar(,)
            endMetadataStar(0)
            handleRecoverableError(Message[ExpectedType, Expected a type, but got ','., null, {lexeme: ,}], ,, ,)
            handleIdentifier(, typeReference)
            handleNoTypeArguments(,)
            handleType(, null)
            handleNoName(,)
          endRecordTypeEntry()
          beginRecordTypeEntry()
            beginMetadataStar(,)
            endMetadataStar(0)
            handleRecoverableError(Message[ExpectedType, Expected a type, but got ','., null, {lexeme: ,}], ,, ,)
            handleIdentifier(, typeReference)
            handleNoTypeArguments(,)
            handleType(, null)
            handleNoName(,)
          endRecordTypeEntry()
        endRecordType((, null, 4, false)
        beginVariablesDeclaration(emptyRecord8, null, null)
          handleIdentifier(emptyRecord8, localVariableDeclaration)
          beginInitializedIdentifier(emptyRecord8)
            beginVariableInitializer(=)
              beginParenthesizedExpressionOrRecordLiteral(()
                handleLiteralInt(42)
                handleLiteralInt(42)
                handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got ','., Try inserting an identifier before ','., {lexeme: ,}], ,, ,)
                handleIdentifier(, expression)
                handleNoTypeArguments(,)
                handleNoArguments(,)
                handleSend(, ,)
                handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got ','., Try inserting an identifier before ','., {lexeme: ,}], ,, ,)
                handleIdentifier(, expression)
                handleNoTypeArguments(,)
                handleNoArguments(,)
                handleSend(, ,)
              endRecordLiteral((, 4, null)
            endVariableInitializer(=)
          endInitializedIdentifier(emptyRecord8)
        endVariablesDeclaration(1, ;)
      endBlockFunctionBody(8, {, })
    endTopLevelMethod(main, null, })
  endTopLevelDeclaration()
endCompilationUnit(1, )
