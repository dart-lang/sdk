parseUnit(void)
  skipErrorTokens(void)
  listener: beginCompilationUnit(void)
  syntheticPreviousToken(void)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(, null, null, , VoidType(), null, foo, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(foo, topLevelFunctionDeclaration)
        parseMethodTypeVar(foo)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(foo, foo, false, MemberKind.TopLevelMethod)
          parseFormalParameters(foo, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(record1)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, {, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(int, null)
                      listener: handleNoName(,)
                      listener: endRecordTypeEntry()
                    parseRecordTypeField(,, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(,)
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments())
                      listener: handleType(int, null)
                      listener: handleNoName())
                      listener: endRecordTypeEntry()
                    listener: endRecordType((, null, 2, false)
                  listener: beginVariablesDeclaration(record1, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record1, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record1)
                      parseVariableInitializerOpt(record1)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(1)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(,, true, ConstantPatternContext.none)
                                          parsePrimary(,, expression, ConstantPatternContext.none)
                                            parseLiteralInt(,)
                                              listener: handleLiteralInt(2)
                                    ensureCloseParen(2, ()
                                    listener: endRecordLiteral((, 2, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record1)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(record1Named)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, ;, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(x)
                      listener: handleType(int, null)
                      ensureIdentifier(int, recordFieldDeclaration)
                        listener: handleIdentifier(x, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    parseRecordTypeField(,, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(,)
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(y)
                      listener: handleType(int, null)
                      ensureIdentifier(int, recordFieldDeclaration)
                        listener: handleIdentifier(y, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    listener: endRecordType((, null, 2, false)
                  listener: beginVariablesDeclaration(record1Named, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record1Named, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record1Named)
                      parseVariableInitializerOpt(record1Named)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(1)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(,, true, ConstantPatternContext.none)
                                          parsePrimary(,, expression, ConstantPatternContext.none)
                                            parseLiteralInt(,)
                                              listener: handleLiteralInt(2)
                                    ensureCloseParen(2, ()
                                    listener: endRecordLiteral((, 2, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record1Named)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(record2)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, ;, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(int, null)
                      listener: handleNoName(,)
                      listener: endRecordTypeEntry()
                    parseRecordTypeField(,, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(,)
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(int, null)
                      listener: handleNoName(,)
                      listener: endRecordTypeEntry()
                    listener: endRecordType((, null, 2, false)
                  listener: beginVariablesDeclaration(record2, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record2, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record2)
                      parseVariableInitializerOpt(record2)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(1)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(,, true, ConstantPatternContext.none)
                                          parsePrimary(,, expression, ConstantPatternContext.none)
                                            parseLiteralInt(,)
                                              listener: handleLiteralInt(2)
                                    ensureCloseParen(2, ()
                                    listener: endRecordLiteral((, 2, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record2)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(record2Named)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, ;, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(x)
                      listener: handleType(int, null)
                      ensureIdentifier(int, recordFieldDeclaration)
                        listener: handleIdentifier(x, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    parseRecordTypeField(,, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(,)
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(y)
                      listener: handleType(int, null)
                      ensureIdentifier(int, recordFieldDeclaration)
                        listener: handleIdentifier(y, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    listener: endRecordType((, null, 2, false)
                  listener: beginVariablesDeclaration(record2Named, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record2Named, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record2Named)
                      parseVariableInitializerOpt(record2Named)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(1)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(,, true, ConstantPatternContext.none)
                                          parsePrimary(,, expression, ConstantPatternContext.none)
                                            parseLiteralInt(,)
                                              listener: handleLiteralInt(2)
                                    ensureCloseParen(2, ()
                                    listener: endRecordLiteral((, 2, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record2Named)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(record3)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, ;, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(int, null)
                      listener: handleNoName(,)
                      listener: endRecordTypeEntry()
                    parseRecordTypeField(,, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(,)
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(int, null)
                      listener: handleNoName(,)
                      listener: endRecordTypeEntry()
                    parseRecordTypeNamedFields(,)
                      listener: beginRecordTypeNamedFields({)
                      parseRecordTypeField({, identifierIsOptional: false)
                        listener: beginRecordTypeEntry()
                        parseMetadataStar({)
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(a)
                        listener: handleType(int, null)
                        ensureIdentifier(int, recordFieldDeclaration)
                          listener: handleIdentifier(a, recordFieldDeclaration)
                        listener: endRecordTypeEntry()
                      parseRecordTypeField(,, identifierIsOptional: false)
                        listener: beginRecordTypeEntry()
                        parseMetadataStar(,)
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(b)
                        listener: handleType(int, null)
                        ensureIdentifier(int, recordFieldDeclaration)
                          listener: handleIdentifier(b, recordFieldDeclaration)
                        listener: endRecordTypeEntry()
                      listener: endRecordTypeNamedFields(2, {)
                    ensureCloseParen(}, ()
                    listener: endRecordType((, null, 3, true)
                  listener: beginVariablesDeclaration(record3, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record3, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record3)
                      parseVariableInitializerOpt(record3)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(1)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(,, true, ConstantPatternContext.none)
                                          parsePrimary(,, expression, ConstantPatternContext.none)
                                            parseLiteralInt(,)
                                              listener: handleLiteralInt(2)
                                    ensureIdentifier(,, namedRecordFieldReference)
                                      listener: handleIdentifier(a, namedRecordFieldReference)
                                    parseExpression(:)
                                      parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(:, true, ConstantPatternContext.none)
                                          parsePrimary(:, expression, ConstantPatternContext.none)
                                            parseLiteralInt(:)
                                              listener: handleLiteralInt(3)
                                    listener: handleNamedRecordField(:)
                                    ensureIdentifier(,, namedRecordFieldReference)
                                      listener: handleIdentifier(b, namedRecordFieldReference)
                                    parseExpression(:)
                                      parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(:, true, ConstantPatternContext.none)
                                          parsePrimary(:, expression, ConstantPatternContext.none)
                                            parseLiteralInt(:)
                                              listener: handleLiteralInt(4)
                                    listener: handleNamedRecordField(:)
                                    ensureCloseParen(4, ()
                                    listener: endRecordLiteral((, 4, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record3)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(record3Named)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, ;, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(x)
                      listener: handleType(int, null)
                      ensureIdentifier(int, recordFieldDeclaration)
                        listener: handleIdentifier(x, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    parseRecordTypeField(,, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(,)
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(y)
                      listener: handleType(int, null)
                      ensureIdentifier(int, recordFieldDeclaration)
                        listener: handleIdentifier(y, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    parseRecordTypeNamedFields(,)
                      listener: beginRecordTypeNamedFields({)
                      parseRecordTypeField({, identifierIsOptional: false)
                        listener: beginRecordTypeEntry()
                        parseMetadataStar({)
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(a)
                        listener: handleType(int, null)
                        ensureIdentifier(int, recordFieldDeclaration)
                          listener: handleIdentifier(a, recordFieldDeclaration)
                        listener: endRecordTypeEntry()
                      parseRecordTypeField(,, identifierIsOptional: false)
                        listener: beginRecordTypeEntry()
                        parseMetadataStar(,)
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(b)
                        listener: handleType(int, null)
                        ensureIdentifier(int, recordFieldDeclaration)
                          listener: handleIdentifier(b, recordFieldDeclaration)
                        listener: endRecordTypeEntry()
                      listener: endRecordTypeNamedFields(2, {)
                    ensureCloseParen(}, ()
                    listener: endRecordType((, null, 3, true)
                  listener: beginVariablesDeclaration(record3Named, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record3Named, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record3Named)
                      parseVariableInitializerOpt(record3Named)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(1)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(,, true, ConstantPatternContext.none)
                                          parsePrimary(,, expression, ConstantPatternContext.none)
                                            parseLiteralInt(,)
                                              listener: handleLiteralInt(2)
                                    ensureIdentifier(,, namedRecordFieldReference)
                                      listener: handleIdentifier(a, namedRecordFieldReference)
                                    parseExpression(:)
                                      parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(:, true, ConstantPatternContext.none)
                                          parsePrimary(:, expression, ConstantPatternContext.none)
                                            parseLiteralInt(:)
                                              listener: handleLiteralInt(3)
                                    listener: handleNamedRecordField(:)
                                    ensureIdentifier(,, namedRecordFieldReference)
                                      listener: handleIdentifier(b, namedRecordFieldReference)
                                    parseExpression(:)
                                      parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(:, true, ConstantPatternContext.none)
                                          parsePrimary(:, expression, ConstantPatternContext.none)
                                            parseLiteralInt(:)
                                              listener: handleLiteralInt(4)
                                    listener: handleNamedRecordField(:)
                                    ensureCloseParen(4, ()
                                    listener: endRecordLiteral((, 4, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record3Named)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(record4)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, ;, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(int, null)
                      listener: handleNoName(,)
                      listener: endRecordTypeEntry()
                    parseRecordTypeField(,, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(,)
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(int, null)
                      listener: handleNoName(,)
                      listener: endRecordTypeEntry()
                    parseRecordTypeNamedFields(,)
                      listener: beginRecordTypeNamedFields({)
                      parseRecordTypeField({, identifierIsOptional: false)
                        listener: beginRecordTypeEntry()
                        parseMetadataStar({)
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(a)
                        listener: handleType(int, null)
                        ensureIdentifier(int, recordFieldDeclaration)
                          listener: handleIdentifier(a, recordFieldDeclaration)
                        listener: endRecordTypeEntry()
                      parseRecordTypeField(,, identifierIsOptional: false)
                        listener: beginRecordTypeEntry()
                        parseMetadataStar(,)
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(b)
                        listener: handleType(int, null)
                        ensureIdentifier(int, recordFieldDeclaration)
                          listener: handleIdentifier(b, recordFieldDeclaration)
                        listener: endRecordTypeEntry()
                      listener: endRecordTypeNamedFields(2, {)
                    ensureCloseParen(}, ()
                    listener: endRecordType((, null, 3, true)
                  listener: beginVariablesDeclaration(record4, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record4, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record4)
                      parseVariableInitializerOpt(record4)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(1)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(,, true, ConstantPatternContext.none)
                                          parsePrimary(,, expression, ConstantPatternContext.none)
                                            parseLiteralInt(,)
                                              listener: handleLiteralInt(2)
                                    ensureIdentifier(,, namedRecordFieldReference)
                                      listener: handleIdentifier(a, namedRecordFieldReference)
                                    parseExpression(:)
                                      parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(:, true, ConstantPatternContext.none)
                                          parsePrimary(:, expression, ConstantPatternContext.none)
                                            parseLiteralInt(:)
                                              listener: handleLiteralInt(3)
                                    listener: handleNamedRecordField(:)
                                    ensureIdentifier(,, namedRecordFieldReference)
                                      listener: handleIdentifier(b, namedRecordFieldReference)
                                    parseExpression(:)
                                      parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(:, true, ConstantPatternContext.none)
                                          parsePrimary(:, expression, ConstantPatternContext.none)
                                            parseLiteralInt(:)
                                              listener: handleLiteralInt(4)
                                    listener: handleNamedRecordField(:)
                                    ensureCloseParen(4, ()
                                    listener: endRecordLiteral((, 4, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record4)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(record4Named)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, ;, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(x)
                      listener: handleType(int, null)
                      ensureIdentifier(int, recordFieldDeclaration)
                        listener: handleIdentifier(x, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    parseRecordTypeField(,, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(,)
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(y)
                      listener: handleType(int, null)
                      ensureIdentifier(int, recordFieldDeclaration)
                        listener: handleIdentifier(y, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    parseRecordTypeNamedFields(,)
                      listener: beginRecordTypeNamedFields({)
                      parseRecordTypeField({, identifierIsOptional: false)
                        listener: beginRecordTypeEntry()
                        parseMetadataStar({)
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(a)
                        listener: handleType(int, null)
                        ensureIdentifier(int, recordFieldDeclaration)
                          listener: handleIdentifier(a, recordFieldDeclaration)
                        listener: endRecordTypeEntry()
                      parseRecordTypeField(,, identifierIsOptional: false)
                        listener: beginRecordTypeEntry()
                        parseMetadataStar(,)
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(b)
                        listener: handleType(int, null)
                        ensureIdentifier(int, recordFieldDeclaration)
                          listener: handleIdentifier(b, recordFieldDeclaration)
                        listener: endRecordTypeEntry()
                      listener: endRecordTypeNamedFields(2, {)
                    ensureCloseParen(}, ()
                    listener: endRecordType((, null, 3, true)
                  listener: beginVariablesDeclaration(record4Named, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record4Named, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record4Named)
                      parseVariableInitializerOpt(record4Named)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(1)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(,, true, ConstantPatternContext.none)
                                          parsePrimary(,, expression, ConstantPatternContext.none)
                                            parseLiteralInt(,)
                                              listener: handleLiteralInt(2)
                                    ensureIdentifier(,, namedRecordFieldReference)
                                      listener: handleIdentifier(a, namedRecordFieldReference)
                                    parseExpression(:)
                                      parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(:, true, ConstantPatternContext.none)
                                          parsePrimary(:, expression, ConstantPatternContext.none)
                                            parseLiteralInt(:)
                                              listener: handleLiteralInt(3)
                                    listener: handleNamedRecordField(:)
                                    ensureIdentifier(,, namedRecordFieldReference)
                                      listener: handleIdentifier(b, namedRecordFieldReference)
                                    parseExpression(:)
                                      parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(:, true, ConstantPatternContext.none)
                                          parsePrimary(:, expression, ConstantPatternContext.none)
                                            parseLiteralInt(:)
                                              listener: handleLiteralInt(4)
                                    listener: handleNamedRecordField(:)
                                    ensureCloseParen(4, ()
                                    listener: endRecordLiteral((, 4, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record4Named)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, void)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(foobar)
                  listener: beginMetadataStar(void)
                  listener: endMetadataStar(0)
                  listener: beginFunctionType(void)
                  listener: handleNoTypeVariables(()
                  listener: handleVoidKeyword(void)
                  parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
                    parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
                      listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.GeneralizedFunctionType)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.GeneralizedFunctionType, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(,)
                        listener: handleType(int, null)
                        listener: handleNoName(,)
                        listener: handleFormalParameterWithoutValue(,)
                        listener: endFormalParameter(null, null, null, null, ,, null, null, FormalParameterKind.requiredPositional, MemberKind.GeneralizedFunctionType)
                      parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.GeneralizedFunctionType)
                        parseMetadataStar(,)
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.GeneralizedFunctionType, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments())
                        listener: handleType(int, null)
                        listener: handleNoName())
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, null, ), null, null, FormalParameterKind.requiredPositional, MemberKind.GeneralizedFunctionType)
                      listener: endFormalParameters(2, (, ), MemberKind.GeneralizedFunctionType)
                  listener: endFunctionType(Function, null)
                  listener: beginVariablesDeclaration(foobar, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(foobar, localVariableDeclaration)
                      listener: beginInitializedIdentifier(foobar)
                      parseVariableInitializerOpt(foobar)
                        listener: handleNoVariableInitializer(foobar)
                      listener: endInitializedIdentifier(foobar)
                    ensureSemicolon(foobar)
                    listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(record5)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, ;, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(()
                        listener: endMetadataStar(0)
                      parseRecordType((, (, false)
                        listener: beginRecordType(()
                        parseRecordTypeField((, identifierIsOptional: true)
                          listener: beginRecordTypeEntry()
                          parseMetadataStar(()
                            listener: beginMetadataStar(int)
                            listener: endMetadataStar(0)
                          listener: handleIdentifier(int, typeReference)
                          listener: handleNoTypeArguments(,)
                          listener: handleType(int, null)
                          listener: handleNoName(,)
                          listener: endRecordTypeEntry()
                        parseRecordTypeField(,, identifierIsOptional: true)
                          listener: beginRecordTypeEntry()
                          parseMetadataStar(,)
                            listener: beginMetadataStar(int)
                            listener: endMetadataStar(0)
                          listener: handleIdentifier(int, typeReference)
                          listener: handleNoTypeArguments())
                          listener: handleType(int, null)
                          listener: handleNoName())
                          listener: endRecordTypeEntry()
                        listener: endRecordType((, null, 2, false)
                      listener: handleNoName(,)
                      listener: endRecordTypeEntry()
                    parseRecordTypeField(,, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(,)
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments())
                      listener: handleType(int, null)
                      listener: handleNoName())
                      listener: endRecordTypeEntry()
                    listener: endRecordType((, null, 2, false)
                  listener: beginVariablesDeclaration(record5, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record5, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record5)
                      parseVariableInitializerOpt(record5)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral((, ConstantPatternContext.none)
                                              parseParenthesizedExpressionOrRecordLiteral((, null, ConstantPatternContext.none)
                                                listener: beginParenthesizedExpressionOrRecordLiteral(()
                                                parseExpression(()
                                                  parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                                    parseUnaryExpression((, true, ConstantPatternContext.none)
                                                      parsePrimary((, expression, ConstantPatternContext.none)
                                                        parseLiteralInt(()
                                                          listener: handleLiteralInt(1)
                                                parseExpression(,)
                                                  parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                                    parseUnaryExpression(,, true, ConstantPatternContext.none)
                                                      parsePrimary(,, expression, ConstantPatternContext.none)
                                                        parseLiteralInt(,)
                                                          listener: handleLiteralInt(2)
                                                ensureCloseParen(2, ()
                                                listener: endRecordLiteral((, 2, null)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(,, true, ConstantPatternContext.none)
                                          parsePrimary(,, expression, ConstantPatternContext.none)
                                            parseLiteralInt(,)
                                              listener: handleLiteralInt(2)
                                    ensureCloseParen(2, ()
                                    listener: endRecordLiteral((, 2, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record5)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, int)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(async)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
                listener: handleNoTypeVariables(()
                listener: beginLocalFunctionDeclaration(int)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(async)
                listener: handleType(int, null)
                parseNamedFunctionRest(int, int, async, false)
                  listener: beginFunctionName(async)
                  ensureIdentifier(int, localFunctionDeclaration)
                    inPlainSync()
                    listener: handleIdentifier(async, localFunctionDeclaration)
                  listener: endFunctionName(int, (, false)
                  parseFormalParametersRequiredOpt(async, MemberKind.Local)
                    parseFormalParametersRest((, MemberKind.Local)
                      listener: beginFormalParameters((, MemberKind.Local)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.Local)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue(,)
                        listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                      parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.Local)
                        parseMetadataStar(,)
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(y)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(y, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                      listener: endFormalParameters(2, (, ), MemberKind.Local)
                  parseInitializersOpt())
                    listener: handleNoInitializers()
                  parseAsyncOptBody(), false, false)
                    parseAsyncModifierOpt())
                      listener: handleAsyncModifier(null, null)
                      inPlainSync()
                    parseFunctionBody(), false, false)
                      listener: beginBlockFunctionBody({)
                      notEofOrType(CLOSE_CURLY_BRACKET, print)
                      parseStatement({)
                        parseStatementX({)
                          parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                            looksLikeLocalFunction(print)
                            parseExpressionStatement({)
                              parseExpression({)
                                parsePrecedenceExpression({, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression({, true, ConstantPatternContext.none)
                                    parsePrimary({, expression, ConstantPatternContext.none)
                                      parseSendOrFunctionLiteral({, expression, ConstantPatternContext.none)
                                        looksLikeFunctionBody(;)
                                        parseSend({, expression, ConstantPatternContext.none)
                                          ensureIdentifier({, expression)
                                            listener: handleIdentifier(print, expression)
                                          listener: handleNoTypeArguments(()
                                          parseArgumentsOpt(print)
                                            parseArguments(print)
                                              parseArgumentsRest(()
                                                listener: beginArguments(()
                                                allowedToShortcutParseExpression()
                                                listener: beginLiteralString("sync named async with int return type taking 2 parameters")
                                                listener: endLiteralString(0, ))
                                                listener: endArguments(1, (, ))
                                          listener: handleSend(print, ))
                              ensureSemicolon())
                              listener: handleExpressionStatement(print, ;)
                      notEofOrType(CLOSE_CURLY_BRACKET, })
                      listener: endBlockFunctionBody(1, {, })
                  listener: endLocalFunctionDeclaration(})
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(})
            parseStatementX(})
              parseExpressionStatementOrDeclaration(}, null)
                parseExpressionStatementOrDeclarationAfterModifiers(}, }, null, null, null, null)
                  looksLikeLocalFunction(async)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  listener: handleNoTypeVariables(()
                  listener: beginLocalFunctionDeclaration(()
                  parseRecordType((, }, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(x)
                      listener: handleType(int, null)
                      ensureIdentifier(int, recordFieldDeclaration)
                        listener: handleIdentifier(x, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    parseRecordTypeField(,, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(,)
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(y)
                      listener: handleType(int, null)
                      ensureIdentifier(int, recordFieldDeclaration)
                        listener: handleIdentifier(y, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    listener: endRecordType((, null, 2, false)
                  parseNamedFunctionRest(), (, async, false)
                    listener: beginFunctionName(async)
                    ensureIdentifier(), localFunctionDeclaration)
                      inPlainSync()
                      listener: handleIdentifier(async, localFunctionDeclaration)
                    listener: endFunctionName((, (, false)
                    parseFormalParametersRequiredOpt(async, MemberKind.Local)
                      parseFormalParametersRest((, MemberKind.Local)
                        listener: beginFormalParameters((, MemberKind.Local)
                        parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.Local)
                          parseMetadataStar(()
                            listener: beginMetadataStar(int)
                            listener: endMetadataStar(0)
                          listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                          listener: handleIdentifier(int, typeReference)
                          listener: handleNoTypeArguments(x)
                          listener: handleType(int, null)
                          ensureIdentifier(int, formalParameterDeclaration)
                            listener: handleIdentifier(x, formalParameterDeclaration)
                          listener: handleFormalParameterWithoutValue(,)
                          listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                        parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.Local)
                          parseMetadataStar(,)
                            listener: beginMetadataStar(int)
                            listener: endMetadataStar(0)
                          listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                          listener: handleIdentifier(int, typeReference)
                          listener: handleNoTypeArguments(y)
                          listener: handleType(int, null)
                          ensureIdentifier(int, formalParameterDeclaration)
                            listener: handleIdentifier(y, formalParameterDeclaration)
                          listener: handleFormalParameterWithoutValue())
                          listener: endFormalParameter(null, null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                        listener: endFormalParameters(2, (, ), MemberKind.Local)
                    parseInitializersOpt())
                      listener: handleNoInitializers()
                    parseAsyncOptBody(), false, false)
                      parseAsyncModifierOpt())
                        listener: handleAsyncModifier(null, null)
                        inPlainSync()
                      parseFunctionBody(), false, false)
                        listener: beginBlockFunctionBody({)
                        notEofOrType(CLOSE_CURLY_BRACKET, print)
                        parseStatement({)
                          parseStatementX({)
                            parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                              looksLikeLocalFunction(print)
                              parseExpressionStatement({)
                                parseExpression({)
                                  parsePrecedenceExpression({, 1, true, ConstantPatternContext.none)
                                    parseUnaryExpression({, true, ConstantPatternContext.none)
                                      parsePrimary({, expression, ConstantPatternContext.none)
                                        parseSendOrFunctionLiteral({, expression, ConstantPatternContext.none)
                                          looksLikeFunctionBody(;)
                                          parseSend({, expression, ConstantPatternContext.none)
                                            ensureIdentifier({, expression)
                                              listener: handleIdentifier(print, expression)
                                            listener: handleNoTypeArguments(()
                                            parseArgumentsOpt(print)
                                              parseArguments(print)
                                                parseArgumentsRest(()
                                                  listener: beginArguments(()
                                                  allowedToShortcutParseExpression()
                                                  listener: beginLiteralString("sync named async with record type return type taking 2 parameters")
                                                  listener: endLiteralString(0, ))
                                                  listener: endArguments(1, (, ))
                                            listener: handleSend(print, ))
                                ensureSemicolon())
                                listener: handleExpressionStatement(print, ;)
                        notEofOrType(CLOSE_CURLY_BRACKET, })
                        listener: endBlockFunctionBody(1, {, })
                    listener: endLocalFunctionDeclaration(})
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(})
            parseStatementX(})
              parseExpressionStatementOrDeclaration(}, null)
                parseExpressionStatementOrDeclarationAfterModifiers(}, }, null, null, null, null)
                  looksLikeLocalFunction(async)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  listener: handleNoTypeVariables(()
                  listener: beginLocalFunctionDeclaration(()
                  parseRecordType((, }, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(x)
                      listener: handleType(int, null)
                      ensureIdentifier(int, recordFieldDeclaration)
                        listener: handleIdentifier(x, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    parseRecordTypeField(,, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(,)
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(y)
                      listener: handleType(int, null)
                      ensureIdentifier(int, recordFieldDeclaration)
                        listener: handleIdentifier(y, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    listener: endRecordType((, null, 2, false)
                  parseNamedFunctionRest(), (, async, false)
                    listener: beginFunctionName(async)
                    ensureIdentifier(), localFunctionDeclaration)
                      inPlainSync()
                      listener: handleIdentifier(async, localFunctionDeclaration)
                    listener: endFunctionName((, (, false)
                    parseFormalParametersRequiredOpt(async, MemberKind.Local)
                      parseFormalParametersRest((, MemberKind.Local)
                        listener: beginFormalParameters((, MemberKind.Local)
                        parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.Local)
                          parseMetadataStar(()
                            listener: beginMetadataStar(int)
                            listener: endMetadataStar(0)
                          listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                          listener: handleIdentifier(int, typeReference)
                          listener: handleNoTypeArguments(x)
                          listener: handleType(int, null)
                          ensureIdentifier(int, formalParameterDeclaration)
                            listener: handleIdentifier(x, formalParameterDeclaration)
                          listener: handleFormalParameterWithoutValue(,)
                          listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                        parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.Local)
                          parseMetadataStar(,)
                            listener: beginMetadataStar(int)
                            listener: endMetadataStar(0)
                          listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                          listener: handleIdentifier(int, typeReference)
                          listener: handleNoTypeArguments(y)
                          listener: handleType(int, null)
                          ensureIdentifier(int, formalParameterDeclaration)
                            listener: handleIdentifier(y, formalParameterDeclaration)
                          listener: handleFormalParameterWithoutValue())
                          listener: endFormalParameter(null, null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                        listener: endFormalParameters(2, (, ), MemberKind.Local)
                    parseInitializersOpt())
                      listener: handleNoInitializers()
                    parseAsyncOptBody(), false, false)
                      parseAsyncModifierOpt())
                        listener: handleAsyncModifier(null, null)
                        inPlainSync()
                      parseFunctionBody(), false, false)
                        parseExpressionFunctionBody(=>, false)
                          parseExpression(=>)
                            parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                              parseUnaryExpression(=>, true, ConstantPatternContext.none)
                                parsePrimary(=>, expression, ConstantPatternContext.none)
                                  parseSendOrFunctionLiteral(=>, expression, ConstantPatternContext.none)
                                    looksLikeFunctionBody(;)
                                    parseSend(=>, expression, ConstantPatternContext.none)
                                      ensureIdentifier(=>, expression)
                                        listener: handleIdentifier(print, expression)
                                      listener: handleNoTypeArguments(()
                                      parseArgumentsOpt(print)
                                        parseArguments(print)
                                          parseArgumentsRest(()
                                            listener: beginArguments(()
                                            allowedToShortcutParseExpression()
                                            listener: beginLiteralString("sync named async with record type return type taking 2 parameters")
                                            listener: endLiteralString(0, ))
                                            listener: endArguments(1, (, ))
                                      listener: handleSend(print, ))
                          ensureSemicolon())
                          listener: handleExpressionFunctionBody(=>, ;)
                          inGenerator()
                    listener: endLocalFunctionDeclaration(;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(()
                  parseExpressionStatement(;)
                    parseExpression(;)
                      parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression(;, true, ConstantPatternContext.none)
                          parsePrimary(;, expression, ConstantPatternContext.none)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(;, ConstantPatternContext.none)
                              listener: handleNoTypeVariables(()
                              parseFunctionExpression(;)
                                listener: beginFunctionExpression(()
                                parseFormalParametersRequiredOpt(;, MemberKind.Local)
                                  parseFormalParametersRest((, MemberKind.Local)
                                    listener: beginFormalParameters((, MemberKind.Local)
                                    parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.Local)
                                      parseMetadataStar(()
                                        listener: beginMetadataStar(int)
                                        listener: endMetadataStar(0)
                                      listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                                      listener: handleIdentifier(int, typeReference)
                                      listener: handleNoTypeArguments(x)
                                      listener: handleType(int, null)
                                      ensureIdentifier(int, formalParameterDeclaration)
                                        listener: handleIdentifier(x, formalParameterDeclaration)
                                      listener: handleFormalParameterWithoutValue(,)
                                      listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                                    parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.Local)
                                      parseMetadataStar(,)
                                        listener: beginMetadataStar(int)
                                        listener: endMetadataStar(0)
                                      listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                                      listener: handleIdentifier(int, typeReference)
                                      listener: handleNoTypeArguments(y)
                                      listener: handleType(int, null)
                                      ensureIdentifier(int, formalParameterDeclaration)
                                        listener: handleIdentifier(y, formalParameterDeclaration)
                                      listener: handleFormalParameterWithoutValue())
                                      listener: endFormalParameter(null, null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                                    listener: endFormalParameters(2, (, ), MemberKind.Local)
                                parseAsyncOptBody(), true, false)
                                  parseAsyncModifierOpt())
                                    listener: handleAsyncModifier(null, null)
                                    inPlainSync()
                                  parseFunctionBody(), true, false)
                                    listener: beginBlockFunctionBody({)
                                    notEofOrType(CLOSE_CURLY_BRACKET, print)
                                    parseStatement({)
                                      parseStatementX({)
                                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                                          looksLikeLocalFunction(print)
                                          parseExpressionStatement({)
                                            parseExpression({)
                                              parsePrecedenceExpression({, 1, true, ConstantPatternContext.none)
                                                parseUnaryExpression({, true, ConstantPatternContext.none)
                                                  parsePrimary({, expression, ConstantPatternContext.none)
                                                    parseSendOrFunctionLiteral({, expression, ConstantPatternContext.none)
                                                      looksLikeFunctionBody(;)
                                                      parseSend({, expression, ConstantPatternContext.none)
                                                        ensureIdentifier({, expression)
                                                          listener: handleIdentifier(print, expression)
                                                        listener: handleNoTypeArguments(()
                                                        parseArgumentsOpt(print)
                                                          parseArguments(print)
                                                            parseArgumentsRest(()
                                                              listener: beginArguments(()
                                                              allowedToShortcutParseExpression()
                                                              listener: beginLiteralString("sync unnamed taking 2 parameters")
                                                              listener: endLiteralString(0, ))
                                                              listener: endArguments(1, (, ))
                                                        listener: handleSend(print, ))
                                            ensureSemicolon())
                                            listener: handleExpressionStatement(print, ;)
                                    notEofOrType(CLOSE_CURLY_BRACKET, })
                                    listener: endBlockFunctionBody(1, {, })
                                listener: endFunctionExpression((, })
                        parseArgumentOrIndexStar(}, NoTypeParamOrArg(), false)
                          listener: handleNoTypeArguments(()
                          parseArguments(})
                            parseArgumentsRest(()
                              listener: beginArguments(()
                              listener: endArguments(0, (, ))
                          listener: handleSend((, ))
                    ensureSemicolon())
                    listener: handleExpressionStatement((, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(()
                  parseExpressionStatement(;)
                    parseExpression(;)
                      parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression(;, true, ConstantPatternContext.none)
                          parsePrimary(;, expression, ConstantPatternContext.none)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(;, ConstantPatternContext.none)
                              listener: handleNoTypeVariables(()
                              parseFunctionExpression(;)
                                listener: beginFunctionExpression(()
                                parseFormalParametersRequiredOpt(;, MemberKind.Local)
                                  parseFormalParametersRest((, MemberKind.Local)
                                    listener: beginFormalParameters((, MemberKind.Local)
                                    parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.Local)
                                      parseMetadataStar(()
                                        listener: beginMetadataStar(int)
                                        listener: endMetadataStar(0)
                                      listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                                      listener: handleIdentifier(int, typeReference)
                                      listener: handleNoTypeArguments(x)
                                      listener: handleType(int, null)
                                      ensureIdentifier(int, formalParameterDeclaration)
                                        listener: handleIdentifier(x, formalParameterDeclaration)
                                      listener: handleFormalParameterWithoutValue(,)
                                      listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                                    parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.Local)
                                      parseMetadataStar(,)
                                        listener: beginMetadataStar(int)
                                        listener: endMetadataStar(0)
                                      listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                                      listener: handleIdentifier(int, typeReference)
                                      listener: handleNoTypeArguments(y)
                                      listener: handleType(int, null)
                                      ensureIdentifier(int, formalParameterDeclaration)
                                        listener: handleIdentifier(y, formalParameterDeclaration)
                                      listener: handleFormalParameterWithoutValue())
                                      listener: endFormalParameter(null, null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                                    listener: endFormalParameters(2, (, ), MemberKind.Local)
                                parseAsyncOptBody(), true, false)
                                  parseAsyncModifierOpt())
                                    listener: handleAsyncModifier(null, null)
                                    inPlainSync()
                                  parseFunctionBody(), true, false)
                                    parseExpressionFunctionBody(=>, true)
                                      parseExpression(=>)
                                        parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                                          parseUnaryExpression(=>, true, ConstantPatternContext.none)
                                            parsePrimary(=>, expression, ConstantPatternContext.none)
                                              parseSendOrFunctionLiteral(=>, expression, ConstantPatternContext.none)
                                                looksLikeFunctionBody(;)
                                                parseSend(=>, expression, ConstantPatternContext.none)
                                                  ensureIdentifier(=>, expression)
                                                    listener: handleIdentifier(print, expression)
                                                  listener: handleNoTypeArguments(()
                                                  parseArgumentsOpt(print)
                                                    parseArguments(print)
                                                      parseArgumentsRest(()
                                                        listener: beginArguments(()
                                                        allowedToShortcutParseExpression()
                                                        listener: beginLiteralString("sync unnamed taking 2 parameters")
                                                        listener: endLiteralString(0, ))
                                                        listener: endArguments(1, (, ))
                                                  listener: handleSend(print, ))
                                      listener: handleExpressionFunctionBody(=>, null)
                                      inGenerator()
                                listener: endFunctionExpression((, ))
                    ensureSemicolon())
                    listener: handleExpressionStatement((, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(()
                  parseExpressionStatement(;)
                    parseExpression(;)
                      parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression(;, true, ConstantPatternContext.none)
                          parsePrimary(;, expression, ConstantPatternContext.none)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(;, ConstantPatternContext.none)
                              listener: handleNoTypeVariables(()
                              parseFunctionExpression(;)
                                listener: beginFunctionExpression(()
                                parseFormalParametersRequiredOpt(;, MemberKind.Local)
                                  parseFormalParametersRest((, MemberKind.Local)
                                    listener: beginFormalParameters((, MemberKind.Local)
                                    parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.Local)
                                      parseMetadataStar(()
                                        listener: beginMetadataStar(int)
                                        listener: endMetadataStar(0)
                                      listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                                      listener: handleIdentifier(int, typeReference)
                                      listener: handleNoTypeArguments(x)
                                      listener: handleType(int, null)
                                      ensureIdentifier(int, formalParameterDeclaration)
                                        listener: handleIdentifier(x, formalParameterDeclaration)
                                      listener: handleFormalParameterWithoutValue(,)
                                      listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                                    parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.Local)
                                      parseMetadataStar(,)
                                        listener: beginMetadataStar(int)
                                        listener: endMetadataStar(0)
                                      listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                                      listener: handleIdentifier(int, typeReference)
                                      listener: handleNoTypeArguments(y)
                                      listener: handleType(int, null)
                                      ensureIdentifier(int, formalParameterDeclaration)
                                        listener: handleIdentifier(y, formalParameterDeclaration)
                                      listener: handleFormalParameterWithoutValue())
                                      listener: endFormalParameter(null, null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                                    listener: endFormalParameters(2, (, ), MemberKind.Local)
                                parseAsyncOptBody(), true, false)
                                  parseAsyncModifierOpt())
                                    listener: handleAsyncModifier(async, null)
                                    inPlainSync()
                                  parseFunctionBody(async, true, false)
                                    listener: beginBlockFunctionBody({)
                                    notEofOrType(CLOSE_CURLY_BRACKET, print)
                                    parseStatement({)
                                      parseStatementX({)
                                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                                          looksLikeLocalFunction(print)
                                          parseExpressionStatement({)
                                            parseExpression({)
                                              parsePrecedenceExpression({, 1, true, ConstantPatternContext.none)
                                                parseUnaryExpression({, true, ConstantPatternContext.none)
                                                  parsePrimary({, expression, ConstantPatternContext.none)
                                                    parseSendOrFunctionLiteral({, expression, ConstantPatternContext.none)
                                                      looksLikeFunctionBody(;)
                                                      parseSend({, expression, ConstantPatternContext.none)
                                                        ensureIdentifier({, expression)
                                                          listener: handleIdentifier(print, expression)
                                                        listener: handleNoTypeArguments(()
                                                        parseArgumentsOpt(print)
                                                          parseArguments(print)
                                                            parseArgumentsRest(()
                                                              listener: beginArguments(()
                                                              allowedToShortcutParseExpression()
                                                              listener: beginLiteralString("async unnamed taking 2 parameters")
                                                              listener: endLiteralString(0, ))
                                                              listener: endArguments(1, (, ))
                                                        listener: handleSend(print, ))
                                            ensureSemicolon())
                                            listener: handleExpressionStatement(print, ;)
                                    notEofOrType(CLOSE_CURLY_BRACKET, })
                                    listener: endBlockFunctionBody(1, {, })
                                listener: endFunctionExpression((, })
                        parseArgumentOrIndexStar(}, NoTypeParamOrArg(), false)
                          listener: handleNoTypeArguments(()
                          parseArguments(})
                            parseArgumentsRest(()
                              listener: beginArguments(()
                              listener: endArguments(0, (, ))
                          listener: handleSend((, ))
                    ensureSemicolon())
                    listener: handleExpressionStatement((, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(()
                  parseExpressionStatement(;)
                    parseExpression(;)
                      parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression(;, true, ConstantPatternContext.none)
                          parsePrimary(;, expression, ConstantPatternContext.none)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(;, ConstantPatternContext.none)
                              listener: handleNoTypeVariables(()
                              parseFunctionExpression(;)
                                listener: beginFunctionExpression(()
                                parseFormalParametersRequiredOpt(;, MemberKind.Local)
                                  parseFormalParametersRest((, MemberKind.Local)
                                    listener: beginFormalParameters((, MemberKind.Local)
                                    parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.Local)
                                      parseMetadataStar(()
                                        listener: beginMetadataStar(int)
                                        listener: endMetadataStar(0)
                                      listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                                      listener: handleIdentifier(int, typeReference)
                                      listener: handleNoTypeArguments(x)
                                      listener: handleType(int, null)
                                      ensureIdentifier(int, formalParameterDeclaration)
                                        listener: handleIdentifier(x, formalParameterDeclaration)
                                      listener: handleFormalParameterWithoutValue(,)
                                      listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                                    parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.Local)
                                      parseMetadataStar(,)
                                        listener: beginMetadataStar(int)
                                        listener: endMetadataStar(0)
                                      listener: beginFormalParameter(int, MemberKind.Local, null, null, null)
                                      listener: handleIdentifier(int, typeReference)
                                      listener: handleNoTypeArguments(y)
                                      listener: handleType(int, null)
                                      ensureIdentifier(int, formalParameterDeclaration)
                                        listener: handleIdentifier(y, formalParameterDeclaration)
                                      listener: handleFormalParameterWithoutValue())
                                      listener: endFormalParameter(null, null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                                    listener: endFormalParameters(2, (, ), MemberKind.Local)
                                parseAsyncOptBody(), true, false)
                                  parseAsyncModifierOpt())
                                    listener: handleAsyncModifier(async, null)
                                    inPlainSync()
                                  parseFunctionBody(async, true, false)
                                    parseExpressionFunctionBody(=>, true)
                                      parseExpression(=>)
                                        parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                                          parseUnaryExpression(=>, true, ConstantPatternContext.none)
                                            parsePrimary(=>, expression, ConstantPatternContext.none)
                                              parseSendOrFunctionLiteral(=>, expression, ConstantPatternContext.none)
                                                looksLikeFunctionBody(;)
                                                parseSend(=>, expression, ConstantPatternContext.none)
                                                  ensureIdentifier(=>, expression)
                                                    listener: handleIdentifier(print, expression)
                                                  listener: handleNoTypeArguments(()
                                                  parseArgumentsOpt(print)
                                                    parseArguments(print)
                                                      parseArgumentsRest(()
                                                        listener: beginArguments(()
                                                        allowedToShortcutParseExpression()
                                                        listener: beginLiteralString("async unnamed taking 2 parameters")
                                                        listener: endLiteralString(0, ))
                                                        listener: endArguments(1, (, ))
                                                  listener: handleSend(print, ))
                                      listener: handleExpressionFunctionBody(=>, null)
                                      inGenerator()
                                listener: endFunctionExpression((, ))
                    ensureSemicolon())
                    listener: handleExpressionStatement((, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, })
          listener: endBlockFunctionBody(17, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(})
  reportAllErrorTokens(void)
  listener: endCompilationUnit(1, )
