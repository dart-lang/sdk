parseUnit(()
  skipErrorTokens(()
  listener: beginCompilationUnit(()
  syntheticPreviousToken(()
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(()
      parseTopLevelMethod(, null, null, , Instance of 'ComplexTypeInfo', null, get, false)
        listener: beginTopLevelMethod(, null, null)
        parseRecordType((, , false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(), topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        parseMethodTypeVar(get)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(get, get, false, MemberKind.TopLevelMethod)
          parseFormalParameters(get, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(x)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true)
                parseUnaryExpression(=>, true)
                  parsePrimary(=>, expression)
                    parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=>)
                      parseParenthesizedExpressionOrRecordLiteral(=>, null)
                        listener: beginParenthesizedExpressionOrRecordLiteral(()
                        parseExpression(()
                          parsePrecedenceExpression((, 1, true)
                            parseUnaryExpression((, true)
                              parsePrimary((, expression)
                                parseLiteralInt(()
                                  listener: handleLiteralInt(42)
                        parseExpression(,)
                          parsePrecedenceExpression(,, 1, true)
                            parseUnaryExpression(,, true)
                              parsePrimary(,, expression)
                                parseLiteralString(,)
                                  parseSingleLiteralString(,)
                                    listener: beginLiteralString("fortytwo")
                                    listener: endLiteralString(0, ))
                        ensureCloseParen("fortytwo", ()
                        listener: endRecordLiteral((, 2, null)
            ensureSemicolon())
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod((, null, ;)
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(()
      parseTopLevelMethod(;, null, null, ;, Instance of 'ComplexTypeInfo', null, get, false)
        listener: beginTopLevelMethod(;, null, null)
        parseRecordType((, ;, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(), topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        parseMethodTypeVar(get)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(get, get, false, MemberKind.TopLevelMethod)
          parseFormalParameters(get, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(x)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, return)
          parseStatement({)
            parseStatementX({)
              parseReturnStatement({)
                listener: beginReturnStatement(return)
                parseExpression(return)
                  parsePrecedenceExpression(return, 1, true)
                    parseUnaryExpression(return, true)
                      parsePrimary(return, expression)
                        parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(return)
                          parseParenthesizedExpressionOrRecordLiteral(return, null)
                            listener: beginParenthesizedExpressionOrRecordLiteral(()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true)
                                parseUnaryExpression((, true)
                                  parsePrimary((, expression)
                                    parseLiteralInt(()
                                      listener: handleLiteralInt(42)
                            parseExpression(,)
                              parsePrecedenceExpression(,, 1, true)
                                parseUnaryExpression(,, true)
                                  parsePrimary(,, expression)
                                    parseLiteralString(,)
                                      parseSingleLiteralString(,)
                                        listener: beginLiteralString("fortytwo")
                                        listener: endLiteralString(0, ))
                            ensureCloseParen("fortytwo", ()
                            listener: endRecordLiteral((, 2, null)
                ensureSemicolon())
                listener: endReturnStatement(true, return, ;)
                inGenerator()
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod((, null, })
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(()
      parseTopLevelMethod(}, null, null, }, Instance of 'ComplexTypeInfo', null, get, false)
        listener: beginTopLevelMethod(}, null, null)
        parseRecordType((, }, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(), topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        parseMethodTypeVar(get)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(get, get, false, MemberKind.TopLevelMethod)
          parseFormalParameters(get, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(x)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(async, null)
          inPlainSync()
        parseFunctionBody(async, false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parseThrowExpression(=>, true)
                parseExpression(throw)
                  parsePrecedenceExpression(throw, 1, true)
                    parseUnaryExpression(throw, true)
                      parsePrimary(throw, expression)
                        parseLiteralString(throw)
                          parseSingleLiteralString(throw)
                            listener: beginLiteralString("hello")
                            listener: endLiteralString(0, ;)
                listener: handleThrowExpression(throw, ;)
            ensureSemicolon("hello")
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod((, null, ;)
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(()
      parseTopLevelMethod(;, null, null, ;, Instance of 'ComplexTypeInfo', null, get, false)
        listener: beginTopLevelMethod(;, null, null)
        parseRecordType((, ;, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(), topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        parseMethodTypeVar(get)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(get, get, false, MemberKind.TopLevelMethod)
          parseFormalParameters(get, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(x)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(async, null)
          inPlainSync()
        parseFunctionBody(async, false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, throw)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(throw)
                  parseExpressionStatement({)
                    parseExpression({)
                      parseThrowExpression({, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod((, null, })
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(()
      parseTopLevelMethod(}, null, null, }, Instance of 'ComplexTypeInfo', null, get, false)
        listener: beginTopLevelMethod(}, null, null)
        parseRecordType((, }, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(), topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        parseMethodTypeVar(get)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(get, get, false, MemberKind.TopLevelMethod)
          parseFormalParameters(get, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(x)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(async, *)
          inPlainSync()
        parseFunctionBody(*, false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parseThrowExpression(=>, true)
                parseExpression(throw)
                  parsePrecedenceExpression(throw, 1, true)
                    parseUnaryExpression(throw, true)
                      parsePrimary(throw, expression)
                        parseLiteralString(throw)
                          parseSingleLiteralString(throw)
                            listener: beginLiteralString("hello")
                            listener: endLiteralString(0, ;)
                listener: handleThrowExpression(throw, ;)
            ensureSemicolon("hello")
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
            listener: handleInvalidStatement(=>, GeneratorReturnsValue)
        listener: endTopLevelMethod((, null, ;)
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(()
      parseTopLevelMethod(;, null, null, ;, Instance of 'ComplexTypeInfo', null, get, false)
        listener: beginTopLevelMethod(;, null, null)
        parseRecordType((, ;, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(), topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        parseMethodTypeVar(get)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(get, get, false, MemberKind.TopLevelMethod)
          parseFormalParameters(get, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(x)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(async, *)
          inPlainSync()
        parseFunctionBody(*, false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, throw)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(throw)
                  parseExpressionStatement({)
                    parseExpression({)
                      parseThrowExpression({, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod((, null, })
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(()
      parseTopLevelMethod(}, null, null, }, Instance of 'ComplexTypeInfo', null, get, false)
        listener: beginTopLevelMethod(}, null, null)
        parseRecordType((, }, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(), topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        parseMethodTypeVar(get)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(get, get, false, MemberKind.TopLevelMethod)
          parseFormalParameters(get, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(x)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(sync, *)
          inPlainSync()
        parseFunctionBody(*, false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parseThrowExpression(=>, true)
                parseExpression(throw)
                  parsePrecedenceExpression(throw, 1, true)
                    parseUnaryExpression(throw, true)
                      parsePrimary(throw, expression)
                        parseLiteralString(throw)
                          parseSingleLiteralString(throw)
                            listener: beginLiteralString("hello")
                            listener: endLiteralString(0, ;)
                listener: handleThrowExpression(throw, ;)
            ensureSemicolon("hello")
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
            listener: handleInvalidStatement(=>, GeneratorReturnsValue)
        listener: endTopLevelMethod((, null, ;)
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(()
      parseTopLevelMethod(;, null, null, ;, Instance of 'ComplexTypeInfo', null, get, false)
        listener: beginTopLevelMethod(;, null, null)
        parseRecordType((, ;, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(), topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        parseMethodTypeVar(get)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(get, get, false, MemberKind.TopLevelMethod)
          parseFormalParameters(get, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(x)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(sync, *)
          inPlainSync()
        parseFunctionBody(*, false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, throw)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(throw)
                  parseExpressionStatement({)
                    parseExpression({)
                      parseThrowExpression({, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod((, null, })
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(()
      parseTopLevelMethod(}, null, null, }, Instance of 'ComplexTypeInfo', get, get, false)
        listener: beginTopLevelMethod(}, null, null)
        parseRecordType((, }, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(=>)
        parseGetterOrFormalParameters(get, get, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(=>, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(get)
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(get, false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true)
                parseUnaryExpression(=>, true)
                  parsePrimary(=>, expression)
                    parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=>)
                      parseParenthesizedExpressionOrRecordLiteral(=>, null)
                        listener: beginParenthesizedExpressionOrRecordLiteral(()
                        parseExpression(()
                          parsePrecedenceExpression((, 1, true)
                            parseUnaryExpression((, true)
                              parsePrimary((, expression)
                                parseLiteralInt(()
                                  listener: handleLiteralInt(42)
                        parseExpression(,)
                          parsePrecedenceExpression(,, 1, true)
                            parseUnaryExpression(,, true)
                              parsePrimary(,, expression)
                                parseLiteralString(,)
                                  parseSingleLiteralString(,)
                                    listener: beginLiteralString("fortytwo")
                                    listener: endLiteralString(0, ))
                        ensureCloseParen("fortytwo", ()
                        listener: endRecordLiteral((, 2, null)
            ensureSemicolon())
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod((, get, ;)
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(()
      parseTopLevelMethod(;, null, null, ;, Instance of 'ComplexTypeInfo', get, get, false)
        listener: beginTopLevelMethod(;, null, null)
        parseRecordType((, ;, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables({)
        parseGetterOrFormalParameters(get, get, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters({, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(get)
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(get, false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, return)
          parseStatement({)
            parseStatementX({)
              parseReturnStatement({)
                listener: beginReturnStatement(return)
                parseExpression(return)
                  parsePrecedenceExpression(return, 1, true)
                    parseUnaryExpression(return, true)
                      parsePrimary(return, expression)
                        parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(return)
                          parseParenthesizedExpressionOrRecordLiteral(return, null)
                            listener: beginParenthesizedExpressionOrRecordLiteral(()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true)
                                parseUnaryExpression((, true)
                                  parsePrimary((, expression)
                                    parseLiteralInt(()
                                      listener: handleLiteralInt(42)
                            parseExpression(,)
                              parsePrecedenceExpression(,, 1, true)
                                parseUnaryExpression(,, true)
                                  parsePrimary(,, expression)
                                    parseLiteralString(,)
                                      parseSingleLiteralString(,)
                                        listener: beginLiteralString("fortytwo")
                                        listener: endLiteralString(0, ))
                            ensureCloseParen("fortytwo", ()
                            listener: endRecordLiteral((, 2, null)
                ensureSemicolon())
                listener: endReturnStatement(true, return, ;)
                inGenerator()
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod((, get, })
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(()
      parseTopLevelMethod(}, null, null, }, Instance of 'ComplexTypeInfo', get, get, false)
        listener: beginTopLevelMethod(}, null, null)
        parseRecordType((, }, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(async)
        parseGetterOrFormalParameters(get, get, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(async, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(get)
          listener: handleAsyncModifier(async, null)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(async, false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parseThrowExpression(=>, true)
                parseExpression(throw)
                  parsePrecedenceExpression(throw, 1, true)
                    parseUnaryExpression(throw, true)
                      parsePrimary(throw, expression)
                        parseLiteralString(throw)
                          parseSingleLiteralString(throw)
                            listener: beginLiteralString("hello")
                            listener: endLiteralString(0, ;)
                listener: handleThrowExpression(throw, ;)
            ensureSemicolon("hello")
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod((, get, ;)
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(()
      parseTopLevelMethod(;, null, null, ;, Instance of 'ComplexTypeInfo', get, get, false)
        listener: beginTopLevelMethod(;, null, null)
        parseRecordType((, ;, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(async)
        parseGetterOrFormalParameters(get, get, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(async, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(get)
          listener: handleAsyncModifier(async, null)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(async, false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, throw)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(throw)
                  parseExpressionStatement({)
                    parseExpression({)
                      parseThrowExpression({, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod((, get, })
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(()
      parseTopLevelMethod(}, null, null, }, Instance of 'ComplexTypeInfo', get, get, false)
        listener: beginTopLevelMethod(}, null, null)
        parseRecordType((, }, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(async)
        parseGetterOrFormalParameters(get, get, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(async, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(get)
          listener: handleAsyncModifier(async, *)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(*, false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parseThrowExpression(=>, true)
                parseExpression(throw)
                  parsePrecedenceExpression(throw, 1, true)
                    parseUnaryExpression(throw, true)
                      parsePrimary(throw, expression)
                        parseLiteralString(throw)
                          parseSingleLiteralString(throw)
                            listener: beginLiteralString("hello")
                            listener: endLiteralString(0, ;)
                listener: handleThrowExpression(throw, ;)
            ensureSemicolon("hello")
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
            listener: handleInvalidStatement(=>, GeneratorReturnsValue)
        listener: endTopLevelMethod((, get, ;)
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(()
      parseTopLevelMethod(;, null, null, ;, Instance of 'ComplexTypeInfo', get, get, false)
        listener: beginTopLevelMethod(;, null, null)
        parseRecordType((, ;, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(async)
        parseGetterOrFormalParameters(get, get, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(async, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(get)
          listener: handleAsyncModifier(async, *)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(*, false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, throw)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(throw)
                  parseExpressionStatement({)
                    parseExpression({)
                      parseThrowExpression({, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod((, get, })
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(()
      parseTopLevelMethod(}, null, null, }, Instance of 'ComplexTypeInfo', get, get, false)
        listener: beginTopLevelMethod(}, null, null)
        parseRecordType((, }, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(sync)
        parseGetterOrFormalParameters(get, get, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(sync, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(get)
          listener: handleAsyncModifier(sync, *)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(*, false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parseThrowExpression(=>, true)
                parseExpression(throw)
                  parsePrecedenceExpression(throw, 1, true)
                    parseUnaryExpression(throw, true)
                      parsePrimary(throw, expression)
                        parseLiteralString(throw)
                          parseSingleLiteralString(throw)
                            listener: beginLiteralString("hello")
                            listener: endLiteralString(0, ;)
                listener: handleThrowExpression(throw, ;)
            ensureSemicolon("hello")
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
            listener: handleInvalidStatement(=>, GeneratorReturnsValue)
        listener: endTopLevelMethod((, get, ;)
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(()
      parseTopLevelMethod(;, null, null, ;, Instance of 'ComplexTypeInfo', get, get, false)
        listener: beginTopLevelMethod(;, null, null)
        parseRecordType((, ;, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(get, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(sync)
        parseGetterOrFormalParameters(get, get, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(sync, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(get)
          listener: handleAsyncModifier(sync, *)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(*, false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, throw)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(throw)
                  parseExpressionStatement({)
                    parseExpression({)
                      parseThrowExpression({, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod((, get, })
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(()
      parseTopLevelMethod(}, null, null, }, Instance of 'ComplexTypeInfo', get, topLevelGetter, false)
        listener: beginTopLevelMethod(}, null, null)
        parseRecordType((, }, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(topLevelGetter, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(=>)
        parseGetterOrFormalParameters(topLevelGetter, topLevelGetter, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(=>, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(topLevelGetter)
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(topLevelGetter, false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true)
                parseUnaryExpression(=>, true)
                  parsePrimary(=>, expression)
                    parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=>)
                      parseParenthesizedExpressionOrRecordLiteral(=>, null)
                        listener: beginParenthesizedExpressionOrRecordLiteral(()
                        parseExpression(()
                          parsePrecedenceExpression((, 1, true)
                            parseUnaryExpression((, true)
                              parsePrimary((, expression)
                                parseLiteralInt(()
                                  listener: handleLiteralInt(42)
                        parseExpression(,)
                          parsePrecedenceExpression(,, 1, true)
                            parseUnaryExpression(,, true)
                              parsePrimary(,, expression)
                                parseLiteralString(,)
                                  parseSingleLiteralString(,)
                                    listener: beginLiteralString("fortytwo")
                                    listener: endLiteralString(0, ))
                        ensureCloseParen("fortytwo", ()
                        listener: endRecordLiteral((, 2, null)
            ensureSemicolon())
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod((, get, ;)
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(()
      parseTopLevelMethod(;, null, null, ;, Instance of 'ComplexTypeInfo', get, topLevelGetter, false)
        listener: beginTopLevelMethod(;, null, null)
        parseRecordType((, ;, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(topLevelGetter, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables({)
        parseGetterOrFormalParameters(topLevelGetter, topLevelGetter, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters({, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(topLevelGetter)
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(topLevelGetter, false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, return)
          parseStatement({)
            parseStatementX({)
              parseReturnStatement({)
                listener: beginReturnStatement(return)
                parseExpression(return)
                  parsePrecedenceExpression(return, 1, true)
                    parseUnaryExpression(return, true)
                      parsePrimary(return, expression)
                        parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(return)
                          parseParenthesizedExpressionOrRecordLiteral(return, null)
                            listener: beginParenthesizedExpressionOrRecordLiteral(()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true)
                                parseUnaryExpression((, true)
                                  parsePrimary((, expression)
                                    parseLiteralInt(()
                                      listener: handleLiteralInt(42)
                            parseExpression(,)
                              parsePrecedenceExpression(,, 1, true)
                                parseUnaryExpression(,, true)
                                  parsePrimary(,, expression)
                                    parseLiteralString(,)
                                      parseSingleLiteralString(,)
                                        listener: beginLiteralString("fortytwo")
                                        listener: endLiteralString(0, ))
                            ensureCloseParen("fortytwo", ()
                            listener: endRecordLiteral((, 2, null)
                ensureSemicolon())
                listener: endReturnStatement(true, return, ;)
                inGenerator()
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod((, get, })
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(()
      parseTopLevelMethod(}, null, null, }, Instance of 'ComplexTypeInfo', get, topLevelGetter, false)
        listener: beginTopLevelMethod(}, null, null)
        parseRecordType((, }, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(topLevelGetter, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(async)
        parseGetterOrFormalParameters(topLevelGetter, topLevelGetter, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(async, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(topLevelGetter)
          listener: handleAsyncModifier(async, null)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(async, false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parseThrowExpression(=>, true)
                parseExpression(throw)
                  parsePrecedenceExpression(throw, 1, true)
                    parseUnaryExpression(throw, true)
                      parsePrimary(throw, expression)
                        parseLiteralString(throw)
                          parseSingleLiteralString(throw)
                            listener: beginLiteralString("hello")
                            listener: endLiteralString(0, ;)
                listener: handleThrowExpression(throw, ;)
            ensureSemicolon("hello")
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod((, get, ;)
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(()
      parseTopLevelMethod(;, null, null, ;, Instance of 'ComplexTypeInfo', get, topLevelGetter, false)
        listener: beginTopLevelMethod(;, null, null)
        parseRecordType((, ;, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(topLevelGetter, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(async)
        parseGetterOrFormalParameters(topLevelGetter, topLevelGetter, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(async, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(topLevelGetter)
          listener: handleAsyncModifier(async, null)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(async, false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, throw)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(throw)
                  parseExpressionStatement({)
                    parseExpression({)
                      parseThrowExpression({, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod((, get, })
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(()
      parseTopLevelMethod(}, null, null, }, Instance of 'ComplexTypeInfo', get, topLevelGetter, false)
        listener: beginTopLevelMethod(}, null, null)
        parseRecordType((, }, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(topLevelGetter, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(async)
        parseGetterOrFormalParameters(topLevelGetter, topLevelGetter, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(async, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(topLevelGetter)
          listener: handleAsyncModifier(async, *)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(*, false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parseThrowExpression(=>, true)
                parseExpression(throw)
                  parsePrecedenceExpression(throw, 1, true)
                    parseUnaryExpression(throw, true)
                      parsePrimary(throw, expression)
                        parseLiteralString(throw)
                          parseSingleLiteralString(throw)
                            listener: beginLiteralString("hello")
                            listener: endLiteralString(0, ;)
                listener: handleThrowExpression(throw, ;)
            ensureSemicolon("hello")
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
            listener: handleInvalidStatement(=>, GeneratorReturnsValue)
        listener: endTopLevelMethod((, get, ;)
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(()
      parseTopLevelMethod(;, null, null, ;, Instance of 'ComplexTypeInfo', get, topLevelGetter, false)
        listener: beginTopLevelMethod(;, null, null)
        parseRecordType((, ;, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(topLevelGetter, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(async)
        parseGetterOrFormalParameters(topLevelGetter, topLevelGetter, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(async, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(topLevelGetter)
          listener: handleAsyncModifier(async, *)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(*, false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, throw)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(throw)
                  parseExpressionStatement({)
                    parseExpression({)
                      parseThrowExpression({, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod((, get, })
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(()
      parseTopLevelMethod(}, null, null, }, Instance of 'ComplexTypeInfo', get, topLevelGetter, false)
        listener: beginTopLevelMethod(}, null, null)
        parseRecordType((, }, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(topLevelGetter, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(sync)
        parseGetterOrFormalParameters(topLevelGetter, topLevelGetter, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(sync, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(topLevelGetter)
          listener: handleAsyncModifier(sync, *)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(*, false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parseThrowExpression(=>, true)
                parseExpression(throw)
                  parsePrecedenceExpression(throw, 1, true)
                    parseUnaryExpression(throw, true)
                      parsePrimary(throw, expression)
                        parseLiteralString(throw)
                          parseSingleLiteralString(throw)
                            listener: beginLiteralString("hello")
                            listener: endLiteralString(0, ;)
                listener: handleThrowExpression(throw, ;)
            ensureSemicolon("hello")
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
            listener: handleInvalidStatement(=>, GeneratorReturnsValue)
        listener: endTopLevelMethod((, get, ;)
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(()
      parseTopLevelMethod(;, null, null, ;, Instance of 'ComplexTypeInfo', get, topLevelGetter, false)
        listener: beginTopLevelMethod(;, null, null)
        parseRecordType((, ;, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(a)
            listener: handleType(int, null)
            ensureIdentifier(int, recordFieldDeclaration)
              listener: handleIdentifier(a, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(String)
              listener: endMetadataStar(0)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(b)
            listener: handleType(String, null)
            ensureIdentifier(String, recordFieldDeclaration)
              listener: handleIdentifier(b, recordFieldDeclaration)
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(get, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(topLevelGetter, topLevelFunctionDeclaration)
        listener: handleNoTypeVariables(sync)
        parseGetterOrFormalParameters(topLevelGetter, topLevelGetter, true, MemberKind.TopLevelMethod)
          listener: handleNoFormalParameters(sync, MemberKind.TopLevelMethod)
        parseAsyncModifierOpt(topLevelGetter)
          listener: handleAsyncModifier(sync, *)
          inPlainSync()
        inPlainSync()
        parseFunctionBody(*, false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, throw)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(throw)
                  parseExpressionStatement({)
                    parseExpression({)
                      parseThrowExpression({, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod((, get, })
  listener: endTopLevelDeclaration(class)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, class, null, null, null, null, null, Instance of 'DirectiveContext')
      parseClassOrNamedMixinApplication(null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(Foo, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, Foo)
        parseClass(Foo, class, class, Foo)
          parseClassHeaderOpt(Foo, class, class)
            parseClassExtendsOpt(Foo)
              listener: handleNoType(Foo)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(Foo)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(Foo)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(Foo, DeclarationKind.Class, Foo)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, Foo)
              parseMetadataStar({)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod({, null, null, null, null, null, null, null, {, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, get)
                parseRecordType((, {, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(get, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parsePrecedenceExpression(=>, 1, true)
                        parseUnaryExpression(=>, true)
                          parsePrimary(=>, expression)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=>)
                              parseParenthesizedExpressionOrRecordLiteral(=>, null)
                                listener: beginParenthesizedExpressionOrRecordLiteral(()
                                parseExpression(()
                                  parsePrecedenceExpression((, 1, true)
                                    parseUnaryExpression((, true)
                                      parsePrimary((, expression)
                                        parseLiteralInt(()
                                          listener: handleLiteralInt(42)
                                parseExpression(,)
                                  parsePrecedenceExpression(,, 1, true)
                                    parseUnaryExpression(,, true)
                                      parsePrimary(,, expression)
                                        parseLiteralString(,)
                                          parseSingleLiteralString(,)
                                            listener: beginLiteralString("fortytwo")
                                            listener: endLiteralString(0, ))
                                ensureCloseParen("fortytwo", ()
                                listener: endRecordLiteral((, 2, null)
                    ensureSemicolon())
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(null, (, (, null, ;)
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, get)
                parseRecordType((, ;, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(get, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, return)
                  parseStatement({)
                    parseStatementX({)
                      parseReturnStatement({)
                        listener: beginReturnStatement(return)
                        parseExpression(return)
                          parsePrecedenceExpression(return, 1, true)
                            parseUnaryExpression(return, true)
                              parsePrimary(return, expression)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(return)
                                  parseParenthesizedExpressionOrRecordLiteral(return, null)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(42)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true)
                                        parseUnaryExpression(,, true)
                                          parsePrimary(,, expression)
                                            parseLiteralString(,)
                                              parseSingleLiteralString(,)
                                                listener: beginLiteralString("fortytwo")
                                                listener: endLiteralString(0, ))
                                    ensureCloseParen("fortytwo", ()
                                    listener: endRecordLiteral((, 2, null)
                        ensureSemicolon())
                        listener: endReturnStatement(true, return, ;)
                        inGenerator()
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(null, (, (, null, })
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, get)
                parseRecordType((, }, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(get, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(async, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(async, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(null, (, (, null, ;)
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, get)
                parseRecordType((, ;, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(get, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(async, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(async, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(null, (, (, null, })
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, get)
                parseRecordType((, }, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(get, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(async, *)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                    listener: handleInvalidStatement(=>, GeneratorReturnsValue)
                listener: endClassMethod(null, (, (, null, ;)
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, get)
                parseRecordType((, ;, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(get, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(async, *)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(null, (, (, null, })
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, get)
                parseRecordType((, }, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(get, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(sync, *)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                    listener: handleInvalidStatement(=>, GeneratorReturnsValue)
                listener: endClassMethod(null, (, (, null, ;)
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, get)
                parseRecordType((, ;, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(get, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(sync, *)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(null, (, (, null, })
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, get)
                parseRecordType((, }, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(=>)
                parseGetterOrFormalParameters(get, get, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(=>, MemberKind.NonStaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(get, false, true)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parsePrecedenceExpression(=>, 1, true)
                        parseUnaryExpression(=>, true)
                          parsePrimary(=>, expression)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=>)
                              parseParenthesizedExpressionOrRecordLiteral(=>, null)
                                listener: beginParenthesizedExpressionOrRecordLiteral(()
                                parseExpression(()
                                  parsePrecedenceExpression((, 1, true)
                                    parseUnaryExpression((, true)
                                      parsePrimary((, expression)
                                        parseLiteralInt(()
                                          listener: handleLiteralInt(42)
                                parseExpression(,)
                                  parsePrecedenceExpression(,, 1, true)
                                    parseUnaryExpression(,, true)
                                      parsePrimary(,, expression)
                                        parseLiteralString(,)
                                          parseSingleLiteralString(,)
                                            listener: beginLiteralString("fortytwo")
                                            listener: endLiteralString(0, ))
                                ensureCloseParen("fortytwo", ()
                                listener: endRecordLiteral((, 2, null)
                    ensureSemicolon())
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(get, (, =>, null, ;)
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, get)
                parseRecordType((, ;, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables({)
                parseGetterOrFormalParameters(get, get, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters({, MemberKind.NonStaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(get, false, true)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, return)
                  parseStatement({)
                    parseStatementX({)
                      parseReturnStatement({)
                        listener: beginReturnStatement(return)
                        parseExpression(return)
                          parsePrecedenceExpression(return, 1, true)
                            parseUnaryExpression(return, true)
                              parsePrimary(return, expression)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(return)
                                  parseParenthesizedExpressionOrRecordLiteral(return, null)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(42)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true)
                                        parseUnaryExpression(,, true)
                                          parsePrimary(,, expression)
                                            parseLiteralString(,)
                                              parseSingleLiteralString(,)
                                                listener: beginLiteralString("fortytwo")
                                                listener: endLiteralString(0, ))
                                    ensureCloseParen("fortytwo", ()
                                    listener: endRecordLiteral((, 2, null)
                        ensureSemicolon())
                        listener: endReturnStatement(true, return, ;)
                        inGenerator()
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, (, {, null, })
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, get)
                parseRecordType((, }, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(get, get, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.NonStaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(async, null)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(async, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(get, (, async, null, ;)
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, get)
                parseRecordType((, ;, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(get, get, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.NonStaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(async, null)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(async, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, (, async, null, })
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, get)
                parseRecordType((, }, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(get, get, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.NonStaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(async, *)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                    listener: handleInvalidStatement(=>, GeneratorReturnsValue)
                listener: endClassMethod(get, (, async, null, ;)
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, get)
                parseRecordType((, ;, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(get, get, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.NonStaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(async, *)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, (, async, null, })
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, get)
                parseRecordType((, }, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(sync)
                parseGetterOrFormalParameters(get, get, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(sync, MemberKind.NonStaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(sync, *)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                    listener: handleInvalidStatement(=>, GeneratorReturnsValue)
                listener: endClassMethod(get, (, sync, null, ;)
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, get)
                parseRecordType((, ;, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(sync)
                parseGetterOrFormalParameters(get, get, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(sync, MemberKind.NonStaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(sync, *)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, (, sync, null, })
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'ComplexTypeInfo', get, instanceGetter, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, instanceGetter)
                parseRecordType((, }, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(instanceGetter, methodDeclaration)
                parseQualifiedRestOpt(instanceGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(=>)
                parseGetterOrFormalParameters(instanceGetter, instanceGetter, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(=>, MemberKind.NonStaticMethod)
                parseInitializersOpt(instanceGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(instanceGetter)
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(instanceGetter, false, true)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parsePrecedenceExpression(=>, 1, true)
                        parseUnaryExpression(=>, true)
                          parsePrimary(=>, expression)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=>)
                              parseParenthesizedExpressionOrRecordLiteral(=>, null)
                                listener: beginParenthesizedExpressionOrRecordLiteral(()
                                parseExpression(()
                                  parsePrecedenceExpression((, 1, true)
                                    parseUnaryExpression((, true)
                                      parsePrimary((, expression)
                                        parseLiteralInt(()
                                          listener: handleLiteralInt(42)
                                parseExpression(,)
                                  parsePrecedenceExpression(,, 1, true)
                                    parseUnaryExpression(,, true)
                                      parsePrimary(,, expression)
                                        parseLiteralString(,)
                                          parseSingleLiteralString(,)
                                            listener: beginLiteralString("fortytwo")
                                            listener: endLiteralString(0, ))
                                ensureCloseParen("fortytwo", ()
                                listener: endRecordLiteral((, 2, null)
                    ensureSemicolon())
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(get, (, =>, null, ;)
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', get, instanceGetter, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, instanceGetter)
                parseRecordType((, ;, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(instanceGetter, methodDeclaration)
                parseQualifiedRestOpt(instanceGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables({)
                parseGetterOrFormalParameters(instanceGetter, instanceGetter, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters({, MemberKind.NonStaticMethod)
                parseInitializersOpt(instanceGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(instanceGetter)
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(instanceGetter, false, true)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, return)
                  parseStatement({)
                    parseStatementX({)
                      parseReturnStatement({)
                        listener: beginReturnStatement(return)
                        parseExpression(return)
                          parsePrecedenceExpression(return, 1, true)
                            parseUnaryExpression(return, true)
                              parsePrimary(return, expression)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(return)
                                  parseParenthesizedExpressionOrRecordLiteral(return, null)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(42)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true)
                                        parseUnaryExpression(,, true)
                                          parsePrimary(,, expression)
                                            parseLiteralString(,)
                                              parseSingleLiteralString(,)
                                                listener: beginLiteralString("fortytwo")
                                                listener: endLiteralString(0, ))
                                    ensureCloseParen("fortytwo", ()
                                    listener: endRecordLiteral((, 2, null)
                        ensureSemicolon())
                        listener: endReturnStatement(true, return, ;)
                        inGenerator()
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, (, {, null, })
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'ComplexTypeInfo', get, instanceGetter, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, instanceGetter)
                parseRecordType((, }, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(instanceGetter, methodDeclaration)
                parseQualifiedRestOpt(instanceGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(instanceGetter, instanceGetter, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.NonStaticMethod)
                parseInitializersOpt(instanceGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(instanceGetter)
                  listener: handleAsyncModifier(async, null)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(async, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(get, (, async, null, ;)
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', get, instanceGetter, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, instanceGetter)
                parseRecordType((, ;, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(instanceGetter, methodDeclaration)
                parseQualifiedRestOpt(instanceGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(instanceGetter, instanceGetter, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.NonStaticMethod)
                parseInitializersOpt(instanceGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(instanceGetter)
                  listener: handleAsyncModifier(async, null)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(async, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, return)
                  parseStatement({)
                    parseStatementX({)
                      parseReturnStatement({)
                        listener: beginReturnStatement(return)
                        parseExpression(return)
                          parseThrowExpression(return, true)
                            parseExpression(throw)
                              parsePrecedenceExpression(throw, 1, true)
                                parseUnaryExpression(throw, true)
                                  parsePrimary(throw, expression)
                                    parseLiteralString(throw)
                                      parseSingleLiteralString(throw)
                                        listener: beginLiteralString("hello")
                                        listener: endLiteralString(0, ;)
                            listener: handleThrowExpression(throw, ;)
                        ensureSemicolon("hello")
                        listener: endReturnStatement(true, return, ;)
                        inGenerator()
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, (, async, null, })
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'ComplexTypeInfo', get, instanceGetter, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, instanceGetter)
                parseRecordType((, }, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(instanceGetter, methodDeclaration)
                parseQualifiedRestOpt(instanceGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(instanceGetter, instanceGetter, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.NonStaticMethod)
                parseInitializersOpt(instanceGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(instanceGetter)
                  listener: handleAsyncModifier(async, *)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                    listener: handleInvalidStatement(=>, GeneratorReturnsValue)
                listener: endClassMethod(get, (, async, null, ;)
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', get, instanceGetter, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, instanceGetter)
                parseRecordType((, ;, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(instanceGetter, methodDeclaration)
                parseQualifiedRestOpt(instanceGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(instanceGetter, instanceGetter, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.NonStaticMethod)
                parseInitializersOpt(instanceGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(instanceGetter)
                  listener: handleAsyncModifier(async, *)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, return)
                  parseStatement({)
                    parseStatementX({)
                      parseReturnStatement({)
                        listener: beginReturnStatement(return)
                        parseExpression(return)
                          parseThrowExpression(return, true)
                            parseExpression(throw)
                              parsePrecedenceExpression(throw, 1, true)
                                parseUnaryExpression(throw, true)
                                  parsePrimary(throw, expression)
                                    parseLiteralString(throw)
                                      parseSingleLiteralString(throw)
                                        listener: beginLiteralString("hello")
                                        listener: endLiteralString(0, ;)
                            listener: handleThrowExpression(throw, ;)
                        ensureSemicolon("hello")
                        listener: endReturnStatement(true, return, ;)
                        inGenerator()
                        listener: handleInvalidStatement(return, GeneratorReturnsValue)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, (, async, null, })
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'ComplexTypeInfo', get, instanceGetter, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, instanceGetter)
                parseRecordType((, }, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(instanceGetter, methodDeclaration)
                parseQualifiedRestOpt(instanceGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(sync)
                parseGetterOrFormalParameters(instanceGetter, instanceGetter, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(sync, MemberKind.NonStaticMethod)
                parseInitializersOpt(instanceGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(instanceGetter)
                  listener: handleAsyncModifier(sync, *)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                    listener: handleInvalidStatement(=>, GeneratorReturnsValue)
                listener: endClassMethod(get, (, sync, null, ;)
              listener: endMember()
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', get, instanceGetter, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, get, instanceGetter)
                parseRecordType((, ;, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(instanceGetter, methodDeclaration)
                parseQualifiedRestOpt(instanceGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(sync)
                parseGetterOrFormalParameters(instanceGetter, instanceGetter, true, MemberKind.NonStaticMethod)
                  listener: handleNoFormalParameters(sync, MemberKind.NonStaticMethod)
                parseInitializersOpt(instanceGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(instanceGetter)
                  listener: handleAsyncModifier(sync, *)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, return)
                  parseStatement({)
                    parseStatementX({)
                      parseReturnStatement({)
                        listener: beginReturnStatement(return)
                        parseExpression(return)
                          parseThrowExpression(return, true)
                            parseExpression(throw)
                              parsePrecedenceExpression(throw, 1, true)
                                parseUnaryExpression(throw, true)
                                  parsePrimary(throw, expression)
                                    parseLiteralString(throw)
                                      parseSingleLiteralString(throw)
                                        listener: beginLiteralString("hello")
                                        listener: endLiteralString(0, ;)
                            listener: handleThrowExpression(throw, ;)
                        ensureSemicolon("hello")
                        listener: endReturnStatement(true, return, ;)
                        inGenerator()
                        listener: handleInvalidStatement(return, GeneratorReturnsValue)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, (, sync, null, })
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 24, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(class)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, class, null, null, null, null, null, Instance of 'DirectiveContext')
      parseClassOrNamedMixinApplication(null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(Bar, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, Bar)
        parseClass(Bar, class, class, Bar)
          parseClassHeaderOpt(Bar, class, class)
            parseClassExtendsOpt(Bar)
              listener: handleNoType(Bar)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(Bar)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(Bar)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(Bar, DeclarationKind.Class, Bar)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, Bar)
              parseMetadataStar({)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod({, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, null, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.StaticMethod)
                  parseFormalParameters(get, MemberKind.StaticMethod)
                    parseFormalParametersRest((, MemberKind.StaticMethod)
                      listener: beginFormalParameters((, MemberKind.StaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.StaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.StaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                parseFunctionBody(), false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parsePrecedenceExpression(=>, 1, true)
                        parseUnaryExpression(=>, true)
                          parsePrimary(=>, expression)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=>)
                              parseParenthesizedExpressionOrRecordLiteral(=>, null)
                                listener: beginParenthesizedExpressionOrRecordLiteral(()
                                parseExpression(()
                                  parsePrecedenceExpression((, 1, true)
                                    parseUnaryExpression((, true)
                                      parsePrimary((, expression)
                                        parseLiteralInt(()
                                          listener: handleLiteralInt(42)
                                parseExpression(,)
                                  parsePrecedenceExpression(,, 1, true)
                                    parseUnaryExpression(,, true)
                                      parsePrimary(,, expression)
                                        parseLiteralString(,)
                                          parseSingleLiteralString(,)
                                            listener: beginLiteralString("fortytwo")
                                            listener: endLiteralString(0, ))
                                ensureCloseParen("fortytwo", ()
                                listener: endRecordLiteral((, 2, null)
                    ensureSemicolon())
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(null, static, (, null, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Bar)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, null, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.StaticMethod)
                  parseFormalParameters(get, MemberKind.StaticMethod)
                    parseFormalParametersRest((, MemberKind.StaticMethod)
                      listener: beginFormalParameters((, MemberKind.StaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.StaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.StaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                parseFunctionBody(), false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, return)
                  parseStatement({)
                    parseStatementX({)
                      parseReturnStatement({)
                        listener: beginReturnStatement(return)
                        parseExpression(return)
                          parsePrecedenceExpression(return, 1, true)
                            parseUnaryExpression(return, true)
                              parsePrimary(return, expression)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(return)
                                  parseParenthesizedExpressionOrRecordLiteral(return, null)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(42)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true)
                                        parseUnaryExpression(,, true)
                                          parsePrimary(,, expression)
                                            parseLiteralString(,)
                                              parseSingleLiteralString(,)
                                                listener: beginLiteralString("fortytwo")
                                                listener: endLiteralString(0, ))
                                    ensureCloseParen("fortytwo", ()
                                    listener: endRecordLiteral((, 2, null)
                        ensureSemicolon())
                        listener: endReturnStatement(true, return, ;)
                        inGenerator()
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(null, static, (, null, })
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Bar)
              parseMetadataStar(})
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(}, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, null, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.StaticMethod)
                  parseFormalParameters(get, MemberKind.StaticMethod)
                    parseFormalParametersRest((, MemberKind.StaticMethod)
                      listener: beginFormalParameters((, MemberKind.StaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.StaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.StaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(async, null)
                  inPlainSync()
                parseFunctionBody(async, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(null, static, (, null, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Bar)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, null, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.StaticMethod)
                  parseFormalParameters(get, MemberKind.StaticMethod)
                    parseFormalParametersRest((, MemberKind.StaticMethod)
                      listener: beginFormalParameters((, MemberKind.StaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.StaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.StaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(async, null)
                  inPlainSync()
                parseFunctionBody(async, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(null, static, (, null, })
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Bar)
              parseMetadataStar(})
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(}, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, null, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.StaticMethod)
                  parseFormalParameters(get, MemberKind.StaticMethod)
                    parseFormalParametersRest((, MemberKind.StaticMethod)
                      listener: beginFormalParameters((, MemberKind.StaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.StaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.StaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(async, *)
                  inPlainSync()
                parseFunctionBody(*, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                    listener: handleInvalidStatement(=>, GeneratorReturnsValue)
                listener: endClassMethod(null, static, (, null, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Bar)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, null, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.StaticMethod)
                  parseFormalParameters(get, MemberKind.StaticMethod)
                    parseFormalParametersRest((, MemberKind.StaticMethod)
                      listener: beginFormalParameters((, MemberKind.StaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.StaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.StaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(async, *)
                  inPlainSync()
                parseFunctionBody(*, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(null, static, (, null, })
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Bar)
              parseMetadataStar(})
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(}, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, null, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.StaticMethod)
                  parseFormalParameters(get, MemberKind.StaticMethod)
                    parseFormalParametersRest((, MemberKind.StaticMethod)
                      listener: beginFormalParameters((, MemberKind.StaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.StaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.StaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(sync, *)
                  inPlainSync()
                parseFunctionBody(*, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                    listener: handleInvalidStatement(=>, GeneratorReturnsValue)
                listener: endClassMethod(null, static, (, null, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Bar)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', null, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, null, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                parseMethodTypeVar(get)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(get, get, false, MemberKind.StaticMethod)
                  parseFormalParameters(get, MemberKind.StaticMethod)
                    parseFormalParametersRest((, MemberKind.StaticMethod)
                      listener: beginFormalParameters((, MemberKind.StaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.StaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.StaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.StaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(sync, *)
                  inPlainSync()
                parseFunctionBody(*, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(null, static, (, null, })
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Bar)
              parseMetadataStar(})
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(=>)
                parseGetterOrFormalParameters(get, get, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(=>, MemberKind.StaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(get, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parsePrecedenceExpression(=>, 1, true)
                        parseUnaryExpression(=>, true)
                          parsePrimary(=>, expression)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=>)
                              parseParenthesizedExpressionOrRecordLiteral(=>, null)
                                listener: beginParenthesizedExpressionOrRecordLiteral(()
                                parseExpression(()
                                  parsePrecedenceExpression((, 1, true)
                                    parseUnaryExpression((, true)
                                      parsePrimary((, expression)
                                        parseLiteralInt(()
                                          listener: handleLiteralInt(42)
                                parseExpression(,)
                                  parsePrecedenceExpression(,, 1, true)
                                    parseUnaryExpression(,, true)
                                      parsePrimary(,, expression)
                                        parseLiteralString(,)
                                          parseSingleLiteralString(,)
                                            listener: beginLiteralString("fortytwo")
                                            listener: endLiteralString(0, ))
                                ensureCloseParen("fortytwo", ()
                                listener: endRecordLiteral((, 2, null)
                    ensureSemicolon())
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(get, static, =>, null, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Bar)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables({)
                parseGetterOrFormalParameters(get, get, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters({, MemberKind.StaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(get, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, return)
                  parseStatement({)
                    parseStatementX({)
                      parseReturnStatement({)
                        listener: beginReturnStatement(return)
                        parseExpression(return)
                          parsePrecedenceExpression(return, 1, true)
                            parseUnaryExpression(return, true)
                              parsePrimary(return, expression)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(return)
                                  parseParenthesizedExpressionOrRecordLiteral(return, null)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(42)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true)
                                        parseUnaryExpression(,, true)
                                          parsePrimary(,, expression)
                                            parseLiteralString(,)
                                              parseSingleLiteralString(,)
                                                listener: beginLiteralString("fortytwo")
                                                listener: endLiteralString(0, ))
                                    ensureCloseParen("fortytwo", ()
                                    listener: endRecordLiteral((, 2, null)
                        ensureSemicolon())
                        listener: endReturnStatement(true, return, ;)
                        inGenerator()
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, static, {, null, })
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Bar)
              parseMetadataStar(})
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(get, get, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.StaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(async, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(async, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(get, static, async, null, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Bar)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(get, get, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.StaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(async, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(async, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, static, async, null, })
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Bar)
              parseMetadataStar(})
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(get, get, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.StaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(async, *)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                    listener: handleInvalidStatement(=>, GeneratorReturnsValue)
                listener: endClassMethod(get, static, async, null, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Bar)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(get, get, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.StaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(async, *)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, static, async, null, })
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Bar)
              parseMetadataStar(})
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(sync)
                parseGetterOrFormalParameters(get, get, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(sync, MemberKind.StaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(sync, *)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                    listener: handleInvalidStatement(=>, GeneratorReturnsValue)
                listener: endClassMethod(get, static, sync, null, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Bar)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, get, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, get)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(get, methodDeclaration)
                parseQualifiedRestOpt(get, methodDeclarationContinuation)
                listener: handleNoTypeVariables(sync)
                parseGetterOrFormalParameters(get, get, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(sync, MemberKind.StaticMethod)
                parseInitializersOpt(get)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(get)
                  listener: handleAsyncModifier(sync, *)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, static, sync, null, })
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Bar)
              parseMetadataStar(})
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, staticGetter, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, staticGetter)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(staticGetter, methodDeclaration)
                parseQualifiedRestOpt(staticGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(=>)
                parseGetterOrFormalParameters(staticGetter, staticGetter, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(=>, MemberKind.StaticMethod)
                parseInitializersOpt(staticGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(staticGetter)
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(staticGetter, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parsePrecedenceExpression(=>, 1, true)
                        parseUnaryExpression(=>, true)
                          parsePrimary(=>, expression)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=>)
                              parseParenthesizedExpressionOrRecordLiteral(=>, null)
                                listener: beginParenthesizedExpressionOrRecordLiteral(()
                                parseExpression(()
                                  parsePrecedenceExpression((, 1, true)
                                    parseUnaryExpression((, true)
                                      parsePrimary((, expression)
                                        parseLiteralInt(()
                                          listener: handleLiteralInt(42)
                                parseExpression(,)
                                  parsePrecedenceExpression(,, 1, true)
                                    parseUnaryExpression(,, true)
                                      parsePrimary(,, expression)
                                        parseLiteralString(,)
                                          parseSingleLiteralString(,)
                                            listener: beginLiteralString("fortytwo")
                                            listener: endLiteralString(0, ))
                                ensureCloseParen("fortytwo", ()
                                listener: endRecordLiteral((, 2, null)
                    ensureSemicolon())
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(get, static, =>, null, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Bar)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, staticGetter, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, staticGetter)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(staticGetter, methodDeclaration)
                parseQualifiedRestOpt(staticGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables({)
                parseGetterOrFormalParameters(staticGetter, staticGetter, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters({, MemberKind.StaticMethod)
                parseInitializersOpt(staticGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(staticGetter)
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(staticGetter, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, return)
                  parseStatement({)
                    parseStatementX({)
                      parseReturnStatement({)
                        listener: beginReturnStatement(return)
                        parseExpression(return)
                          parsePrecedenceExpression(return, 1, true)
                            parseUnaryExpression(return, true)
                              parsePrimary(return, expression)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(return)
                                  parseParenthesizedExpressionOrRecordLiteral(return, null)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(42)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true)
                                        parseUnaryExpression(,, true)
                                          parsePrimary(,, expression)
                                            parseLiteralString(,)
                                              parseSingleLiteralString(,)
                                                listener: beginLiteralString("fortytwo")
                                                listener: endLiteralString(0, ))
                                    ensureCloseParen("fortytwo", ()
                                    listener: endRecordLiteral((, 2, null)
                        ensureSemicolon())
                        listener: endReturnStatement(true, return, ;)
                        inGenerator()
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, static, {, null, })
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Bar)
              parseMetadataStar(})
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, staticGetter, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, staticGetter)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(staticGetter, methodDeclaration)
                parseQualifiedRestOpt(staticGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(staticGetter, staticGetter, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.StaticMethod)
                parseInitializersOpt(staticGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(staticGetter)
                  listener: handleAsyncModifier(async, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(async, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(get, static, async, null, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Bar)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, staticGetter, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, staticGetter)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(staticGetter, methodDeclaration)
                parseQualifiedRestOpt(staticGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(staticGetter, staticGetter, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.StaticMethod)
                parseInitializersOpt(staticGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(staticGetter)
                  listener: handleAsyncModifier(async, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(async, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, static, async, null, })
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Bar)
              parseMetadataStar(})
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, staticGetter, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, staticGetter)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(staticGetter, methodDeclaration)
                parseQualifiedRestOpt(staticGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(staticGetter, staticGetter, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.StaticMethod)
                parseInitializersOpt(staticGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(staticGetter)
                  listener: handleAsyncModifier(async, *)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                    listener: handleInvalidStatement(=>, GeneratorReturnsValue)
                listener: endClassMethod(get, static, async, null, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Bar)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, staticGetter, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, staticGetter)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(staticGetter, methodDeclaration)
                parseQualifiedRestOpt(staticGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(async)
                parseGetterOrFormalParameters(staticGetter, staticGetter, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(async, MemberKind.StaticMethod)
                parseInitializersOpt(staticGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(staticGetter)
                  listener: handleAsyncModifier(async, *)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, static, async, null, })
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Bar)
              parseMetadataStar(})
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, staticGetter, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, staticGetter)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(staticGetter, methodDeclaration)
                parseQualifiedRestOpt(staticGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(sync)
                parseGetterOrFormalParameters(staticGetter, staticGetter, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(sync, MemberKind.StaticMethod)
                parseInitializersOpt(staticGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(staticGetter)
                  listener: handleAsyncModifier(sync, *)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parseThrowExpression(=>, true)
                        parseExpression(throw)
                          parsePrecedenceExpression(throw, 1, true)
                            parseUnaryExpression(throw, true)
                              parsePrimary(throw, expression)
                                parseLiteralString(throw)
                                  parseSingleLiteralString(throw)
                                    listener: beginLiteralString("hello")
                                    listener: endLiteralString(0, ;)
                        listener: handleThrowExpression(throw, ;)
                    ensureSemicolon("hello")
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                    listener: handleInvalidStatement(=>, GeneratorReturnsValue)
                listener: endClassMethod(get, static, sync, null, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Bar)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', get, staticGetter, DeclarationKind.Class, Bar, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, get, staticGetter)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(String)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(String, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(String, null)
                    ensureIdentifier(String, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(staticGetter, methodDeclaration)
                parseQualifiedRestOpt(staticGetter, methodDeclarationContinuation)
                listener: handleNoTypeVariables(sync)
                parseGetterOrFormalParameters(staticGetter, staticGetter, true, MemberKind.StaticMethod)
                  listener: handleNoFormalParameters(sync, MemberKind.StaticMethod)
                parseInitializersOpt(staticGetter)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(staticGetter)
                  listener: handleAsyncModifier(sync, *)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(*, false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, throw)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                          looksLikeLocalFunction(throw)
                          parseExpressionStatement({)
                            parseExpression({)
                              parseThrowExpression({, true)
                                parseExpression(throw)
                                  parsePrecedenceExpression(throw, 1, true)
                                    parseUnaryExpression(throw, true)
                                      parsePrimary(throw, expression)
                                        parseLiteralString(throw)
                                          parseSingleLiteralString(throw)
                                            listener: beginLiteralString("hello")
                                            listener: endLiteralString(0, ;)
                                listener: handleThrowExpression(throw, ;)
                            ensureSemicolon("hello")
                            listener: handleExpressionStatement(;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(get, static, sync, null, })
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 24, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(()
  listener: endCompilationUnit(26, )
