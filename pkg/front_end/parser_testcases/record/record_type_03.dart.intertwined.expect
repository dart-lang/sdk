parseUnit(()
  skipErrorTokens(()
  listener: beginCompilationUnit(()
  syntheticPreviousToken(()
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(()
      parseTopLevelMethod(, null, null, , Instance of 'ComplexTypeInfo', null, foo, false)
        listener: beginTopLevelMethod(, null, null)
        parseRecordType((, , false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(,)
            listener: handleType(int, null)
            listener: handleNoName(,)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments())
            listener: handleType(int, null)
            listener: handleNoName())
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(), topLevelFunctionDeclaration, false)
          listener: handleIdentifier(foo, topLevelFunctionDeclaration)
        parseMethodTypeVar(foo)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(foo, foo, false, MemberKind.TopLevelMethod)
          parseFormalParameters(foo, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                listener: beginFormalParameter((, MemberKind.TopLevelMethod, null, null, null)
                parseRecordType((, (, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(,)
                    listener: handleType(int, null)
                    listener: handleNoName(,)
                    listener: endRecordTypeEntry()
                  parseRecordTypeNamedFields(,)
                    listener: beginRecordTypeNamedFields({)
                    parseRecordTypeField({, identifierIsOptional: false)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar({)
                        listener: beginMetadataStar(bool)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(bool, typeReference)
                      listener: handleNoTypeArguments(b)
                      listener: handleType(bool, null)
                      ensureIdentifier(bool, recordFieldDeclaration)
                        listener: handleIdentifier(b, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    listener: endRecordTypeNamedFields(1, {)
                  ensureCloseParen(}, ()
                  listener: endRecordType((, null, 2, true)
                ensureIdentifier(), formalParameterDeclaration)
                  listener: handleIdentifier(inputRecord, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, inputRecord, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(x)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(2, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, if)
          parseStatement({)
            parseStatementX({)
              parseIfStatement({)
                listener: beginIfStatement(if)
                ensureParenthesizedCondition(if, allowCase: false)
                  parseExpressionInParenthesisRest((, allowCase: false)
                    parseExpression(()
                      parsePrecedenceExpression((, 1, true)
                        parseUnaryExpression((, true)
                          parsePrimary((, expression)
                            parseSendOrFunctionLiteral((, expression)
                              parseSend((, expression)
                                isNextIdentifier(()
                                ensureIdentifier((, expression)
                                  listener: handleIdentifier(inputRecord, expression)
                                listener: handleNoTypeArguments(.)
                                parseArgumentsOpt(inputRecord)
                                  listener: handleNoArguments(.)
                                listener: handleSend(inputRecord, .)
                        parsePrimary(., expressionContinuation)
                          parseSendOrFunctionLiteral(., expressionContinuation)
                            parseSend(., expressionContinuation)
                              isNextIdentifier(.)
                              ensureIdentifier(., expressionContinuation)
                                listener: handleIdentifier(b, expressionContinuation)
                              listener: handleNoTypeArguments())
                              parseArgumentsOpt(b)
                                listener: handleNoArguments())
                              listener: handleSend(b, ))
                        listener: handleEndingBinaryExpression(.)
                    ensureCloseParen(b, ()
                    listener: handleParenthesizedCondition((, null, null)
                listener: beginThenStatement(return)
                parseStatement())
                  parseStatementX())
                    parseReturnStatement())
                      listener: beginReturnStatement(return)
                      parseExpression(return)
                        parsePrecedenceExpression(return, 1, true)
                          parseUnaryExpression(return, true)
                            parsePrimary(return, expression)
                              parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(return)
                                parseParenthesizedExpressionOrRecordLiteral(return, null)
                                  listener: beginParenthesizedExpressionOrRecordLiteral(()
                                  parseExpression(()
                                    parsePrecedenceExpression((, 1, true)
                                      parseUnaryExpression((, true)
                                        parsePrimary((, expression)
                                          parseLiteralInt(()
                                            listener: handleLiteralInt(42)
                                  parseExpression(,)
                                    parsePrecedenceExpression(,, 1, true)
                                      parseUnaryExpression(,, true)
                                        parsePrimary(,, expression)
                                          parseLiteralInt(,)
                                            listener: handleLiteralInt(42)
                                  ensureCloseParen(42, ()
                                  listener: endRecordLiteral((, 2, null)
                      ensureSemicolon())
                      listener: endReturnStatement(true, return, ;)
                      inGenerator()
                listener: endThenStatement(;)
                listener: endIfStatement(if, null)
          notEofOrValue(}, return)
          parseStatement(;)
            parseStatementX(;)
              parseReturnStatement(;)
                listener: beginReturnStatement(return)
                parseExpression(return)
                  parsePrecedenceExpression(return, 1, true)
                    parseUnaryExpression(return, true)
                      parsePrimary(return, expression)
                        parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(return)
                          parseParenthesizedExpressionOrRecordLiteral(return, null)
                            listener: beginParenthesizedExpressionOrRecordLiteral(()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true)
                                parseUnaryExpression((, true)
                                  parsePrimary((, expression)
                                    parseLiteralInt(()
                                      listener: handleLiteralInt(1)
                            parseExpression(,)
                              parsePrecedenceExpression(,, 1, true)
                                parseUnaryExpression(,, true)
                                  parsePrimary(,, expression)
                                    parseLiteralInt(,)
                                      listener: handleLiteralInt(1)
                            ensureCloseParen(,, ()
                            listener: endRecordLiteral((, 2, null)
                ensureSemicolon())
                listener: endReturnStatement(true, return, ;)
                inGenerator()
          notEofOrValue(}, })
          listener: endBlockFunctionBody(2, {, })
        listener: endTopLevelMethod((, null, })
  listener: endTopLevelDeclaration(()
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(()
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(()
      parseTopLevelMethod(}, null, null, }, Instance of 'ComplexTypeInfo', null, bar, false)
        listener: beginTopLevelMethod(}, null, null)
        parseRecordType((, }, false)
          listener: beginRecordType(()
          parseRecordTypeField((, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(()
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments(,)
            listener: handleType(int, null)
            listener: handleNoName(,)
            listener: endRecordTypeEntry()
          parseRecordTypeField(,, identifierIsOptional: true)
            listener: beginRecordTypeEntry()
            parseMetadataStar(,)
              listener: beginMetadataStar(int)
              listener: endMetadataStar(0)
            listener: handleIdentifier(int, typeReference)
            listener: handleNoTypeArguments())
            listener: handleType(int, null)
            listener: handleNoName())
            listener: endRecordTypeEntry()
          listener: endRecordType((, null, 2, false)
        ensureIdentifierPotentiallyRecovered(), topLevelFunctionDeclaration, false)
          listener: handleIdentifier(bar, topLevelFunctionDeclaration)
        parseMethodTypeVar(bar)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(bar, bar, false, MemberKind.TopLevelMethod)
          parseFormalParameters(bar, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                listener: beginFormalParameter((, MemberKind.TopLevelMethod, null, null, null)
                parseRecordType((, (, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(,)
                    listener: handleType(int, null)
                    listener: handleNoName(,)
                    listener: endRecordTypeEntry()
                  parseRecordTypeNamedFields(,)
                    listener: beginRecordTypeNamedFields({)
                    parseRecordTypeField({, identifierIsOptional: false)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar({)
                        listener: beginMetadataStar(bool)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(bool, typeReference)
                      listener: handleNoTypeArguments(b)
                      listener: handleType(bool, null)
                      ensureIdentifier(bool, recordFieldDeclaration)
                        listener: handleIdentifier(b, recordFieldDeclaration)
                      listener: endRecordTypeEntry()
                    listener: endRecordTypeNamedFields(1, {)
                  ensureCloseParen(}, ()
                  listener: endRecordType((, null, 2, true)
                ensureIdentifier(), formalParameterDeclaration)
                  listener: handleIdentifier(inputRecord, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, inputRecord, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, if)
          parseStatement({)
            parseStatementX({)
              parseIfStatement({)
                listener: beginIfStatement(if)
                ensureParenthesizedCondition(if, allowCase: false)
                  parseExpressionInParenthesisRest((, allowCase: false)
                    parseExpression(()
                      parsePrecedenceExpression((, 1, true)
                        parseUnaryExpression((, true)
                          parsePrimary((, expression)
                            parseSendOrFunctionLiteral((, expression)
                              parseSend((, expression)
                                isNextIdentifier(()
                                ensureIdentifier((, expression)
                                  listener: handleIdentifier(inputRecord, expression)
                                listener: handleNoTypeArguments(.)
                                parseArgumentsOpt(inputRecord)
                                  listener: handleNoArguments(.)
                                listener: handleSend(inputRecord, .)
                        parsePrimary(., expressionContinuation)
                          parseSendOrFunctionLiteral(., expressionContinuation)
                            parseSend(., expressionContinuation)
                              isNextIdentifier(.)
                              ensureIdentifier(., expressionContinuation)
                                listener: handleIdentifier(b, expressionContinuation)
                              listener: handleNoTypeArguments())
                              parseArgumentsOpt(b)
                                listener: handleNoArguments())
                              listener: handleSend(b, ))
                        listener: handleEndingBinaryExpression(.)
                    ensureCloseParen(b, ()
                    listener: handleParenthesizedCondition((, null, null)
                listener: beginThenStatement(return)
                parseStatement())
                  parseStatementX())
                    parseReturnStatement())
                      listener: beginReturnStatement(return)
                      parseExpression(return)
                        parsePrecedenceExpression(return, 1, true)
                          parseUnaryExpression(return, true)
                            parsePrimary(return, expression)
                              parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(return)
                                parseParenthesizedExpressionOrRecordLiteral(return, null)
                                  listener: beginParenthesizedExpressionOrRecordLiteral(()
                                  parseExpression(()
                                    parsePrecedenceExpression((, 1, true)
                                      parseUnaryExpression((, true)
                                        parsePrimary((, expression)
                                          parseLiteralInt(()
                                            listener: handleLiteralInt(42)
                                  parseExpression(,)
                                    parsePrecedenceExpression(,, 1, true)
                                      parseUnaryExpression(,, true)
                                        parsePrimary(,, expression)
                                          parseLiteralInt(,)
                                            listener: handleLiteralInt(42)
                                  ensureCloseParen(42, ()
                                  listener: endRecordLiteral((, 2, null)
                      ensureSemicolon())
                      listener: endReturnStatement(true, return, ;)
                      inGenerator()
                listener: endThenStatement(;)
                listener: endIfStatement(if, null)
          notEofOrValue(}, return)
          parseStatement(;)
            parseStatementX(;)
              parseReturnStatement(;)
                listener: beginReturnStatement(return)
                parseExpression(return)
                  parsePrecedenceExpression(return, 1, true)
                    parseUnaryExpression(return, true)
                      parsePrimary(return, expression)
                        parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(return)
                          parseParenthesizedExpressionOrRecordLiteral(return, null)
                            listener: beginParenthesizedExpressionOrRecordLiteral(()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true)
                                parseUnaryExpression((, true)
                                  parsePrimary((, expression)
                                    parseLiteralInt(()
                                      listener: handleLiteralInt(1)
                            parseExpression(,)
                              parsePrecedenceExpression(,, 1, true)
                                parseUnaryExpression(,, true)
                                  parsePrimary(,, expression)
                                    parseLiteralInt(,)
                                      listener: handleLiteralInt(1)
                            ensureCloseParen(,, ()
                            listener: endRecordLiteral((, 2, null)
                ensureSemicolon())
                listener: endReturnStatement(true, return, ;)
                inGenerator()
          notEofOrValue(}, })
          listener: endBlockFunctionBody(2, {, })
        listener: endTopLevelMethod((, null, })
  listener: endTopLevelDeclaration(class)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(}, class, null, null, null, null, null, Instance of 'DirectiveContext')
      parseClassOrNamedMixinApplication(null, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(Baz, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, Baz)
        parseClass(Baz, class, class, Baz)
          parseClassHeaderOpt(Baz, class, class)
            parseClassExtendsOpt(Baz)
              listener: handleNoType(Baz)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(Baz)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(Baz)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(Baz, DeclarationKind.Class, Baz)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, ()
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, Baz)
              parseMetadataStar({)
                listener: beginMetadataStar(()
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod({, null, null, null, null, null, null, null, {, Instance of 'ComplexTypeInfo', null, foo, DeclarationKind.Class, Baz, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, foo)
                parseRecordType((, {, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(,)
                    listener: handleType(int, null)
                    listener: handleNoName(,)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments())
                    listener: handleType(int, null)
                    listener: handleNoName())
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), methodDeclaration, false)
                  listener: handleIdentifier(foo, methodDeclaration)
                parseQualifiedRestOpt(foo, methodDeclarationContinuation)
                parseMethodTypeVar(foo)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(foo, foo, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(foo, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(x)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(x, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parsePrecedenceExpression(=>, 1, true)
                        parseUnaryExpression(=>, true)
                          parsePrimary(=>, expression)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=>)
                              parseParenthesizedExpressionOrRecordLiteral(=>, null)
                                listener: beginParenthesizedExpressionOrRecordLiteral(()
                                parseExpression(()
                                  parsePrecedenceExpression((, 1, true)
                                    parseUnaryExpression((, true)
                                      parsePrimary((, expression)
                                        parseLiteralInt(()
                                          listener: handleLiteralInt(42)
                                parseExpression(,)
                                  parsePrecedenceExpression(,, 1, true)
                                    parseUnaryExpression(,, true)
                                      parsePrimary(,, expression)
                                        parseLiteralInt(,)
                                          listener: handleLiteralInt(42)
                                ensureCloseParen(42, ()
                                listener: endRecordLiteral((, 2, null)
                    ensureSemicolon())
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(null, (, (, null, ;)
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 1, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(()
  listener: endCompilationUnit(3, )
