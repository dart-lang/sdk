parseUnit(class)
  skipErrorTokens(class)
  listener: beginCompilationUnit(class)
  syntheticPreviousToken(class)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, class, null, null, null, null, null, Instance of 'DirectiveContext')
      parseClassOrNamedMixinApplication(null, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(Foo, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, Foo)
        parseClass(Foo, class, class, Foo)
          parseClassHeaderOpt(Foo, class, class)
            parseClassExtendsOpt(Foo)
              listener: handleNoType(Foo)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(Foo)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(Foo)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(Foo, DeclarationKind.Class, Foo)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, final)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, Foo)
              parseMetadataStar({)
                listener: beginMetadataStar(final)
                listener: endMetadataStar(0)
              listener: beginMember()
              skipOuterPattern(final)
              parseFields({, null, null, null, null, null, null, final, final, Instance of 'ComplexTypeInfo', x, DeclarationKind.Class, Foo, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, null, null, null, final, {)
                parseRecordType((, final, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), fieldDeclaration, false)
                  listener: handleIdentifier(x, fieldDeclaration)
                parseFieldInitializerOpt(x, x, null, null, null, null, final, DeclarationKind.Class, Foo)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              parseExpression(()
                                parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression((, true, ConstantPatternContext.none)
                                    parsePrimary((, expression, ConstantPatternContext.none)
                                      parseLiteralInt(()
                                        listener: handleLiteralInt(42)
                              parseExpression(,)
                                parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(,, true, ConstantPatternContext.none)
                                    parsePrimary(,, expression, ConstantPatternContext.none)
                                      parseLiteralInt(,)
                                        listener: handleLiteralInt(42)
                              ensureCloseParen(42, ()
                              listener: endRecordLiteral((, 2, null)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, null, null, final, 1, final, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, static, null, null, null, static, Instance of 'ComplexTypeInfo', y, DeclarationKind.Class, Foo, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, static, null, null, null, ;)
                parseRecordType((, static, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), fieldDeclaration, false)
                  listener: handleIdentifier(y, fieldDeclaration)
                parseFieldInitializerOpt(y, y, null, null, null, null, null, DeclarationKind.Class, Foo)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              parseExpression(()
                                parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression((, true, ConstantPatternContext.none)
                                    parsePrimary((, expression, ConstantPatternContext.none)
                                      parseLiteralInt(()
                                        listener: handleLiteralInt(42)
                              parseExpression(,)
                                parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(,, true, ConstantPatternContext.none)
                                    parsePrimary(,, expression, ConstantPatternContext.none)
                                      parseLiteralInt(,)
                                        listener: handleLiteralInt(42)
                              ensureCloseParen(42, ()
                              listener: endRecordLiteral((, 2, null)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, static, null, null, null, 1, static, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              skipOuterPattern(final)
              parseFields(;, null, null, null, static, null, null, final, final, Instance of 'ComplexTypeInfo', z, DeclarationKind.Class, Foo, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, static, null, null, final, ;)
                parseRecordType((, final, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), fieldDeclaration, false)
                  listener: handleIdentifier(z, fieldDeclaration)
                parseFieldInitializerOpt(z, z, null, null, null, null, final, DeclarationKind.Class, Foo)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              parseExpression(()
                                parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression((, true, ConstantPatternContext.none)
                                    parsePrimary((, expression, ConstantPatternContext.none)
                                      parseLiteralInt(()
                                        listener: handleLiteralInt(42)
                              parseExpression(,)
                                parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(,, true, ConstantPatternContext.none)
                                    parsePrimary(,, expression, ConstantPatternContext.none)
                                      parseLiteralInt(,)
                                        listener: handleLiteralInt(42)
                              ensureCloseParen(42, ()
                              listener: endRecordLiteral((, 2, null)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, static, null, null, final, 1, static, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              skipOuterPattern(const)
              parseFields(;, null, null, null, static, null, null, const, const, Instance of 'ComplexTypeInfo', b, DeclarationKind.Class, Foo, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, static, null, null, const, ;)
                parseRecordType((, const, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), fieldDeclaration, false)
                  listener: handleIdentifier(b, fieldDeclaration)
                parseFieldInitializerOpt(b, b, null, null, null, null, const, DeclarationKind.Class, Foo)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                            parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                              listener: beginParenthesizedExpressionOrRecordLiteral(()
                              parseExpression(()
                                parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression((, true, ConstantPatternContext.none)
                                    parsePrimary((, expression, ConstantPatternContext.none)
                                      parseLiteralInt(()
                                        listener: handleLiteralInt(42)
                              parseExpression(,)
                                parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(,, true, ConstantPatternContext.none)
                                    parsePrimary(,, expression, ConstantPatternContext.none)
                                      parseLiteralInt(,)
                                        listener: handleLiteralInt(42)
                              ensureCloseParen(42, ()
                              listener: endRecordLiteral((, 2, null)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, static, null, null, const, 1, static, ;)
              listener: endMember()
            notEofOrValue(}, late)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(late)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, late, null, late, Instance of 'ComplexTypeInfo', c, DeclarationKind.Class, Foo, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, null, null, late, null, ;)
                parseRecordType((, late, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), fieldDeclaration, false)
                  listener: handleIdentifier(c, fieldDeclaration)
                parseFieldInitializerOpt(c, c, late, null, null, null, null, DeclarationKind.Class, Foo)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, null, null, null, late, null, 1, late, ;)
              listener: endMember()
            notEofOrValue(}, late)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(late)
                listener: endMetadataStar(0)
              listener: beginMember()
              skipOuterPattern(final)
              parseFields(;, null, null, null, null, null, late, final, final, Instance of 'ComplexTypeInfo', d, DeclarationKind.Class, Foo, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, null, null, late, final, ;)
                parseRecordType((, final, false)
                  listener: beginRecordType(()
                  parseRecordTypeField((, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(()
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(a)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(a, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  parseRecordTypeField(,, identifierIsOptional: true)
                    listener: beginRecordTypeEntry()
                    parseMetadataStar(,)
                      listener: beginMetadataStar(int)
                      listener: endMetadataStar(0)
                    listener: handleIdentifier(int, typeReference)
                    listener: handleNoTypeArguments(b)
                    listener: handleType(int, null)
                    ensureIdentifier(int, recordFieldDeclaration)
                      listener: handleIdentifier(b, recordFieldDeclaration)
                    listener: endRecordTypeEntry()
                  listener: endRecordType((, null, 2, false)
                ensureIdentifierPotentiallyRecovered(), fieldDeclaration, false)
                  listener: handleIdentifier(d, fieldDeclaration)
                parseFieldInitializerOpt(d, d, late, null, null, null, final, DeclarationKind.Class, Foo)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, null, null, null, late, final, 1, late, ;)
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 6, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(class)
  listener: endCompilationUnit(1, )
