parseUnit(Object)
  skipErrorTokens(Object)
  listener: beginCompilationUnit(Object)
  syntheticPreviousToken(Object)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(Object)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(Object)
      parseTopLevelMethod(, null, null, , SimpleType(), null, bar, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleIdentifier(Object, typeReference)
        listener: handleNoTypeArguments(bar)
        listener: handleType(Object, null)
        ensureIdentifierPotentiallyRecovered(Object, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(bar, topLevelFunctionDeclaration)
        parseMethodTypeVar(bar)
          listener: beginTypeVariables(<)
          parseMetadataStar(<)
            listener: beginMetadataStar(T1)
            listener: endMetadataStar(0)
          ensureIdentifier(<, typeVariableDeclaration)
            listener: handleIdentifier(T1, typeVariableDeclaration)
          listener: beginTypeVariable(T1)
          parseMetadataStar(,)
            listener: beginMetadataStar(T2)
            listener: endMetadataStar(0)
          ensureIdentifier(,, typeVariableDeclaration)
            listener: handleIdentifier(T2, typeVariableDeclaration)
          listener: beginTypeVariable(T2)
          listener: handleTypeVariablesDefined(T2, 2)
          listener: handleNoType(T2)
          listener: endTypeVariable(>, 1, null, null)
          listener: handleNoType(T1)
          listener: endTypeVariable(,, 0, null, null)
          listener: endTypeVariables(<, >)
        parseGetterOrFormalParameters(>, bar, false, MemberKind.TopLevelMethod)
          parseFormalParameters(>, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(T1)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(T1, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(T1, typeReference)
                listener: handleNoTypeArguments(t1)
                listener: handleType(T1, null)
                ensureIdentifier(T1, formalParameterDeclaration)
                  listener: handleIdentifier(t1, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, null, t1, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(T2)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(T2, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(T2, typeReference)
                listener: handleNoTypeArguments(t2)
                listener: handleType(T2, null)
                ensureIdentifier(T2, formalParameterDeclaration)
                  listener: handleIdentifier(t2, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, null, t2, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(2, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    parseLiteralInt(=>)
                      listener: handleLiteralInt(42)
            ensureSemicolon(42)
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(Object, null, ;)
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(main)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(main)
      isReservedKeyword(()
      parseTopLevelMethod(;, null, null, ;, NoType(), null, main, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrType(CLOSE_CURLY_BRACKET, Function)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(f2)
                  listener: beginMetadataStar(Function)
                  listener: endMetadataStar(0)
                  listener: handleIdentifier(Function, typeReference)
                  listener: handleNoTypeArguments(f2)
                  listener: handleType(Function, null)
                  listener: beginVariablesDeclaration(f2, null, null)
                  parseVariablesDeclarationRest(Function, true)
                    parseOptionallyInitializedIdentifier(Function)
                      ensureIdentifier(Function, localVariableDeclaration)
                        listener: handleIdentifier(f2, localVariableDeclaration)
                      listener: beginInitializedIdentifier(f2)
                      parseVariableInitializerOpt(f2)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(=, expression, ConstantPatternContext.none)
                                  parseSend(=, expression, ConstantPatternContext.none)
                                    ensureIdentifier(=, expression)
                                      listener: handleIdentifier(bar, expression)
                                    listener: handleNoTypeArguments(;)
                                    parseArgumentsOpt(bar)
                                      listener: handleNoArguments(;)
                                    listener: handleSend(bar, bar)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(f2)
                    ensureSemicolon(bar)
                    listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, f2)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(f2)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(;, true, ConstantPatternContext.none)
                        parsePrimary(;, expression, ConstantPatternContext.none)
                          parseSendOrFunctionLiteral(;, expression, ConstantPatternContext.none)
                            parseSend(;, expression, ConstantPatternContext.none)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(f2, expression)
                              listener: handleNoTypeArguments(!)
                              parseArgumentsOpt(f2)
                                listener: handleNoArguments(!)
                              listener: handleSend(f2, f2)
                      listener: handleNonNullAssertExpression(!)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(int, null)
                      listener: handleIdentifier(String, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(String, null)
                      listener: endTypeArguments(2, <, >)
                      parseArgumentOrIndexStar(>, ComplexTypeParamOrArgInfo(start: <, inDeclaration: false, allowsVariance: false, typeArgumentCount: 2, skipEnd: >, recovered: false), false)
                        parseArguments(>)
                          parseArgumentsRest(()
                            listener: beginArguments(()
                            allowedToShortcutParseExpression()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                parseUnaryExpression((, true, ConstantPatternContext.none)
                                  parsePrimary((, expression, ConstantPatternContext.none)
                                    parseLiteralInt(()
                                      listener: handleLiteralInt(42)
                            allowedToShortcutParseExpression()
                            listener: beginLiteralString("42")
                            listener: endLiteralString(0, ))
                            listener: endArguments(2, (, ))
                        listener: handleSend((, ))
                  ensureSemicolon())
                  listener: handleExpressionStatement(f2, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, })
          listener: endBlockFunctionBody(2, {, })
        listener: endTopLevelMethod(main, null, })
  listener: endTopLevelDeclaration(})
  reportAllErrorTokens(Object)
  listener: endCompilationUnit(2, )
