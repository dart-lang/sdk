parseUnit(Object)
  skipErrorTokens(Object)
  listener: beginCompilationUnit(Object)
  syntheticPreviousToken(Object)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(Object)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(Object)
      parseTopLevelMethod(, null, , Instance of 'SimpleNullableType', null, foo, false)
        listener: beginTopLevelMethod(, null)
        listener: handleIdentifier(Object, typeReference)
        listener: handleNoTypeArguments(?)
        listener: handleType(Object, ?)
        ensureIdentifierPotentiallyRecovered(?, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(foo, topLevelFunctionDeclaration)
        parseMethodTypeVar(foo)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(foo, foo, false, MemberKind.TopLevelMethod)
          parseFormalParameters(foo, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.mandatory, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  listener: handleIdentifier(i, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, i, null, null, FormalParameterKind.mandatory, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true)
                parseUnaryExpression(=>, true)
                  parsePrimary(=>, expression)
                    parseLiteralString(=>)
                      parseSingleLiteralString(=>)
                        listener: beginLiteralString("42")
                        listener: endLiteralString(0, ;)
            ensureSemicolon("42")
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(Object, null, ;)
  listener: endTopLevelDeclaration(Object)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(Object)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(Object)
      parseTopLevelMethod(;, null, ;, Instance of 'SimpleNullableType', null, bar, false)
        listener: beginTopLevelMethod(;, null)
        listener: handleIdentifier(Object, typeReference)
        listener: handleNoTypeArguments(?)
        listener: handleType(Object, ?)
        ensureIdentifierPotentiallyRecovered(?, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(bar, topLevelFunctionDeclaration)
        parseMethodTypeVar(bar)
          listener: beginTypeVariables(<)
          listener: beginMetadataStar(T)
          listener: endMetadataStar(0)
          listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(T, 1)
          listener: handleNoType(T)
          listener: endTypeVariable(>, 0, null, null)
          listener: endTypeVariables(<, >)
        parseGetterOrFormalParameters(>, bar, false, MemberKind.TopLevelMethod)
          parseFormalParameters(>, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.mandatory, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(T)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(T, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(T, typeReference)
                listener: handleNoTypeArguments(t)
                listener: handleType(T, null)
                ensureIdentifier(T, formalParameterDeclaration)
                  listener: handleIdentifier(t, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, t, null, null, FormalParameterKind.mandatory, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true)
                parseUnaryExpression(=>, true)
                  parsePrimary(=>, expression)
                    parseLiteralInt(=>)
                      listener: handleLiteralInt(42)
            ensureSemicolon(42)
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(Object, null, ;)
  listener: endTopLevelDeclaration(main)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(main)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(main)
      isReservedKeyword(()
      parseTopLevelMethod(;, null, ;, Instance of 'NoType', null, main, false)
        listener: beginTopLevelMethod(;, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, Function)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, false)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, false)
                  looksLikeLocalFunction(f1)
                  parseExpressionWithoutCascade(=)
                    parsePrecedenceExpression(=, 1, false)
                      parseUnaryExpression(=, false)
                        parsePrimary(=, expression)
                          parseSendOrFunctionLiteral(=, expression)
                            parseSend(=, expression)
                              isNextIdentifier(=)
                              ensureIdentifier(=, expression)
                              parseArgumentsOpt(foo)
                  listener: beginMetadataStar(Function)
                  listener: endMetadataStar(0)
                  listener: handleIdentifier(Function, typeReference)
                  listener: handleNoTypeArguments(?)
                  listener: handleType(Function, ?)
                  listener: beginVariablesDeclaration(f1, null, null)
                  parseVariablesDeclarationRest(?, true)
                    parseOptionallyInitializedIdentifier(?)
                      ensureIdentifier(?, localVariableDeclaration)
                        listener: handleIdentifier(f1, localVariableDeclaration)
                      listener: beginInitializedIdentifier(f1)
                      parseVariableInitializerOpt(f1)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true)
                            parseUnaryExpression(=, true)
                              parsePrimary(=, expression)
                                parseSendOrFunctionLiteral(=, expression)
                                  parseSend(=, expression)
                                    isNextIdentifier(=)
                                    ensureIdentifier(=, expression)
                                      listener: handleIdentifier(foo, expression)
                                    listener: handleNoTypeArguments(;)
                                    parseArgumentsOpt(foo)
                                      listener: handleNoArguments(;)
                                    listener: handleSend(foo, ;)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(f1)
                    ensureSemicolon(foo)
                    listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, f1)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, false)
                looksLikeLocalFunction(f1)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true)
                      parseUnaryExpression(;, true)
                        parsePrimary(;, expression)
                          parseSendOrFunctionLiteral(;, expression)
                            parseSend(;, expression)
                              isNextIdentifier(;)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(f1, expression)
                              listener: handleNoTypeArguments(!)
                              parseArgumentsOpt(f1)
                                listener: handleNoArguments(!)
                              listener: handleSend(f1, !)
                      listener: handleNonNullAssertExpression(!)
                      parseArgumentOrIndexStar(!, Instance of 'NoTypeParamOrArg', false)
                        listener: handleNoTypeArguments(()
                        parseArguments(!)
                          parseArgumentsRest(()
                            listener: beginArguments(()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true)
                                parseUnaryExpression((, true)
                                  parsePrimary((, expression)
                                    parseLiteralInt(()
                                      listener: handleLiteralInt(42)
                            listener: endArguments(1, (, ))
                        listener: handleSend((, ))
                  ensureSemicolon())
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, Function)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, false)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, false)
                  looksLikeLocalFunction(f2)
                  listener: beginMetadataStar(Function)
                  listener: endMetadataStar(0)
                  listener: handleIdentifier(Function, typeReference)
                  listener: handleNoTypeArguments(f2)
                  listener: handleType(Function, null)
                  listener: beginVariablesDeclaration(f2, null, null)
                  parseVariablesDeclarationRest(Function, true)
                    parseOptionallyInitializedIdentifier(Function)
                      ensureIdentifier(Function, localVariableDeclaration)
                        listener: handleIdentifier(f2, localVariableDeclaration)
                      listener: beginInitializedIdentifier(f2)
                      parseVariableInitializerOpt(f2)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true)
                            parseUnaryExpression(=, true)
                              parsePrimary(=, expression)
                                parseSendOrFunctionLiteral(=, expression)
                                  parseSend(=, expression)
                                    isNextIdentifier(=)
                                    ensureIdentifier(=, expression)
                                      listener: handleIdentifier(bar, expression)
                                    listener: handleNoTypeArguments(;)
                                    parseArgumentsOpt(bar)
                                      listener: handleNoArguments(;)
                                    listener: handleSend(bar, ;)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(f2)
                    ensureSemicolon(bar)
                    listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, false)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, false)
                  looksLikeLocalFunction(()
                  parseExpressionStatement(;)
                    parseExpression(;)
                      parsePrecedenceExpression(;, 1, true)
                        parseUnaryExpression(;, true)
                          parsePrimary(;, expression)
                            parseParenthesizedExpressionOrFunctionLiteral(;)
                              parseParenthesizedExpression(;)
                                parseExpressionInParenthesis(;)
                                  parseExpressionInParenthesisRest(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseSendOrFunctionLiteral((, expression)
                                              parseSend((, expression)
                                                isNextIdentifier(()
                                                ensureIdentifier((, expression)
                                                  listener: handleIdentifier(f2, expression)
                                                listener: handleNoTypeArguments(!)
                                                parseArgumentsOpt(f2)
                                                  listener: handleNoArguments(!)
                                                listener: handleSend(f2, !)
                                        listener: handleNonNullAssertExpression(!)
                                    ensureCloseParen(!, ()
                                listener: handleParenthesizedExpression(()
                        listener: beginTypeArguments(<)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(>)
                        listener: handleType(int, null)
                        listener: endTypeArguments(1, <, >)
                        parseArgumentOrIndexStar(>, Instance of 'SimpleTypeArgument1', false)
                          parseArguments(>)
                            parseArgumentsRest(()
                              listener: beginArguments(()
                              parseExpression(()
                                parsePrecedenceExpression((, 1, true)
                                  parseUnaryExpression((, true)
                                    parsePrimary((, expression)
                                      parseLiteralInt(()
                                        listener: handleLiteralInt(42)
                              listener: endArguments(1, (, ))
                          listener: handleSend((, ))
                    ensureSemicolon())
                    listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(4, {, })
        listener: endTopLevelMethod(main, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(Object)
  listener: endCompilationUnit(3, )
