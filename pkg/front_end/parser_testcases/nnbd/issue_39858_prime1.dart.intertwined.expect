parseUnit(class)
  skipErrorTokens(class)
  listener: beginCompilationUnit(class)
  syntheticPreviousToken(class)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, class, null, null, null, null, null, Instance of 'DirectiveContext')
      parseClassOrNamedMixinApplication(null, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(X, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, X)
        parseClass(X, class, class, X)
          parseClassHeaderOpt(X, class, class)
            parseClassExtendsOpt(X)
              listener: handleNoType(X)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(X)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(X)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(X, DeclarationKind.Class, X)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, var)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, X)
              parseMetadataStar({)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
              listener: beginMember()
              skipOuterPattern(var)
                skipObjectPatternRest(x1)
              parseFields({, null, null, null, null, null, null, var, var, Instance of 'NoType', x1, DeclarationKind.Class, X, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, null, null, null, var, {)
                listener: handleNoType(var)
                ensureIdentifierPotentiallyRecovered(var, fieldDeclaration, false)
                  listener: handleIdentifier(x1, fieldDeclaration)
                parseFieldInitializerOpt(x1, x1, null, null, null, null, var, DeclarationKind.Class, X)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, null, null, null, null, var, 1, var, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, X)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              skipOuterPattern(var)
                skipObjectPatternRest(x2)
              parseFields(;, null, null, null, static, null, null, var, var, Instance of 'NoType', x2, DeclarationKind.Class, X, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, static, null, null, var, ;)
                listener: handleNoType(var)
                ensureIdentifierPotentiallyRecovered(var, fieldDeclaration, false)
                  listener: handleIdentifier(x2, fieldDeclaration)
                parseFieldInitializerOpt(x2, x2, null, null, null, null, var, DeclarationKind.Class, X)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, null, static, null, null, var, 1, static, ;)
              listener: endMember()
            notEofOrValue(}, covariant)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, X)
              parseMetadataStar(;)
                listener: beginMetadataStar(covariant)
                listener: endMetadataStar(0)
              listener: beginMember()
              skipOuterPattern(var)
                skipObjectPatternRest(x3)
              parseFields(;, null, null, null, null, covariant, null, var, var, Instance of 'NoType', x3, DeclarationKind.Class, X, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, null, covariant, null, var, ;)
                listener: handleNoType(var)
                ensureIdentifierPotentiallyRecovered(var, fieldDeclaration, false)
                  listener: handleIdentifier(x3, fieldDeclaration)
                parseFieldInitializerOpt(x3, x3, null, null, null, null, var, DeclarationKind.Class, X)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, null, null, covariant, null, var, 1, covariant, ;)
              listener: endMember()
            notEofOrValue(}, var)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, X)
              parseMetadataStar(;)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
              listener: beginMember()
              skipOuterPattern(var)
                skipObjectPatternRest(x4)
              parseFields(;, null, null, null, null, null, null, var, var, Instance of 'NoType', x4, DeclarationKind.Class, X, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, null, null, null, var, ;)
                listener: handleNoType(var)
                ensureIdentifierPotentiallyRecovered(var, fieldDeclaration, false)
                  listener: handleIdentifier(x4, fieldDeclaration)
                parseFieldInitializerOpt(x4, x4, null, null, null, null, var, DeclarationKind.Class, X)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(0)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, null, null, var, 1, var, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, X)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              skipOuterPattern(var)
                skipObjectPatternRest(x5)
              parseFields(;, null, null, null, static, null, null, var, var, Instance of 'NoType', x5, DeclarationKind.Class, X, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, static, null, null, var, ;)
                listener: handleNoType(var)
                ensureIdentifierPotentiallyRecovered(var, fieldDeclaration, false)
                  listener: handleIdentifier(x5, fieldDeclaration)
                parseFieldInitializerOpt(x5, x5, null, null, null, null, var, DeclarationKind.Class, X)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(0)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, static, null, null, var, 1, static, ;)
              listener: endMember()
            notEofOrValue(}, covariant)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, X)
              parseMetadataStar(;)
                listener: beginMetadataStar(covariant)
                listener: endMetadataStar(0)
              listener: beginMember()
              skipOuterPattern(var)
                skipObjectPatternRest(x6)
              parseFields(;, null, null, null, null, covariant, null, var, var, Instance of 'NoType', x6, DeclarationKind.Class, X, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, null, covariant, null, var, ;)
                listener: handleNoType(var)
                ensureIdentifierPotentiallyRecovered(var, fieldDeclaration, false)
                  listener: handleIdentifier(x6, fieldDeclaration)
                parseFieldInitializerOpt(x6, x6, null, null, null, null, var, DeclarationKind.Class, X)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(=, true, ConstantPatternContext.none)
                        parsePrimary(=, expression, ConstantPatternContext.none)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(0)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, covariant, null, var, 1, covariant, ;)
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 6, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(class)
  listener: endCompilationUnit(1, )
