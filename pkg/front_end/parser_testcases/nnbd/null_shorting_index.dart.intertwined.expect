parseUnit(class)
  skipErrorTokens(class)
  listener: beginCompilationUnit(class)
  syntheticPreviousToken(class)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, class, null, null, null, null, null, Instance of 'DirectiveContext')
      parseClassOrNamedMixinApplication(null, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(Class1, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, Class1)
        parseClass(Class1, class, class, Class1)
          parseClassHeaderOpt(Class1, class, class)
            parseClassExtendsOpt(Class1)
              listener: handleNoType(Class1)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(Class1)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(Class1)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(Class1, DeclarationKind.Class, Class1)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, Class1)
              parseMetadataStar({)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod({, null, null, null, null, null, null, null, {, Instance of 'SimpleType', null, operator, DeclarationKind.Class, Class1, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, operator)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(operator)
                listener: handleType(int, null)
                parseOperatorName(int)
                  listener: handleOperatorName(operator, [])
                parseMethodTypeVar([])
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters([], operator, false, MemberKind.NonStaticMethod)
                  parseFormalParameters([], MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(index)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(index, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, index, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parsePrecedenceExpression(=>, 1, true)
                        parseUnaryExpression(=>, true)
                          parsePrimary(=>, expression)
                            parseSendOrFunctionLiteral(=>, expression)
                              parseSend(=>, expression)
                                isNextIdentifier(=>)
                                ensureIdentifier(=>, expression)
                                  listener: handleIdentifier(index, expression)
                                listener: handleNoTypeArguments(;)
                                parseArgumentsOpt(index)
                                  listener: handleNoArguments(;)
                                listener: handleSend(index, ;)
                    ensureSemicolon(index)
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endClassMethod(null, int, (, null, ;)
              listener: endMember()
            notEofOrValue(}, void)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Class1)
              parseMetadataStar(;)
                listener: beginMetadataStar(void)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'VoidType', null, operator, DeclarationKind.Class, Class1, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, operator)
                listener: handleVoidKeyword(void)
                parseOperatorName(void)
                  listener: handleOperatorName(operator, []=)
                parseMethodTypeVar([]=)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters([]=, operator, false, MemberKind.NonStaticMethod)
                  parseFormalParameters([]=, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(index)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(index, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue(,)
                        listener: endFormalParameter(null, null, null, index, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(,)
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(value)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(value, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, value, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(2, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(0, {, })
                listener: endClassMethod(null, void, (, null, })
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 2, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(main)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(main)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(main)
      isReservedKeyword(()
      parseTopLevelMethod(}, null, null, }, Instance of 'NoType', null, main, false)
        listener: beginTopLevelMethod(}, null, null)
        listener: handleNoType(})
        ensureIdentifierPotentiallyRecovered(}, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, Class1)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                looksLikeLocalFunction(c1)
                listener: beginMetadataStar(Class1)
                listener: endMetadataStar(0)
                listener: handleIdentifier(Class1, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(Class1, ?)
                listener: beginVariablesDeclaration(c1, null, null)
                parseVariablesDeclarationRest(?, true)
                  parseOptionallyInitializedIdentifier(?)
                    ensureIdentifier(?, localVariableDeclaration)
                      listener: handleIdentifier(c1, localVariableDeclaration)
                    listener: beginInitializedIdentifier(c1)
                    parseVariableInitializerOpt(c1)
                      listener: handleNoVariableInitializer(c1)
                    listener: endInitializedIdentifier(c1)
                  ensureSemicolon(c1)
                  listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, c1)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(c1)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true)
                      parseUnaryExpression(;, true)
                        parsePrimary(;, expression)
                          parseSendOrFunctionLiteral(;, expression)
                            parseSend(;, expression)
                              isNextIdentifier(;)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(c1, expression)
                              listener: handleNoTypeArguments(?.)
                              parseArgumentsOpt(c1)
                                listener: handleNoArguments(?.)
                              listener: handleSend(c1, ?.)
                      parsePrimary(?., expressionContinuation)
                        listener: handleNoTypeArguments([)
                        parseLiteralListSuffix(?., null)
                          parseExpression([)
                            parsePrecedenceExpression([, 1, true)
                              parseUnaryExpression([, true)
                                parsePrimary([, expression)
                                  parseLiteralInt([)
                                    listener: handleLiteralInt(0)
                          listener: handleLiteralList(1, [, null, ])
                      listener: handleEndingBinaryExpression(?.)
                  ensureSemicolon(])
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, c1)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(c1)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true)
                      parseUnaryExpression(;, true)
                        parsePrimary(;, expression)
                          parseSendOrFunctionLiteral(;, expression)
                            parseSend(;, expression)
                              isNextIdentifier(;)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(c1, expression)
                              listener: handleNoTypeArguments(?.)
                              parseArgumentsOpt(c1)
                                listener: handleNoArguments(?.)
                              listener: handleSend(c1, ?.)
                      parsePrimary(?., expressionContinuation)
                        listener: handleNoTypeArguments([)
                        parseLiteralListSuffix(?., null)
                          parseExpression([)
                            parsePrecedenceExpression([, 1, true)
                              parseUnaryExpression([, true)
                                parsePrimary([, expression)
                                  parseLiteralInt([)
                                    listener: handleLiteralInt(0)
                          listener: handleLiteralList(1, [, null, ])
                      listener: handleEndingBinaryExpression(?.)
                      parsePrecedenceExpression(=, 1, true)
                        parseUnaryExpression(=, true)
                          parsePrimary(=, expression)
                            parseLiteralInt(=)
                              listener: handleLiteralInt(1)
                      listener: handleAssignmentExpression(=)
                  ensureSemicolon(1)
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, c1)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(c1)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true)
                      parseUnaryExpression(;, true)
                        parsePrimary(;, expression)
                          parseSendOrFunctionLiteral(;, expression)
                            parseSend(;, expression)
                              isNextIdentifier(;)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(c1, expression)
                              listener: handleNoTypeArguments(?)
                              parseArgumentsOpt(c1)
                                listener: handleNoArguments(?)
                              listener: handleSend(c1, ?)
                      canParseAsConditional(?)
                        parseExpressionWithoutCascade(?)
                          parsePrecedenceExpression(?, 1, false)
                            parseUnaryExpression(?, false)
                              parsePrimary(?, expression)
                                parseLiteralListSuffix(?, null)
                                  parseExpression([)
                                    parsePrecedenceExpression([, 1, true)
                                      parseUnaryExpression([, true)
                                        parsePrimary([, expression)
                                          parseLiteralInt([)
                      parseArgumentOrIndexStar(c1, Instance of 'NoTypeParamOrArg', true)
                        parseExpression([)
                          parsePrecedenceExpression([, 1, true)
                            parseUnaryExpression([, true)
                              parsePrimary([, expression)
                                parseLiteralInt([)
                                  listener: handleLiteralInt(0)
                        listener: handleIndexedExpression(?, [, ])
                  ensureSemicolon(])
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, c1)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(c1)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true)
                      parseUnaryExpression(;, true)
                        parsePrimary(;, expression)
                          parseSendOrFunctionLiteral(;, expression)
                            parseSend(;, expression)
                              isNextIdentifier(;)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(c1, expression)
                              listener: handleNoTypeArguments(?)
                              parseArgumentsOpt(c1)
                                listener: handleNoArguments(?)
                              listener: handleSend(c1, ?)
                      canParseAsConditional(?)
                        parseExpressionWithoutCascade(?)
                          parsePrecedenceExpression(?, 1, false)
                            parseUnaryExpression(?, false)
                              parsePrimary(?, expression)
                                parseLiteralListSuffix(?, null)
                                  parseExpression([)
                                    parsePrecedenceExpression([, 1, true)
                                      parseUnaryExpression([, true)
                                        parsePrimary([, expression)
                                          parseLiteralInt([)
                            parsePrecedenceExpression(=, 1, false)
                              parseUnaryExpression(=, false)
                                parsePrimary(=, expression)
                                  parseLiteralInt(=)
                      parseArgumentOrIndexStar(c1, Instance of 'NoTypeParamOrArg', true)
                        parseExpression([)
                          parsePrecedenceExpression([, 1, true)
                            parseUnaryExpression([, true)
                              parsePrimary([, expression)
                                parseLiteralInt([)
                                  listener: handleLiteralInt(0)
                        listener: handleIndexedExpression(?, [, ])
                      parsePrecedenceExpression(=, 1, true)
                        parseUnaryExpression(=, true)
                          parsePrimary(=, expression)
                            parseLiteralInt(=)
                              listener: handleLiteralInt(1)
                      listener: handleAssignmentExpression(=)
                  ensureSemicolon(1)
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, c1)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(c1)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true)
                      parseUnaryExpression(;, true)
                        parsePrimary(;, expression)
                          parseSendOrFunctionLiteral(;, expression)
                            parseSend(;, expression)
                              isNextIdentifier(;)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(c1, expression)
                              listener: handleNoTypeArguments(?)
                              parseArgumentsOpt(c1)
                                listener: handleNoArguments(?)
                              listener: handleSend(c1, ?)
                      canParseAsConditional(?)
                        parseExpressionWithoutCascade(?)
                          parsePrecedenceExpression(?, 1, false)
                            parseUnaryExpression(?, false)
                              parsePrimary(?, expression)
                                parseLiteralListSuffix(?, null)
                                  parseExpression([)
                                    parsePrecedenceExpression([, 1, true)
                                      parseUnaryExpression([, true)
                                        parsePrimary([, expression)
                                          parseLiteralInt([)
                      parseArgumentOrIndexStar(c1, Instance of 'NoTypeParamOrArg', true)
                        parseExpression([)
                          parsePrecedenceExpression([, 1, true)
                            parseUnaryExpression([, true)
                              parsePrimary([, expression)
                                parseLiteralInt([)
                                  listener: handleLiteralInt(0)
                        listener: handleIndexedExpression(?, [, ])
                  ensureSemicolon(])
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, c1)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(c1)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true)
                      parseUnaryExpression(;, true)
                        parsePrimary(;, expression)
                          parseSendOrFunctionLiteral(;, expression)
                            parseSend(;, expression)
                              isNextIdentifier(;)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(c1, expression)
                              listener: handleNoTypeArguments(?)
                              parseArgumentsOpt(c1)
                                listener: handleNoArguments(?)
                              listener: handleSend(c1, ?)
                      canParseAsConditional(?)
                        parseExpressionWithoutCascade(?)
                          parsePrecedenceExpression(?, 1, false)
                            parseUnaryExpression(?, false)
                              parsePrimary(?, expression)
                                parseLiteralListSuffix(?, null)
                                  parseExpression([)
                                    parsePrecedenceExpression([, 1, true)
                                      parseUnaryExpression([, true)
                                        parsePrimary([, expression)
                                          parseLiteralInt([)
                            parsePrecedenceExpression(=, 1, false)
                              parseUnaryExpression(=, false)
                                parsePrimary(=, expression)
                                  parseLiteralInt(=)
                      parseArgumentOrIndexStar(c1, Instance of 'NoTypeParamOrArg', true)
                        parseExpression([)
                          parsePrecedenceExpression([, 1, true)
                            parseUnaryExpression([, true)
                              parsePrimary([, expression)
                                parseLiteralInt([)
                                  listener: handleLiteralInt(0)
                        listener: handleIndexedExpression(?, [, ])
                      parsePrecedenceExpression(=, 1, true)
                        parseUnaryExpression(=, true)
                          parsePrimary(=, expression)
                            parseLiteralInt(=)
                              listener: handleLiteralInt(1)
                      listener: handleAssignmentExpression(=)
                  ensureSemicolon(1)
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(7, {, })
        listener: endTopLevelMethod(main, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(class)
  listener: endCompilationUnit(2, )
