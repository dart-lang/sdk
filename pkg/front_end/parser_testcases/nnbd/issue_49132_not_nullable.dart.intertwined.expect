parseUnit(class)
  skipErrorTokens(class)
  listener: beginCompilationUnit(class)
  syntheticPreviousToken(class)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, class, null, null, null, null, null, Instance of 'DirectiveContext')
      parseClassOrNamedMixinApplication(null, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(Foo, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, Foo)
        parseClass(Foo, class, class, Foo)
          parseClassHeaderOpt(Foo, class, class)
            parseClassExtendsOpt(Foo)
              listener: handleNoType(Foo)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(Foo)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(Foo)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(Foo, DeclarationKind.Class, Foo)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, dynamic)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, Foo)
              parseMetadataStar({)
                listener: beginMetadataStar(dynamic)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields({, null, null, null, null, null, null, null, {, Instance of 'SimpleType', x, DeclarationKind.Class, Foo, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, null, null, null, null, {)
                listener: handleIdentifier(dynamic, typeReference)
                listener: handleNoTypeArguments(x)
                listener: handleType(dynamic, null)
                ensureIdentifierPotentiallyRecovered(dynamic, fieldDeclaration, false)
                  listener: handleIdentifier(x, fieldDeclaration)
                parseFieldInitializerOpt(x, x, null, null, null, null, null, DeclarationKind.Class, Foo)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, null, null, null, null, null, 1, dynamic, ;)
              listener: endMember()
            notEofOrValue(}, Foo)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(Foo)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(.)
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'NoType', null, Foo, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, Foo)
                listener: handleNoType(;)
                ensureIdentifierPotentiallyRecovered(;, methodDeclaration, false)
                  listener: handleIdentifier(Foo, methodDeclaration)
                parseQualifiedRestOpt(Foo, methodDeclarationContinuation)
                  parseQualifiedRest(Foo, methodDeclarationContinuation)
                    ensureIdentifier(., methodDeclarationContinuation)
                      listener: handleIdentifier(foo1, methodDeclarationContinuation)
                    listener: handleQualified(.)
                parseMethodTypeVar(foo1)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(foo1, Foo, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(foo1, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(dynamic)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(dynamic, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(dynamic, typeReference)
                        listener: handleNoTypeArguments(a)
                        listener: handleType(dynamic, null)
                        ensureIdentifier(dynamic, formalParameterDeclaration)
                          listener: handleIdentifier(a, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, a, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  parseInitializers(:)
                    listener: beginInitializers(:)
                    parseInitializer(:)
                      listener: beginInitializer(x)
                      parseInitializerExpressionRest(:)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true)
                            parseUnaryExpression(:, true)
                              parsePrimary(:, expression)
                                parseSendOrFunctionLiteral(:, expression)
                                  parseSend(:, expression)
                                    isNextIdentifier(:)
                                    ensureIdentifier(:, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(=)
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(=)
                                    listener: handleSend(x, =)
                            parsePrecedenceExpression(=, 1, true)
                              parseUnaryExpression(=, true)
                                parsePrimary(=, expression)
                                  parseSendOrFunctionLiteral(=, expression)
                                    parseSend(=, expression)
                                      isNextIdentifier(=)
                                      ensureIdentifier(=, expression)
                                        listener: handleIdentifier(a, expression)
                                      listener: handleNoTypeArguments(is)
                                      parseArgumentsOpt(a)
                                        listener: handleNoArguments(is)
                                      listener: handleSend(a, is)
                              parseIsOperatorRest(a)
                                listener: beginIsOperatorType(is)
                                computeTypeAfterIsOrAs(is)
                                  canParseAsConditional(?)
                                    parseExpressionWithoutCascade(?)
                                      parsePrecedenceExpression(?, 1, false)
                                        parseUnaryExpression(?, false)
                                          parsePrimary(?, expression)
                                            parseLiteralSetOrMapSuffix(?, null)
                                    parseExpressionWithoutCascade(:)
                                      parsePrecedenceExpression(:, 1, false)
                                        parseUnaryExpression(:, false)
                                          parsePrimary(:, expression)
                                            parseLiteralListSuffix(:, null)
                                              rewriteSquareBrackets(:)
                                                link([, ])
                                                rewriter()
                                listener: handleIdentifier(int, typeReference)
                                listener: handleNoTypeArguments(?)
                                listener: handleType(int, null)
                                listener: endIsOperatorType(is)
                                listener: handleIsOperator(is, null)
                                skipChainedAsIsOperators(int)
                              parseConditionalExpressionRest(int)
                                listener: beginConditionalExpression(?)
                                parseExpressionWithoutCascade(?)
                                  parsePrecedenceExpression(?, 1, false)
                                    parseUnaryExpression(?, false)
                                      parsePrimary(?, expression)
                                        listener: handleNoTypeArguments({)
                                        parseLiteralSetOrMapSuffix(?, null)
                                          listener: handleLiteralSetOrMap(0, {, null, }, false)
                                ensureColon(})
                                listener: handleConditionalExpressionColon()
                                parseExpressionWithoutCascade(:)
                                  parsePrecedenceExpression(:, 1, false)
                                    parseUnaryExpression(:, false)
                                      parsePrimary(:, expression)
                                        listener: handleNoTypeArguments([])
                                        parseLiteralListSuffix(:, null)
                                          rewriteSquareBrackets(:)
                                            link([, ])
                                            rewriter()
                                          listener: handleLiteralList(0, [, null, ])
                                listener: endConditionalExpression(?, :)
                            listener: handleAssignmentExpression(=)
                        listener: endInitializer({)
                    listener: endInitializers(1, :, {)
                parseAsyncModifierOpt(])
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(], false, true)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(0, {, })
                listener: endClassConstructor(null, Foo, (, :, })
              listener: endMember()
            notEofOrValue(}, Foo)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(Foo)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(.)
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'NoType', null, Foo, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, Foo)
                listener: handleNoType(})
                ensureIdentifierPotentiallyRecovered(}, methodDeclaration, false)
                  listener: handleIdentifier(Foo, methodDeclaration)
                parseQualifiedRestOpt(Foo, methodDeclarationContinuation)
                  parseQualifiedRest(Foo, methodDeclarationContinuation)
                    ensureIdentifier(., methodDeclarationContinuation)
                      listener: handleIdentifier(foo2, methodDeclarationContinuation)
                    listener: handleQualified(.)
                parseMethodTypeVar(foo2)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(foo2, Foo, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(foo2, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(dynamic)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(dynamic, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(dynamic, typeReference)
                        listener: handleNoTypeArguments(a)
                        listener: handleType(dynamic, null)
                        ensureIdentifier(dynamic, formalParameterDeclaration)
                          listener: handleIdentifier(a, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, a, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  parseInitializers(:)
                    listener: beginInitializers(:)
                    parseInitializer(:)
                      listener: beginInitializer(x)
                      parseInitializerExpressionRest(:)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true)
                            parseUnaryExpression(:, true)
                              parsePrimary(:, expression)
                                parseSendOrFunctionLiteral(:, expression)
                                  parseSend(:, expression)
                                    isNextIdentifier(:)
                                    ensureIdentifier(:, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(=)
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(=)
                                    listener: handleSend(x, =)
                            parsePrecedenceExpression(=, 1, true)
                              parseUnaryExpression(=, true)
                                parsePrimary(=, expression)
                                  parseSendOrFunctionLiteral(=, expression)
                                    parseSend(=, expression)
                                      isNextIdentifier(=)
                                      ensureIdentifier(=, expression)
                                        listener: handleIdentifier(a, expression)
                                      listener: handleNoTypeArguments(is)
                                      parseArgumentsOpt(a)
                                        listener: handleNoArguments(is)
                                      listener: handleSend(a, is)
                              parseIsOperatorRest(a)
                                listener: beginIsOperatorType(is)
                                computeTypeAfterIsOrAs(is)
                                  canParseAsConditional(?)
                                    parseExpressionWithoutCascade(?)
                                      parsePrecedenceExpression(?, 1, false)
                                        parseUnaryExpression(?, false)
                                          parsePrimary(?, expression)
                                            parseLiteralSetOrMapSuffix(?, null)
                                              parseExpression({)
                                                parsePrecedenceExpression({, 1, true)
                                                  parseUnaryExpression({, true)
                                                    parsePrimary({, expression)
                                                      parseLiteralString({)
                                                        parseSingleLiteralString({)
                                              parseExpression(:)
                                                parsePrecedenceExpression(:, 1, true)
                                                  parseUnaryExpression(:, true)
                                                    parsePrimary(:, expression)
                                                      parseLiteralString(:)
                                                        parseSingleLiteralString(:)
                                    parseExpressionWithoutCascade(:)
                                      parsePrecedenceExpression(:, 1, false)
                                        parseUnaryExpression(:, false)
                                          parsePrimary(:, expression)
                                            parseLiteralListSuffix(:, null)
                                              parseExpression([)
                                                parsePrecedenceExpression([, 1, true)
                                                  parseUnaryExpression([, true)
                                                    parsePrimary([, expression)
                                                      parseLiteralString([)
                                                        parseSingleLiteralString([)
                                              parseExpression(,)
                                                parsePrecedenceExpression(,, 1, true)
                                                  parseUnaryExpression(,, true)
                                                    parsePrimary(,, expression)
                                                      parseLiteralString(,)
                                                        parseSingleLiteralString(,)
                                listener: handleIdentifier(int, typeReference)
                                listener: handleNoTypeArguments(?)
                                listener: handleType(int, null)
                                listener: endIsOperatorType(is)
                                listener: handleIsOperator(is, null)
                                skipChainedAsIsOperators(int)
                              parseConditionalExpressionRest(int)
                                listener: beginConditionalExpression(?)
                                parseExpressionWithoutCascade(?)
                                  parsePrecedenceExpression(?, 1, false)
                                    parseUnaryExpression(?, false)
                                      parsePrimary(?, expression)
                                        listener: handleNoTypeArguments({)
                                        parseLiteralSetOrMapSuffix(?, null)
                                          parseExpression({)
                                            parsePrecedenceExpression({, 1, true)
                                              parseUnaryExpression({, true)
                                                parsePrimary({, expression)
                                                  parseLiteralString({)
                                                    parseSingleLiteralString({)
                                                      listener: beginLiteralString("a")
                                                      listener: endLiteralString(0, :)
                                          parseExpression(:)
                                            parsePrecedenceExpression(:, 1, true)
                                              parseUnaryExpression(:, true)
                                                parsePrimary(:, expression)
                                                  parseLiteralString(:)
                                                    parseSingleLiteralString(:)
                                                      listener: beginLiteralString("b")
                                                      listener: endLiteralString(0, })
                                          listener: handleLiteralMapEntry(:, })
                                          listener: handleLiteralSetOrMap(1, {, null, }, false)
                                ensureColon(})
                                listener: handleConditionalExpressionColon()
                                parseExpressionWithoutCascade(:)
                                  parsePrecedenceExpression(:, 1, false)
                                    parseUnaryExpression(:, false)
                                      parsePrimary(:, expression)
                                        listener: handleNoTypeArguments([)
                                        parseLiteralListSuffix(:, null)
                                          parseExpression([)
                                            parsePrecedenceExpression([, 1, true)
                                              parseUnaryExpression([, true)
                                                parsePrimary([, expression)
                                                  parseLiteralString([)
                                                    parseSingleLiteralString([)
                                                      listener: beginLiteralString("a")
                                                      listener: endLiteralString(0, ,)
                                          parseExpression(,)
                                            parsePrecedenceExpression(,, 1, true)
                                              parseUnaryExpression(,, true)
                                                parsePrimary(,, expression)
                                                  parseLiteralString(,)
                                                    parseSingleLiteralString(,)
                                                      listener: beginLiteralString("b")
                                                      listener: endLiteralString(0, ])
                                          listener: handleLiteralList(2, [, null, ])
                                listener: endConditionalExpression(?, :)
                            listener: handleAssignmentExpression(=)
                        listener: endInitializer({)
                    listener: endInitializers(1, :, {)
                parseAsyncModifierOpt(])
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(], false, true)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(0, {, })
                listener: endClassConstructor(null, Foo, (, :, })
              listener: endMember()
            notEofOrValue(}, Foo)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(Foo)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(.)
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'NoType', null, Foo, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, Foo)
                listener: handleNoType(})
                ensureIdentifierPotentiallyRecovered(}, methodDeclaration, false)
                  listener: handleIdentifier(Foo, methodDeclaration)
                parseQualifiedRestOpt(Foo, methodDeclarationContinuation)
                  parseQualifiedRest(Foo, methodDeclarationContinuation)
                    ensureIdentifier(., methodDeclarationContinuation)
                      listener: handleIdentifier(foo3, methodDeclarationContinuation)
                    listener: handleQualified(.)
                parseMethodTypeVar(foo3)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(foo3, Foo, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(foo3, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(dynamic)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(dynamic, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(dynamic, typeReference)
                        listener: handleNoTypeArguments(a)
                        listener: handleType(dynamic, null)
                        ensureIdentifier(dynamic, formalParameterDeclaration)
                          listener: handleIdentifier(a, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, a, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  parseInitializers(:)
                    listener: beginInitializers(:)
                    parseInitializer(:)
                      listener: beginInitializer(x)
                      parseInitializerExpressionRest(:)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true)
                            parseUnaryExpression(:, true)
                              parsePrimary(:, expression)
                                parseSendOrFunctionLiteral(:, expression)
                                  parseSend(:, expression)
                                    isNextIdentifier(:)
                                    ensureIdentifier(:, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(=)
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(=)
                                    listener: handleSend(x, =)
                            parsePrecedenceExpression(=, 1, true)
                              parseUnaryExpression(=, true)
                                parsePrimary(=, expression)
                                  parseSendOrFunctionLiteral(=, expression)
                                    parseSend(=, expression)
                                      isNextIdentifier(=)
                                      ensureIdentifier(=, expression)
                                        listener: handleIdentifier(a, expression)
                                      listener: handleNoTypeArguments(as)
                                      parseArgumentsOpt(a)
                                        listener: handleNoArguments(as)
                                      listener: handleSend(a, as)
                              parseAsOperatorRest(a)
                                listener: beginAsOperatorType(as)
                                computeTypeAfterIsOrAs(as)
                                  canParseAsConditional(?)
                                    parseExpressionWithoutCascade(?)
                                      parsePrecedenceExpression(?, 1, false)
                                        parseUnaryExpression(?, false)
                                          parsePrimary(?, expression)
                                            parseLiteralSetOrMapSuffix(?, null)
                                    parseExpressionWithoutCascade(:)
                                      parsePrecedenceExpression(:, 1, false)
                                        parseUnaryExpression(:, false)
                                          parsePrimary(:, expression)
                                            parseLiteralListSuffix(:, null)
                                              rewriteSquareBrackets(:)
                                                link([, ])
                                                rewriter()
                                listener: handleIdentifier(bool, typeReference)
                                listener: handleNoTypeArguments(?)
                                listener: handleType(bool, null)
                                listener: endAsOperatorType(as)
                                listener: handleAsOperator(as)
                                skipChainedAsIsOperators(bool)
                              parseConditionalExpressionRest(bool)
                                listener: beginConditionalExpression(?)
                                parseExpressionWithoutCascade(?)
                                  parsePrecedenceExpression(?, 1, false)
                                    parseUnaryExpression(?, false)
                                      parsePrimary(?, expression)
                                        listener: handleNoTypeArguments({)
                                        parseLiteralSetOrMapSuffix(?, null)
                                          listener: handleLiteralSetOrMap(0, {, null, }, false)
                                ensureColon(})
                                listener: handleConditionalExpressionColon()
                                parseExpressionWithoutCascade(:)
                                  parsePrecedenceExpression(:, 1, false)
                                    parseUnaryExpression(:, false)
                                      parsePrimary(:, expression)
                                        listener: handleNoTypeArguments([])
                                        parseLiteralListSuffix(:, null)
                                          rewriteSquareBrackets(:)
                                            link([, ])
                                            rewriter()
                                          listener: handleLiteralList(0, [, null, ])
                                listener: endConditionalExpression(?, :)
                            listener: handleAssignmentExpression(=)
                        listener: endInitializer({)
                    listener: endInitializers(1, :, {)
                parseAsyncModifierOpt(])
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(], false, true)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(0, {, })
                listener: endClassConstructor(null, Foo, (, :, })
              listener: endMember()
            notEofOrValue(}, Foo)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(Foo)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(.)
              parseMethod(}, null, null, null, null, null, null, null, }, Instance of 'NoType', null, Foo, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, Foo)
                listener: handleNoType(})
                ensureIdentifierPotentiallyRecovered(}, methodDeclaration, false)
                  listener: handleIdentifier(Foo, methodDeclaration)
                parseQualifiedRestOpt(Foo, methodDeclarationContinuation)
                  parseQualifiedRest(Foo, methodDeclarationContinuation)
                    ensureIdentifier(., methodDeclarationContinuation)
                      listener: handleIdentifier(foo4, methodDeclarationContinuation)
                    listener: handleQualified(.)
                parseMethodTypeVar(foo4)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(foo4, Foo, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(foo4, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(dynamic)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(dynamic, MemberKind.NonStaticMethod, null, null, null)
                        listener: handleIdentifier(dynamic, typeReference)
                        listener: handleNoTypeArguments(a)
                        listener: handleType(dynamic, null)
                        ensureIdentifier(dynamic, formalParameterDeclaration)
                          listener: handleIdentifier(a, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, a, null, null, FormalParameterKind.requiredPositional, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  parseInitializers(:)
                    listener: beginInitializers(:)
                    parseInitializer(:)
                      listener: beginInitializer(x)
                      parseInitializerExpressionRest(:)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true)
                            parseUnaryExpression(:, true)
                              parsePrimary(:, expression)
                                parseSendOrFunctionLiteral(:, expression)
                                  parseSend(:, expression)
                                    isNextIdentifier(:)
                                    ensureIdentifier(:, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(=)
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(=)
                                    listener: handleSend(x, =)
                            parsePrecedenceExpression(=, 1, true)
                              parseUnaryExpression(=, true)
                                parsePrimary(=, expression)
                                  parseSendOrFunctionLiteral(=, expression)
                                    parseSend(=, expression)
                                      isNextIdentifier(=)
                                      ensureIdentifier(=, expression)
                                        listener: handleIdentifier(a, expression)
                                      listener: handleNoTypeArguments(as)
                                      parseArgumentsOpt(a)
                                        listener: handleNoArguments(as)
                                      listener: handleSend(a, as)
                              parseAsOperatorRest(a)
                                listener: beginAsOperatorType(as)
                                computeTypeAfterIsOrAs(as)
                                  canParseAsConditional(?)
                                    parseExpressionWithoutCascade(?)
                                      parsePrecedenceExpression(?, 1, false)
                                        parseUnaryExpression(?, false)
                                          parsePrimary(?, expression)
                                            parseLiteralSetOrMapSuffix(?, null)
                                              parseExpression({)
                                                parsePrecedenceExpression({, 1, true)
                                                  parseUnaryExpression({, true)
                                                    parsePrimary({, expression)
                                                      parseLiteralString({)
                                                        parseSingleLiteralString({)
                                              parseExpression(:)
                                                parsePrecedenceExpression(:, 1, true)
                                                  parseUnaryExpression(:, true)
                                                    parsePrimary(:, expression)
                                                      parseLiteralString(:)
                                                        parseSingleLiteralString(:)
                                    parseExpressionWithoutCascade(:)
                                      parsePrecedenceExpression(:, 1, false)
                                        parseUnaryExpression(:, false)
                                          parsePrimary(:, expression)
                                            parseLiteralListSuffix(:, null)
                                              parseExpression([)
                                                parsePrecedenceExpression([, 1, true)
                                                  parseUnaryExpression([, true)
                                                    parsePrimary([, expression)
                                                      parseLiteralString([)
                                                        parseSingleLiteralString([)
                                              parseExpression(,)
                                                parsePrecedenceExpression(,, 1, true)
                                                  parseUnaryExpression(,, true)
                                                    parsePrimary(,, expression)
                                                      parseLiteralString(,)
                                                        parseSingleLiteralString(,)
                                listener: handleIdentifier(bool, typeReference)
                                listener: handleNoTypeArguments(?)
                                listener: handleType(bool, null)
                                listener: endAsOperatorType(as)
                                listener: handleAsOperator(as)
                                skipChainedAsIsOperators(bool)
                              parseConditionalExpressionRest(bool)
                                listener: beginConditionalExpression(?)
                                parseExpressionWithoutCascade(?)
                                  parsePrecedenceExpression(?, 1, false)
                                    parseUnaryExpression(?, false)
                                      parsePrimary(?, expression)
                                        listener: handleNoTypeArguments({)
                                        parseLiteralSetOrMapSuffix(?, null)
                                          parseExpression({)
                                            parsePrecedenceExpression({, 1, true)
                                              parseUnaryExpression({, true)
                                                parsePrimary({, expression)
                                                  parseLiteralString({)
                                                    parseSingleLiteralString({)
                                                      listener: beginLiteralString("a")
                                                      listener: endLiteralString(0, :)
                                          parseExpression(:)
                                            parsePrecedenceExpression(:, 1, true)
                                              parseUnaryExpression(:, true)
                                                parsePrimary(:, expression)
                                                  parseLiteralString(:)
                                                    parseSingleLiteralString(:)
                                                      listener: beginLiteralString("b")
                                                      listener: endLiteralString(0, })
                                          listener: handleLiteralMapEntry(:, })
                                          listener: handleLiteralSetOrMap(1, {, null, }, false)
                                ensureColon(})
                                listener: handleConditionalExpressionColon()
                                parseExpressionWithoutCascade(:)
                                  parsePrecedenceExpression(:, 1, false)
                                    parseUnaryExpression(:, false)
                                      parsePrimary(:, expression)
                                        listener: handleNoTypeArguments([)
                                        parseLiteralListSuffix(:, null)
                                          parseExpression([)
                                            parsePrecedenceExpression([, 1, true)
                                              parseUnaryExpression([, true)
                                                parsePrimary([, expression)
                                                  parseLiteralString([)
                                                    parseSingleLiteralString([)
                                                      listener: beginLiteralString("a")
                                                      listener: endLiteralString(0, ,)
                                          parseExpression(,)
                                            parsePrecedenceExpression(,, 1, true)
                                              parseUnaryExpression(,, true)
                                                parsePrimary(,, expression)
                                                  parseLiteralString(,)
                                                    parseSingleLiteralString(,)
                                                      listener: beginLiteralString("b")
                                                      listener: endLiteralString(0, ])
                                          listener: handleLiteralList(2, [, null, ])
                                listener: endConditionalExpression(?, :)
                            listener: handleAssignmentExpression(=)
                        listener: endInitializer({)
                    listener: endInitializers(1, :, {)
                parseAsyncModifierOpt(])
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(], false, true)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(0, {, })
                listener: endClassConstructor(null, Foo, (, :, })
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 5, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(class)
  listener: endCompilationUnit(1, )
