parseUnit(f)
  skipErrorTokens(f)
  listener: beginCompilationUnit(f)
  syntheticPreviousToken(f)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(f)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(f)
      isReservedKeyword(()
      parseTopLevelMethod(, null, , Instance of 'NoType', null, f, false)
        listener: beginTopLevelMethod(, null)
        listener: handleNoType()
        ensureIdentifierPotentiallyRecovered(, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(f, topLevelFunctionDeclaration)
        parseMethodTypeVar(f)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(f, f, false, MemberKind.TopLevelMethod)
          parseFormalParameters(f, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.mandatory, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(dynamic)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(dynamic, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(dynamic, typeReference)
                listener: handleNoTypeArguments(a)
                listener: handleType(dynamic, null)
                ensureIdentifier(dynamic, formalParameterDeclaration)
                  listener: handleIdentifier(a, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, a, null, null, FormalParameterKind.mandatory, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, a)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, false)
                looksLikeLocalFunction(a)
                parseExpressionStatement({)
                  parseExpression({)
                    parsePrecedenceExpression({, 1, true)
                      parseUnaryExpression({, true)
                        parsePrimary({, expression)
                          parseSendOrFunctionLiteral({, expression)
                            parseSend({, expression)
                              isNextIdentifier({)
                              ensureIdentifier({, expression)
                                listener: handleIdentifier(a, expression)
                              listener: handleNoTypeArguments(?)
                              parseArgumentsOpt(a)
                                listener: handleNoArguments(?)
                              listener: handleSend(a, ?)
                      canParseAsConditional(?)
                        parseExpressionWithoutCascade(?)
                          parsePrecedenceExpression(?, 1, false)
                            parseUnaryExpression(?, false)
                              parsePrimary(?, expression)
                                parseLiteralListSuffix(?, null)
                                  parseExpression([)
                                    parsePrecedenceExpression([, 1, true)
                                      parseUnaryExpression([, true)
                                        parsePrimary([, expression)
                                          parseLiteralInt([)
                            parsePrecedenceExpression(+, 14, false)
                              parseUnaryExpression(+, false)
                                parsePrimary(+, expression)
                                  parseLiteralInt(+)
                      parseArgumentOrIndexStar(a, Instance of 'NoTypeParamOrArg', true)
                        parseExpression([)
                          parsePrecedenceExpression([, 1, true)
                            parseUnaryExpression([, true)
                              parsePrimary([, expression)
                                parseLiteralInt([)
                                  listener: handleLiteralInt(0)
                        listener: handleIndexedExpression(?, [, ])
                      listener: beginBinaryExpression(+)
                      parsePrecedenceExpression(+, 14, true)
                        parseUnaryExpression(+, true)
                          parsePrimary(+, expression)
                            parseLiteralInt(+)
                              listener: handleLiteralInt(1)
                      listener: endBinaryExpression(+)
                  ensureSemicolon(1)
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod(f, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(f)
  listener: endCompilationUnit(1, )
