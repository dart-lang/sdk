parseUnit(void)
  skipErrorTokens(void)
  listener: beginCompilationUnit(void)
  syntheticPreviousToken(void)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(, null, null, , VoidType(), null, f, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(f, topLevelFunctionDeclaration)
        parseMethodTypeVar(f)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(f, f, false, MemberKind.TopLevelMethod)
          parseFormalParameters(f, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(dynamic)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(dynamic, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(dynamic, typeReference)
                listener: handleNoTypeArguments(e)
                listener: handleType(dynamic, null)
                ensureIdentifier(dynamic, formalParameterDeclaration)
                  listener: handleIdentifier(e, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, null, e, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrType(CLOSE_CURLY_BRACKET, e)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                looksLikeLocalFunction(e)
                parseExpressionStatement({)
                  parseExpression({)
                    parsePrecedenceExpression({, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression({, true, ConstantPatternContext.none)
                        parsePrimary({, expression, ConstantPatternContext.none)
                          parseSendOrFunctionLiteral({, expression, ConstantPatternContext.none)
                            parseSend({, expression, ConstantPatternContext.none)
                              ensureIdentifier({, expression)
                                listener: handleIdentifier(e, expression)
                              listener: handleNoTypeArguments([)
                              parseArgumentsOpt(e)
                                listener: handleNoArguments([)
                              listener: handleSend(e, e)
                      parseArgumentOrIndexStar(e, NoTypeParamOrArg(), false)
                        parseExpression([)
                          parsePrecedenceExpression([, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression([, true, ConstantPatternContext.none)
                              parsePrimary([, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral([, expression, ConstantPatternContext.none)
                                  parseSend([, expression, ConstantPatternContext.none)
                                    ensureIdentifier([, expression)
                                      listener: handleIdentifier(e, expression)
                                    listener: handleNoTypeArguments(])
                                    parseArgumentsOpt(e)
                                      listener: handleNoArguments(])
                                    listener: handleSend(e, e)
                        listener: handleIndexedExpression(null, [, ])
                        listener: beginTypeArguments(<)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(>)
                        listener: handleType(int, null)
                        listener: endTypeArguments(1, <, >)
                        parseArguments(>)
                          parseArgumentsRest(()
                            listener: beginArguments(()
                            allowedToShortcutParseExpression()
                            listener: handleIdentifier(e, expression)
                            listener: handleNoTypeArguments())
                            listener: handleNoArguments())
                            listener: handleSend(e, e)
                            listener: endArguments(1, (, ))
                        listener: handleSend([, ))
                  ensureSemicolon())
                  listener: handleExpressionStatement(e, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, e)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(e)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(;, true, ConstantPatternContext.none)
                        parsePrimary(;, expression, ConstantPatternContext.none)
                          parseSendOrFunctionLiteral(;, expression, ConstantPatternContext.none)
                            parseSend(;, expression, ConstantPatternContext.none)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(e, expression)
                              listener: handleNoTypeArguments(!)
                              parseArgumentsOpt(e)
                                listener: handleNoArguments(!)
                              listener: handleSend(e, e)
                      listener: handleNonNullAssertExpression(!)
                      parseArgumentOrIndexStar(!, NoTypeParamOrArg(), false)
                        parseExpression([)
                          parsePrecedenceExpression([, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression([, true, ConstantPatternContext.none)
                              parsePrimary([, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral([, expression, ConstantPatternContext.none)
                                  parseSend([, expression, ConstantPatternContext.none)
                                    ensureIdentifier([, expression)
                                      listener: handleIdentifier(e, expression)
                                    listener: handleNoTypeArguments(!)
                                    parseArgumentsOpt(e)
                                      listener: handleNoArguments(!)
                                    listener: handleSend(e, e)
                            listener: handleNonNullAssertExpression(!)
                        listener: handleIndexedExpression(null, [, ])
                        listener: handleNonNullAssertExpression(!)
                        listener: beginTypeArguments(<)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(>)
                        listener: handleType(int, null)
                        listener: endTypeArguments(1, <, >)
                        parseArguments(>)
                          parseArgumentsRest(()
                            listener: beginArguments(()
                            allowedToShortcutParseExpression()
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                parseUnaryExpression((, true, ConstantPatternContext.none)
                                  parsePrimary((, expression, ConstantPatternContext.none)
                                    parseSendOrFunctionLiteral((, expression, ConstantPatternContext.none)
                                      parseSend((, expression, ConstantPatternContext.none)
                                        ensureIdentifier((, expression)
                                          listener: handleIdentifier(e, expression)
                                        listener: handleNoTypeArguments(!)
                                        parseArgumentsOpt(e)
                                          listener: handleNoArguments(!)
                                        listener: handleSend(e, e)
                                listener: handleNonNullAssertExpression(!)
                            listener: endArguments(1, (, ))
                        listener: handleSend([, ))
                      listener: handleNonNullAssertExpression(!)
                  ensureSemicolon(!)
                  listener: handleExpressionStatement(e, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, })
          listener: endBlockFunctionBody(2, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(})
  reportAllErrorTokens(void)
  listener: endCompilationUnit(1, )
