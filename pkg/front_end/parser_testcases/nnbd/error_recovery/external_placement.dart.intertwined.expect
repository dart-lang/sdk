parseUnit(final)
  skipErrorTokens(final)
  listener: beginCompilationUnit(final)
  syntheticPreviousToken(final)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(final)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(final)
      reportRecoverableError(external, Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'final'., Try re-ordering the modifiers., {string: external, string2: final}])
        listener: handleRecoverableError(Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'final'., Try re-ordering the modifiers., {string: external, string2: final}], external, external)
      skipOuterPattern(external)
        skipObjectPatternRest(int)
      parseFields(, null, null, external, null, null, null, final, external, Instance of 'SimpleType', i1, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, external, null, null, null, final, )
        listener: handleIdentifier(int, typeReference)
        listener: handleNoTypeArguments(i1)
        listener: handleType(int, null)
        ensureIdentifierPotentiallyRecovered(int, topLevelVariableDeclaration, false)
          listener: handleIdentifier(i1, topLevelVariableDeclaration)
        parseFieldInitializerOpt(i1, i1, null, null, null, external, final, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(;)
        listener: endTopLevelFields(external, null, null, null, final, 1, final, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      reportRecoverableError(external, Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'var'., Try re-ordering the modifiers., {string: external, string2: var}])
        listener: handleRecoverableError(Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'var'., Try re-ordering the modifiers., {string: external, string2: var}], external, external)
      skipOuterPattern(external)
        skipObjectPatternRest(i2)
      parseFields(;, null, null, external, null, null, null, var, external, Instance of 'NoType', i2, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, external, null, null, null, var, ;)
        listener: handleNoType(external)
        ensureIdentifierPotentiallyRecovered(external, topLevelVariableDeclaration, false)
          listener: handleIdentifier(i2, topLevelVariableDeclaration)
        parseFieldInitializerOpt(i2, i2, null, null, null, external, var, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(;)
        listener: endTopLevelFields(external, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(class)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, class, null, null, null, null, null, Instance of 'DirectiveContext')
      parseClassOrNamedMixinApplication(null, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(C, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, C)
        parseClass(C, class, class, C)
          parseClassHeaderOpt(C, class, class)
            parseClassExtendsOpt(C)
              listener: handleNoType(C)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(C)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(C)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(C, DeclarationKind.Class, C)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, covariant)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, C)
              parseMetadataStar({)
                listener: beginMetadataStar(covariant)
                listener: endMetadataStar(0)
              reportRecoverableError(external, Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'covariant'., Try re-ordering the modifiers., {string: external, string2: covariant}])
                listener: handleRecoverableError(Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'covariant'., Try re-ordering the modifiers., {string: external, string2: covariant}], external, external)
              listener: beginMember()
              parseFields({, null, null, external, null, covariant, null, null, external, Instance of 'SimpleType', i3, DeclarationKind.Class, C, false)
                listener: beginFields(DeclarationKind.Class, null, null, external, null, covariant, null, null, {)
                listener: handleIdentifier(num, typeReference)
                listener: handleNoTypeArguments(i3)
                listener: handleType(num, null)
                ensureIdentifierPotentiallyRecovered(num, fieldDeclaration, false)
                  listener: handleIdentifier(i3, fieldDeclaration)
                parseFieldInitializerOpt(i3, i3, null, null, null, external, null, DeclarationKind.Class, C)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, external, null, covariant, null, null, 1, covariant, ;)
              listener: endMember()
            notEofOrValue(}, final)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, C)
              parseMetadataStar(;)
                listener: beginMetadataStar(final)
                listener: endMetadataStar(0)
              reportRecoverableError(external, Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'final'., Try re-ordering the modifiers., {string: external, string2: final}])
                listener: handleRecoverableError(Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'final'., Try re-ordering the modifiers., {string: external, string2: final}], external, external)
              listener: beginMember()
              skipOuterPattern(external)
                skipObjectPatternRest(int)
              parseFields(;, null, null, external, null, null, null, final, external, Instance of 'SimpleType', i4, DeclarationKind.Class, C, false)
                listener: beginFields(DeclarationKind.Class, null, null, external, null, null, null, final, ;)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(i4)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, false)
                  listener: handleIdentifier(i4, fieldDeclaration)
                parseFieldInitializerOpt(i4, i4, null, null, null, external, final, DeclarationKind.Class, C)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, external, null, null, null, final, 1, final, ;)
              listener: endMember()
            notEofOrValue(}, final)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, C)
              parseMetadataStar(;)
                listener: beginMetadataStar(final)
                listener: endMetadataStar(0)
              reportRecoverableError(external, Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'final'., Try re-ordering the modifiers., {string: external, string2: final}])
                listener: handleRecoverableError(Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'final'., Try re-ordering the modifiers., {string: external, string2: final}], external, external)
              listener: beginMember()
              skipOuterPattern(external)
                skipObjectPatternRest(i5)
              parseFields(;, null, null, external, null, null, null, final, external, Instance of 'NoType', i5, DeclarationKind.Class, C, false)
                listener: beginFields(DeclarationKind.Class, null, null, external, null, null, null, final, ;)
                listener: handleNoType(external)
                ensureIdentifierPotentiallyRecovered(external, fieldDeclaration, false)
                  listener: handleIdentifier(i5, fieldDeclaration)
                parseFieldInitializerOpt(i5, i5, null, null, null, external, final, DeclarationKind.Class, C)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, external, null, null, null, final, 1, final, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, C)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              reportRecoverableError(external, Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'static'., Try re-ordering the modifiers., {string: external, string2: static}])
                listener: handleRecoverableError(Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'static'., Try re-ordering the modifiers., {string: external, string2: static}], external, external)
              listener: beginMember()
              skipOuterPattern(final)
                skipObjectPatternRest(i6)
              parseFields(;, null, null, external, static, null, null, final, final, Instance of 'NoType', i6, DeclarationKind.Class, C, false)
                listener: beginFields(DeclarationKind.Class, null, null, external, static, null, null, final, ;)
                listener: handleNoType(final)
                ensureIdentifierPotentiallyRecovered(final, fieldDeclaration, false)
                  listener: handleIdentifier(i6, fieldDeclaration)
                parseFieldInitializerOpt(i6, i6, null, null, null, external, final, DeclarationKind.Class, C)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, external, static, null, null, final, 1, static, ;)
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, C)
              parseMetadataStar(;)
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              reportRecoverableError(external, Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'static'., Try re-ordering the modifiers., {string: external, string2: static}])
                listener: handleRecoverableError(Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'static'., Try re-ordering the modifiers., {string: external, string2: static}], external, external)
              listener: beginMember()
              skipOuterPattern(external)
                skipObjectPatternRest(i7)
              parseFields(;, null, null, external, static, null, null, final, external, Instance of 'NoType', i7, DeclarationKind.Class, C, false)
                listener: beginFields(DeclarationKind.Class, null, null, external, static, null, null, final, ;)
                listener: handleNoType(external)
                ensureIdentifierPotentiallyRecovered(external, fieldDeclaration, false)
                  listener: handleIdentifier(i7, fieldDeclaration)
                parseFieldInitializerOpt(i7, i7, null, null, null, external, final, DeclarationKind.Class, C)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, external, static, null, null, final, 1, static, ;)
              listener: endMember()
            notEofOrValue(}, final)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, C)
              parseMetadataStar(;)
                listener: beginMetadataStar(final)
                listener: endMetadataStar(0)
              reportRecoverableError(static, Message[ModifierOutOfOrder, The modifier 'static' should be before the modifier 'final'., Try re-ordering the modifiers., {string: static, string2: final}])
                listener: handleRecoverableError(Message[ModifierOutOfOrder, The modifier 'static' should be before the modifier 'final'., Try re-ordering the modifiers., {string: static, string2: final}], static, static)
              reportRecoverableError(external, Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'static'., Try re-ordering the modifiers., {string: external, string2: static}])
                listener: handleRecoverableError(Message[ModifierOutOfOrder, The modifier 'external' should be before the modifier 'static'., Try re-ordering the modifiers., {string: external, string2: static}], external, external)
              listener: beginMember()
              skipOuterPattern(external)
                skipObjectPatternRest(i8)
              parseFields(;, null, null, external, static, null, null, final, external, Instance of 'NoType', i8, DeclarationKind.Class, C, false)
                listener: beginFields(DeclarationKind.Class, null, null, external, static, null, null, final, ;)
                listener: handleNoType(external)
                ensureIdentifierPotentiallyRecovered(external, fieldDeclaration, false)
                  listener: handleIdentifier(i8, fieldDeclaration)
                parseFieldInitializerOpt(i8, i8, null, null, null, external, final, DeclarationKind.Class, C)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, external, static, null, null, final, 1, final, ;)
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 6, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(final)
  listener: endCompilationUnit(3, )
