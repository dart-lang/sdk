parseUnit(void)
  skipErrorTokens(void)
  listener: beginCompilationUnit(void)
  syntheticPreviousToken(void)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(, null, null, , Instance of 'VoidType', null, main, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, late)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers(late, {, late, null, null, null)
                  looksLikeLocalFunction(x)
                  reportRecoverableError(x, MissingConstFinalVarOrType)
                    listener: handleRecoverableError(MissingConstFinalVarOrType, x, x)
                  listener: beginMetadataStar(late)
                  listener: endMetadataStar(0)
                  listener: handleNoType(late)
                  listener: beginVariablesDeclaration(x, late, null)
                  parseVariablesDeclarationRest(late, true)
                    parseOptionallyInitializedIdentifier(late)
                      ensureIdentifier(late, localVariableDeclaration)
                        listener: handleIdentifier(x, localVariableDeclaration)
                      listener: beginInitializedIdentifier(x)
                      parseVariableInitializerOpt(x)
                        listener: handleNoVariableInitializer(x)
                      listener: endInitializedIdentifier(x)
                    ensureSemicolon(x)
                    listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(late)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(late)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(late)
      isReservedKeyword(;)
      parseFields(}, null, null, null, null, null, late, null, late, Instance of 'NoType', y, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, late, null, })
        reportRecoverableError(y, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, y, y)
        listener: handleNoType(late)
        ensureIdentifierPotentiallyRecovered(late, topLevelVariableDeclaration, false)
          listener: handleIdentifier(y, topLevelVariableDeclaration)
        parseFieldInitializerOpt(y, y, late, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(;)
        listener: endTopLevelFields(null, null, null, late, null, 1, late, ;)
  listener: endTopLevelDeclaration(class)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, class, null, null, null, null, null, Instance of 'DirectiveContext')
      parseClassOrNamedMixinApplication(null, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(Foo, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, Foo)
        parseClass(Foo, class, class, Foo)
          parseClassHeaderOpt(Foo, class, class)
            parseClassExtendsOpt(Foo)
              listener: handleNoType(Foo)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(Foo)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(Foo)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(Foo, DeclarationKind.Class, Foo)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, late)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, Foo)
              parseMetadataStar({)
                listener: beginMetadataStar(late)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(;)
              parseFields({, null, null, null, null, null, late, null, late, Instance of 'NoType', z, DeclarationKind.Class, Foo, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, null, null, late, null, {)
                reportRecoverableError(z, MissingConstFinalVarOrType)
                  listener: handleRecoverableError(MissingConstFinalVarOrType, z, z)
                listener: handleNoType(late)
                ensureIdentifierPotentiallyRecovered(late, fieldDeclaration, false)
                  listener: handleIdentifier(z, fieldDeclaration)
                parseFieldInitializerOpt(z, z, late, null, null, null, null, DeclarationKind.Class, Foo)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, null, null, null, late, null, 1, late, ;)
              listener: endMember()
            notEofOrValue(}, void)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, Foo)
              parseMetadataStar(;)
                listener: beginMetadataStar(void)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'VoidType', null, foo, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, foo)
                listener: handleVoidKeyword(void)
                ensureIdentifierPotentiallyRecovered(void, methodDeclaration, false)
                  listener: handleIdentifier(foo, methodDeclaration)
                parseQualifiedRestOpt(foo, methodDeclarationContinuation)
                parseMethodTypeVar(foo)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(foo, foo, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(foo, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, late)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers(late, {, late, null, null, null)
                          looksLikeLocalFunction(x)
                          reportRecoverableError(x, MissingConstFinalVarOrType)
                            listener: handleRecoverableError(MissingConstFinalVarOrType, x, x)
                          listener: beginMetadataStar(late)
                          listener: endMetadataStar(0)
                          listener: handleNoType(late)
                          listener: beginVariablesDeclaration(x, late, null)
                          parseVariablesDeclarationRest(late, true)
                            parseOptionallyInitializedIdentifier(late)
                              ensureIdentifier(late, localVariableDeclaration)
                                listener: handleIdentifier(x, localVariableDeclaration)
                              listener: beginInitializedIdentifier(x)
                              parseVariableInitializerOpt(x)
                                listener: handleNoVariableInitializer(x)
                              listener: endInitializedIdentifier(x)
                            ensureSemicolon(x)
                            listener: endVariablesDeclaration(1, ;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(null, void, (, null, })
              listener: endMember()
            notEofOrValue(}, static)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, Foo)
              parseMetadataStar(})
                listener: beginMetadataStar(static)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, static, null, null, null, static, Instance of 'VoidType', null, bar, DeclarationKind.Class, Foo, false)
                listener: beginMethod(DeclarationKind.Class, null, null, static, null, null, null, bar)
                listener: handleVoidKeyword(void)
                ensureIdentifierPotentiallyRecovered(void, methodDeclaration, false)
                  listener: handleIdentifier(bar, methodDeclaration)
                parseQualifiedRestOpt(bar, methodDeclarationContinuation)
                parseMethodTypeVar(bar)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(bar, bar, false, MemberKind.StaticMethod)
                  parseFormalParameters(bar, MemberKind.StaticMethod)
                    parseFormalParametersRest((, MemberKind.StaticMethod)
                      listener: beginFormalParameters((, MemberKind.StaticMethod)
                      listener: endFormalParameters(0, (, ), MemberKind.StaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                parseFunctionBody(), false, false)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, late)
                  parseStatement({)
                    parseStatementX({)
                      parseExpressionStatementOrDeclaration({, null)
                        parseExpressionStatementOrDeclarationAfterModifiers(late, {, late, null, null, null)
                          looksLikeLocalFunction(x)
                          reportRecoverableError(x, MissingConstFinalVarOrType)
                            listener: handleRecoverableError(MissingConstFinalVarOrType, x, x)
                          listener: beginMetadataStar(late)
                          listener: endMetadataStar(0)
                          listener: handleNoType(late)
                          listener: beginVariablesDeclaration(x, late, null)
                          parseVariablesDeclarationRest(late, true)
                            parseOptionallyInitializedIdentifier(late)
                              ensureIdentifier(late, localVariableDeclaration)
                                listener: handleIdentifier(x, localVariableDeclaration)
                              listener: beginInitializedIdentifier(x)
                              parseVariableInitializerOpt(x)
                                listener: handleNoVariableInitializer(x)
                              listener: endInitializedIdentifier(x)
                            ensureSemicolon(x)
                            listener: endVariablesDeclaration(1, ;)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(1, {, })
                listener: endClassMethod(null, static, (, null, })
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 3, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(void)
  listener: endCompilationUnit(3, )
