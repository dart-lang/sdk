parseUnit(class)
  skipErrorTokens(class)
  listener: beginCompilationUnit(class)
  syntheticPreviousToken(class)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, class, Instance of 'DirectiveContext')
      parseClassDeclarationModifiers(, class)
      parseClassOrNamedMixinApplication(null, class)
        listener: beginClassOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(A, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, A)
        parseClass(A, class, class, A)
          parseClassHeaderOpt(A, class, class)
            parseClassExtendsOpt(A)
              listener: handleNoType(A)
              listener: handleClassExtends(null, 1)
            parseWithClauseOpt(A)
              listener: handleClassNoWithClause()
            parseClassOrMixinImplementsOpt(A)
              listener: handleClassOrMixinImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(A, DeclarationKind.Class, A)
            listener: beginClassOrMixinBody(DeclarationKind.Class, {)
            notEofOrValue(}, Stream)
            parseClassOrMixinOrExtensionMemberImpl({, DeclarationKind.Class, A)
              parseMetadataStar({)
                listener: beginMetadataStar(Stream)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod({, null, null, null, null, null, null, {, Instance of 'NoType', null, Stream, DeclarationKind.Class, A, false)
                listener: beginMethod(null, null, null, null, null, Stream)
                listener: handleNoType({)
                ensureIdentifierPotentiallyRecovered({, methodDeclaration, false)
                  listener: handleIdentifier(Stream, methodDeclaration)
                parseQualifiedRestOpt(Stream, methodDeclarationContinuation)
                parseMethodTypeVar(Stream)
                  listener: beginTypeVariables(<)
                  parseMetadataStar(<)
                    listener: beginMetadataStar(List)
                    listener: endMetadataStar(0)
                  ensureIdentifier(<, typeVariableDeclaration)
                    listener: handleIdentifier(List, typeVariableDeclaration)
                  listener: beginTypeVariable(List)
                  listener: handleTypeVariablesDefined(List, 1)
                  listener: handleNoType(List)
                  listener: endTypeVariable(<, 0, null, null)
                  reportRecoverableError(List, Message[ExpectedAfterButGot, Expected '>' after this., null, {string: >}])
                    listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected '>' after this., null, {string: >}], List, List)
                  parseMetadataStar(<)
                  ensureIdentifier(<, typeVariableDeclaration)
                  reportRecoverableError(Set, Message[ExpectedAfterButGot, Expected '>' after this., null, {string: >}])
                  parseMetadataStar(<)
                  ensureIdentifier(<, typeVariableDeclaration)
                    reportRecoverableErrorWithToken(>>>, Instance of 'Template<(Token) => Message>')
                    rewriter()
                  listener: endTypeVariables(<, >)
                parseGetterOrFormalParameters(>, Stream, false, MemberKind.NonStaticMethod)
                  missingParameterMessage(MemberKind.NonStaticMethod)
                  reportRecoverableError(Stream, MissingMethodParameters)
                    listener: handleRecoverableError(MissingMethodParameters, Stream, Stream)
                  rewriter()
                  parseFormalParametersRest((, MemberKind.NonStaticMethod)
                    listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                    listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  ensureBlock(), Instance of 'Template<(Token) => Message>', null)
                    reportRecoverableError(}, Message[ExpectedFunctionBody, Expected a function body, but got '}'., null, {lexeme: }}])
                      listener: handleRecoverableError(Message[ExpectedFunctionBody, Expected a function body, but got '}'., null, {lexeme: }}], }, })
                    insertBlock())
                      rewriter()
                      rewriter()
                  listener: handleInvalidFunctionBody({)
                listener: endClassMethod(null, Stream, (, null, })
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinBody(DeclarationKind.Class, 1, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(class)
  listener: endCompilationUnit(1, )
