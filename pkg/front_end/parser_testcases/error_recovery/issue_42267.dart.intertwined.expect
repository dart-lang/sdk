parseUnit(void)
  skipErrorTokens(void)
  listener: beginCompilationUnit(void)
  syntheticPreviousToken(void)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(, null, null, , VoidType(), null, main, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrType(CLOSE_CURLY_BRACKET, builder)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                looksLikeLocalFunction(builder)
                parseExpressionStatement({)
                  parseExpression({)
                    parsePrecedenceExpression({, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression({, true, ConstantPatternContext.none)
                        parsePrimary({, expression, ConstantPatternContext.none)
                          parseSendOrFunctionLiteral({, expression, ConstantPatternContext.none)
                            parseSend({, expression, ConstantPatternContext.none)
                              ensureIdentifier({, expression)
                                listener: handleIdentifier(builder, expression)
                              listener: handleNoTypeArguments(..)
                              parseArgumentsOpt(builder)
                                listener: handleNoArguments(..)
                              listener: handleSend(builder, builder)
                      parseCascadeExpression(builder)
                        listener: beginCascade(..)
                        parseSend(.., expressionContinuation, ConstantPatternContext.none)
                          ensureIdentifier(.., expressionContinuation)
                            listener: handleIdentifier(foo, expressionContinuation)
                          listener: handleNoTypeArguments([)
                          parseArgumentsOpt(foo)
                            listener: handleNoArguments([)
                          listener: handleSend(foo, foo)
                        listener: handleCascadeAccess(.., foo, false)
                        parseArgumentOrIndexStar(foo, NoTypeParamOrArg(), false)
                          parseExpression([)
                            parsePrecedenceExpression([, 1, true, ConstantPatternContext.none)
                              parseUnaryExpression([, true, ConstantPatternContext.none)
                                parsePrimary([, expression, ConstantPatternContext.none)
                                  parseSendOrFunctionLiteral([, expression, ConstantPatternContext.none)
                                    parseSend([, expression, ConstantPatternContext.none)
                                      ensureIdentifier([, expression)
                                        listener: handleIdentifier(bar, expression)
                                      listener: handleNoTypeArguments(])
                                      parseArgumentsOpt(bar)
                                        listener: handleNoArguments(])
                                      listener: handleSend(bar, bar)
                          listener: handleIndexedExpression(null, [, ])
                        parseArgumentOrIndexStar(], NoTypeParamOrArg(), false)
                        listener: endCascade()
                  ensureSemicolon(])
                  listener: handleExpressionStatement(builder, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, FilterSet)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(FilterSet)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(;, true, ConstantPatternContext.none)
                        parsePrimary(;, expression, ConstantPatternContext.none)
                          parseSendOrFunctionLiteral(;, expression, ConstantPatternContext.none)
                            looksLikeFunctionBody(;)
                            parseSend(;, expression, ConstantPatternContext.none)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(FilterSet, expression)
                              listener: handleNoTypeArguments(()
                              parseArgumentsOpt(FilterSet)
                                parseArguments(FilterSet)
                                  parseArgumentsRest(()
                                    listener: beginArguments(()
                                    allowedToShortcutParseExpression()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral((, ConstantPatternContext.none)
                                              listener: handleNoTypeVariables(()
                                              parseFunctionExpression(()
                                                listener: beginFunctionExpression(()
                                                parseFormalParametersRequiredOpt((, MemberKind.Local)
                                                  parseFormalParametersRest((, MemberKind.Local)
                                                    listener: beginFormalParameters((, MemberKind.Local)
                                                    parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.Local)
                                                      parseMetadataStar(()
                                                        listener: beginMetadataStar(builder)
                                                        listener: endMetadataStar(0)
                                                      listener: beginFormalParameter(builder, MemberKind.Local, null, null, null)
                                                      listener: handleNoType(()
                                                      ensureIdentifier((, formalParameterDeclaration)
                                                        listener: handleIdentifier(builder, formalParameterDeclaration)
                                                      listener: handleFormalParameterWithoutValue())
                                                      listener: endFormalParameter(null, null, null, builder, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                                                    listener: endFormalParameters(1, (, ), MemberKind.Local)
                                                parseAsyncOptBody(), true, false)
                                                  parseAsyncModifierOpt())
                                                    listener: handleAsyncModifier(null, null)
                                                    inPlainSync()
                                                  parseFunctionBody(), true, false)
                                                    parseExpressionFunctionBody(=>, true)
                                                      parseExpression(=>)
                                                        parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                                                          parseUnaryExpression(=>, true, ConstantPatternContext.none)
                                                            parsePrimary(=>, expression, ConstantPatternContext.none)
                                                              parseSendOrFunctionLiteral(=>, expression, ConstantPatternContext.none)
                                                                parseSend(=>, expression, ConstantPatternContext.none)
                                                                  ensureIdentifier(=>, expression)
                                                                    listener: handleIdentifier(builder, expression)
                                                                  listener: handleNoTypeArguments(..)
                                                                  parseArgumentsOpt(builder)
                                                                    listener: handleNoArguments(..)
                                                                  listener: handleSend(builder, builder)
                                                          parseCascadeExpression(builder)
                                                            listener: beginCascade(..)
                                                            parseSend(.., expressionContinuation, ConstantPatternContext.none)
                                                              ensureIdentifier(.., expressionContinuation)
                                                                listener: handleIdentifier(foo, expressionContinuation)
                                                              listener: handleNoTypeArguments([)
                                                              parseArgumentsOpt(foo)
                                                                listener: handleNoArguments([)
                                                              listener: handleSend(foo, foo)
                                                            listener: handleCascadeAccess(.., foo, false)
                                                            parseArgumentOrIndexStar(foo, NoTypeParamOrArg(), false)
                                                              parseExpression([)
                                                                parsePrecedenceExpression([, 1, true, ConstantPatternContext.none)
                                                                  parseUnaryExpression([, true, ConstantPatternContext.none)
                                                                    parsePrimary([, expression, ConstantPatternContext.none)
                                                                      parseSendOrFunctionLiteral([, expression, ConstantPatternContext.none)
                                                                        parseSend([, expression, ConstantPatternContext.none)
                                                                          ensureIdentifier([, expression)
                                                                            listener: handleIdentifier(bar, expression)
                                                                          listener: handleNoTypeArguments(])
                                                                          parseArgumentsOpt(bar)
                                                                            listener: handleNoArguments(])
                                                                          listener: handleSend(bar, bar)
                                                              listener: handleIndexedExpression(null, [, ])
                                                            parseArgumentOrIndexStar(], NoTypeParamOrArg(), false)
                                                            listener: endCascade()
                                                      listener: handleExpressionFunctionBody(=>, null)
                                                      inGenerator()
                                                listener: endFunctionExpression((, ])
                                    listener: endArguments(1, (, ))
                              listener: handleSend(FilterSet, ))
                  ensureSemicolon())
                  listener: handleExpressionStatement(FilterSet, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, builder)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(builder)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(;, true, ConstantPatternContext.none)
                        parsePrimary(;, expression, ConstantPatternContext.none)
                          parseSendOrFunctionLiteral(;, expression, ConstantPatternContext.none)
                            parseSend(;, expression, ConstantPatternContext.none)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(builder, expression)
                              listener: handleNoTypeArguments(..)
                              parseArgumentsOpt(builder)
                                listener: handleNoArguments(..)
                              listener: handleSend(builder, builder)
                      parseCascadeExpression(builder)
                        listener: beginCascade(..)
                        parseSend(.., expressionContinuation, ConstantPatternContext.none)
                          ensureIdentifier(.., expressionContinuation)
                            listener: handleIdentifier(foo, expressionContinuation)
                          listener: handleNoTypeArguments([])
                          parseArgumentsOpt(foo)
                            listener: handleNoArguments([])
                          listener: handleSend(foo, foo)
                        listener: handleCascadeAccess(.., foo, false)
                        rewriteSquareBrackets(foo)
                          link([, ])
                          rewriter()
                        parseArgumentOrIndexStar(foo, NoTypeParamOrArg(), false)
                          parseExpression([)
                            parsePrecedenceExpression([, 1, true, ConstantPatternContext.none)
                              parseUnaryExpression([, true, ConstantPatternContext.none)
                                parsePrimary([, expression, ConstantPatternContext.none)
                                  parseSend([, expression, ConstantPatternContext.none)
                                    ensureIdentifier([, expression)
                                      reportRecoverableErrorWithToken(], Template(ExpectedIdentifier))
                                        listener: handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got ']'., Try inserting an identifier before ']'., {lexeme: ]}], ], ])
                                      rewriter()
                                      listener: handleIdentifier(, expression)
                                    listener: handleNoTypeArguments(])
                                    parseArgumentsOpt()
                                      listener: handleNoArguments(])
                                    listener: handleSend(, )
                          listener: handleIndexedExpression(null, [, ])
                        parseArgumentOrIndexStar(], NoTypeParamOrArg(), false)
                        listener: endCascade()
                  ensureSemicolon(])
                  listener: handleExpressionStatement(builder, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, FilterSet)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(FilterSet)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(;, true, ConstantPatternContext.none)
                        parsePrimary(;, expression, ConstantPatternContext.none)
                          parseSendOrFunctionLiteral(;, expression, ConstantPatternContext.none)
                            looksLikeFunctionBody(;)
                            parseSend(;, expression, ConstantPatternContext.none)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(FilterSet, expression)
                              listener: handleNoTypeArguments(()
                              parseArgumentsOpt(FilterSet)
                                parseArguments(FilterSet)
                                  parseArgumentsRest(()
                                    listener: beginArguments(()
                                    allowedToShortcutParseExpression()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral((, ConstantPatternContext.none)
                                              listener: handleNoTypeVariables(()
                                              parseFunctionExpression(()
                                                listener: beginFunctionExpression(()
                                                parseFormalParametersRequiredOpt((, MemberKind.Local)
                                                  parseFormalParametersRest((, MemberKind.Local)
                                                    listener: beginFormalParameters((, MemberKind.Local)
                                                    parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.Local)
                                                      parseMetadataStar(()
                                                        listener: beginMetadataStar(builder)
                                                        listener: endMetadataStar(0)
                                                      listener: beginFormalParameter(builder, MemberKind.Local, null, null, null)
                                                      listener: handleNoType(()
                                                      ensureIdentifier((, formalParameterDeclaration)
                                                        listener: handleIdentifier(builder, formalParameterDeclaration)
                                                      listener: handleFormalParameterWithoutValue())
                                                      listener: endFormalParameter(null, null, null, builder, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                                                    listener: endFormalParameters(1, (, ), MemberKind.Local)
                                                parseAsyncOptBody(), true, false)
                                                  parseAsyncModifierOpt())
                                                    listener: handleAsyncModifier(null, null)
                                                    inPlainSync()
                                                  parseFunctionBody(), true, false)
                                                    parseExpressionFunctionBody(=>, true)
                                                      parseExpression(=>)
                                                        parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                                                          parseUnaryExpression(=>, true, ConstantPatternContext.none)
                                                            parsePrimary(=>, expression, ConstantPatternContext.none)
                                                              parseSendOrFunctionLiteral(=>, expression, ConstantPatternContext.none)
                                                                parseSend(=>, expression, ConstantPatternContext.none)
                                                                  ensureIdentifier(=>, expression)
                                                                    listener: handleIdentifier(builder, expression)
                                                                  listener: handleNoTypeArguments(..)
                                                                  parseArgumentsOpt(builder)
                                                                    listener: handleNoArguments(..)
                                                                  listener: handleSend(builder, builder)
                                                          parseCascadeExpression(builder)
                                                            listener: beginCascade(..)
                                                            parseSend(.., expressionContinuation, ConstantPatternContext.none)
                                                              ensureIdentifier(.., expressionContinuation)
                                                                listener: handleIdentifier(foo, expressionContinuation)
                                                              listener: handleNoTypeArguments([])
                                                              parseArgumentsOpt(foo)
                                                                listener: handleNoArguments([])
                                                              listener: handleSend(foo, foo)
                                                            listener: handleCascadeAccess(.., foo, false)
                                                            rewriteSquareBrackets(foo)
                                                              link([, ])
                                                              rewriter()
                                                            parseArgumentOrIndexStar(foo, NoTypeParamOrArg(), false)
                                                              parseExpression([)
                                                                parsePrecedenceExpression([, 1, true, ConstantPatternContext.none)
                                                                  parseUnaryExpression([, true, ConstantPatternContext.none)
                                                                    parsePrimary([, expression, ConstantPatternContext.none)
                                                                      parseSend([, expression, ConstantPatternContext.none)
                                                                        ensureIdentifier([, expression)
                                                                          reportRecoverableErrorWithToken(], Template(ExpectedIdentifier))
                                                                            listener: handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got ']'., Try inserting an identifier before ']'., {lexeme: ]}], ], ])
                                                                          rewriter()
                                                                          listener: handleIdentifier(, expression)
                                                                        listener: handleNoTypeArguments(])
                                                                        parseArgumentsOpt()
                                                                          listener: handleNoArguments(])
                                                                        listener: handleSend(, )
                                                              listener: handleIndexedExpression(null, [, ])
                                                            parseArgumentOrIndexStar(], NoTypeParamOrArg(), false)
                                                            listener: endCascade()
                                                      listener: handleExpressionFunctionBody(=>, null)
                                                      inGenerator()
                                                listener: endFunctionExpression((, ])
                                    listener: endArguments(1, (, ))
                              listener: handleSend(FilterSet, ))
                  ensureSemicolon())
                  listener: handleExpressionStatement(FilterSet, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, builder)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(builder)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(;, true, ConstantPatternContext.none)
                        parsePrimary(;, expression, ConstantPatternContext.none)
                          parseSendOrFunctionLiteral(;, expression, ConstantPatternContext.none)
                            parseSend(;, expression, ConstantPatternContext.none)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(builder, expression)
                              listener: handleNoTypeArguments(..)
                              parseArgumentsOpt(builder)
                                listener: handleNoArguments(..)
                              listener: handleSend(builder, builder)
                      parseCascadeExpression(builder)
                        listener: beginCascade(..)
                        parseSend(.., expressionContinuation, ConstantPatternContext.none)
                          ensureIdentifier(.., expressionContinuation)
                            listener: handleIdentifier(foo, expressionContinuation)
                          listener: handleNoTypeArguments([)
                          parseArgumentsOpt(foo)
                            listener: handleNoArguments([)
                          listener: handleSend(foo, foo)
                        listener: handleCascadeAccess(.., foo, false)
                        parseArgumentOrIndexStar(foo, NoTypeParamOrArg(), false)
                          parseExpression([)
                            parsePrecedenceExpression([, 1, true, ConstantPatternContext.none)
                              parseUnaryExpression([, true, ConstantPatternContext.none)
                                parsePrimary([, expression, ConstantPatternContext.none)
                                  parseSend([, expression, ConstantPatternContext.none)
                                    ensureIdentifier([, expression)
                                      reportRecoverableErrorWithToken(], Template(ExpectedIdentifier))
                                        listener: handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got ']'., Try inserting an identifier before ']'., {lexeme: ]}], ], ])
                                      rewriter()
                                      listener: handleIdentifier(, expression)
                                    listener: handleNoTypeArguments(])
                                    parseArgumentsOpt()
                                      listener: handleNoArguments(])
                                    listener: handleSend(, )
                          listener: handleIndexedExpression(null, [, ])
                        parseArgumentOrIndexStar(], NoTypeParamOrArg(), false)
                        listener: endCascade()
                  ensureSemicolon(])
                  listener: handleExpressionStatement(builder, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, FilterSet)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(FilterSet)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(;, true, ConstantPatternContext.none)
                        parsePrimary(;, expression, ConstantPatternContext.none)
                          parseSendOrFunctionLiteral(;, expression, ConstantPatternContext.none)
                            looksLikeFunctionBody(;)
                            parseSend(;, expression, ConstantPatternContext.none)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(FilterSet, expression)
                              listener: handleNoTypeArguments(()
                              parseArgumentsOpt(FilterSet)
                                parseArguments(FilterSet)
                                  parseArgumentsRest(()
                                    listener: beginArguments(()
                                    allowedToShortcutParseExpression()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral((, ConstantPatternContext.none)
                                              listener: handleNoTypeVariables(()
                                              parseFunctionExpression(()
                                                listener: beginFunctionExpression(()
                                                parseFormalParametersRequiredOpt((, MemberKind.Local)
                                                  parseFormalParametersRest((, MemberKind.Local)
                                                    listener: beginFormalParameters((, MemberKind.Local)
                                                    parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.Local)
                                                      parseMetadataStar(()
                                                        listener: beginMetadataStar(builder)
                                                        listener: endMetadataStar(0)
                                                      listener: beginFormalParameter(builder, MemberKind.Local, null, null, null)
                                                      listener: handleNoType(()
                                                      ensureIdentifier((, formalParameterDeclaration)
                                                        listener: handleIdentifier(builder, formalParameterDeclaration)
                                                      listener: handleFormalParameterWithoutValue())
                                                      listener: endFormalParameter(null, null, null, builder, null, null, FormalParameterKind.requiredPositional, MemberKind.Local)
                                                    listener: endFormalParameters(1, (, ), MemberKind.Local)
                                                parseAsyncOptBody(), true, false)
                                                  parseAsyncModifierOpt())
                                                    listener: handleAsyncModifier(null, null)
                                                    inPlainSync()
                                                  parseFunctionBody(), true, false)
                                                    parseExpressionFunctionBody(=>, true)
                                                      parseExpression(=>)
                                                        parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                                                          parseUnaryExpression(=>, true, ConstantPatternContext.none)
                                                            parsePrimary(=>, expression, ConstantPatternContext.none)
                                                              parseSendOrFunctionLiteral(=>, expression, ConstantPatternContext.none)
                                                                parseSend(=>, expression, ConstantPatternContext.none)
                                                                  ensureIdentifier(=>, expression)
                                                                    listener: handleIdentifier(builder, expression)
                                                                  listener: handleNoTypeArguments(..)
                                                                  parseArgumentsOpt(builder)
                                                                    listener: handleNoArguments(..)
                                                                  listener: handleSend(builder, builder)
                                                          parseCascadeExpression(builder)
                                                            listener: beginCascade(..)
                                                            parseSend(.., expressionContinuation, ConstantPatternContext.none)
                                                              ensureIdentifier(.., expressionContinuation)
                                                                listener: handleIdentifier(foo, expressionContinuation)
                                                              listener: handleNoTypeArguments([)
                                                              parseArgumentsOpt(foo)
                                                                listener: handleNoArguments([)
                                                              listener: handleSend(foo, foo)
                                                            listener: handleCascadeAccess(.., foo, false)
                                                            parseArgumentOrIndexStar(foo, NoTypeParamOrArg(), false)
                                                              parseExpression([)
                                                                parsePrecedenceExpression([, 1, true, ConstantPatternContext.none)
                                                                  parseUnaryExpression([, true, ConstantPatternContext.none)
                                                                    parsePrimary([, expression, ConstantPatternContext.none)
                                                                      parseSend([, expression, ConstantPatternContext.none)
                                                                        ensureIdentifier([, expression)
                                                                          reportRecoverableErrorWithToken(], Template(ExpectedIdentifier))
                                                                            listener: handleRecoverableError(Message[Template(ExpectedIdentifier), Expected an identifier, but got ']'., Try inserting an identifier before ']'., {lexeme: ]}], ], ])
                                                                          rewriter()
                                                                          listener: handleIdentifier(, expression)
                                                                        listener: handleNoTypeArguments(])
                                                                        parseArgumentsOpt()
                                                                          listener: handleNoArguments(])
                                                                        listener: handleSend(, )
                                                              listener: handleIndexedExpression(null, [, ])
                                                            parseArgumentOrIndexStar(], NoTypeParamOrArg(), false)
                                                            listener: endCascade()
                                                      listener: handleExpressionFunctionBody(=>, null)
                                                      inGenerator()
                                                listener: endFunctionExpression((, ])
                                    listener: endArguments(1, (, ))
                              listener: handleSend(FilterSet, ))
                  ensureSemicolon())
                  listener: handleExpressionStatement(FilterSet, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, })
          listener: endBlockFunctionBody(6, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(})
  reportAllErrorTokens(void)
  listener: endCompilationUnit(1, )
