parseUnit(var)
  skipErrorTokens(var)
  listener: beginCompilationUnit(var)
  syntheticPreviousToken(var)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(var)
      skipOuterPattern(var)
        skipObjectPatternRest(x)
      parseFields(, null, null, null, null, null, null, var, var, NoType(), x, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, var, )
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(x, topLevelVariableDeclaration)
        parseFieldInitializerOpt(x, x, null, null, null, null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parseThrowExpression(=, true)
              parseExpression(throw)
                parsePrecedenceExpression(throw, 1, true, ConstantPatternContext.none)
                  parseUnaryExpression(throw, true, ConstantPatternContext.none)
                    parsePrimary(throw, expression, ConstantPatternContext.none)
                      parseLiteralInt(throw)
                        listener: handleLiteralInt(0)
                  parseCascadeExpression(0)
                    listener: beginCascade(..)
                    parseSend(.., expressionContinuation, ConstantPatternContext.none)
                      ensureIdentifier(.., expressionContinuation)
                        listener: handleIdentifier(isEven, expressionContinuation)
                      listener: handleNoTypeArguments(;)
                      parseArgumentsOpt(isEven)
                        listener: handleNoArguments(;)
                      listener: handleSend(isEven, isEven)
                    listener: handleCascadeAccess(.., isEven, false)
                    parseArgumentOrIndexStar(isEven, NoTypeParamOrArg(), false)
                    listener: endCascade()
              listener: handleThrowExpression(throw, isEven)
          listener: endFieldInitializer(=, isEven)
        listener: endTopLevelFields(null, null, null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(;, null, null, ;, VoidType(), null, foo, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(foo, topLevelFunctionDeclaration)
        parseMethodTypeVar(foo)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(foo, foo, false, MemberKind.TopLevelMethod)
          parseFormalParameters(foo, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrType(CLOSE_CURLY_BRACKET, var)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers(var, {, null, var, null, null)
                looksLikeLocalFunction(x)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
                listener: handleNoType(var)
                listener: beginVariablesDeclaration(x, null, var)
                parseVariablesDeclarationRest(var, true)
                  parseOptionallyInitializedIdentifier(var)
                    ensureIdentifier(var, localVariableDeclaration)
                      listener: handleIdentifier(x, localVariableDeclaration)
                    listener: beginInitializedIdentifier(x)
                    parseVariableInitializerOpt(x)
                      listener: handleNoVariableInitializer(x)
                    listener: endInitializedIdentifier(x)
                  ensureSemicolon(x)
                  listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, print)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(print)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(;, true, ConstantPatternContext.none)
                        parsePrimary(;, expression, ConstantPatternContext.none)
                          parseSendOrFunctionLiteral(;, expression, ConstantPatternContext.none)
                            looksLikeFunctionBody(;)
                            parseSend(;, expression, ConstantPatternContext.none)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(print, expression)
                              listener: handleNoTypeArguments(()
                              parseArgumentsOpt(print)
                                parseArguments(print)
                                  parseArgumentsRest(()
                                    listener: beginArguments(()
                                    allowedToShortcutParseExpression()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseSendOrFunctionLiteral((, expression, ConstantPatternContext.none)
                                              parseSend((, expression, ConstantPatternContext.none)
                                                ensureIdentifier((, expression)
                                                  listener: handleIdentifier(x, expression)
                                                listener: handleNoTypeArguments(=)
                                                parseArgumentsOpt(x)
                                                  listener: handleNoArguments(=)
                                                listener: handleSend(x, x)
                                        parseThrowExpression(=, true)
                                          parseExpression(throw)
                                            parsePrecedenceExpression(throw, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(throw, true, ConstantPatternContext.none)
                                                parsePrimary(throw, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(throw)
                                                    listener: handleLiteralInt(0)
                                              parseCascadeExpression(0)
                                                listener: beginCascade(..)
                                                parseSend(.., expressionContinuation, ConstantPatternContext.none)
                                                  ensureIdentifier(.., expressionContinuation)
                                                    listener: handleIdentifier(isEven, expressionContinuation)
                                                  listener: handleNoTypeArguments())
                                                  parseArgumentsOpt(isEven)
                                                    listener: handleNoArguments())
                                                  listener: handleSend(isEven, isEven)
                                                listener: handleCascadeAccess(.., isEven, false)
                                                parseArgumentOrIndexStar(isEven, NoTypeParamOrArg(), false)
                                                listener: endCascade()
                                          listener: handleThrowExpression(throw, isEven)
                                        listener: handleAssignmentExpression(=, isEven)
                                    listener: endArguments(1, (, ))
                              listener: handleSend(print, ))
                  ensureSemicolon())
                  listener: handleExpressionStatement(print, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, })
          listener: endBlockFunctionBody(2, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, }, class, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(A, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, A)
        parseClass(A, class, class, null, A)
          parsePrimaryConstructorOpt(A, null, false)
            listener: handleNoPrimaryConstructor(A, null, false)
          parseClassHeaderOpt(A, class, class)
            parseClassExtendsOpt(A, DeclarationHeaderKind.Class)
              listener: handleNoType(A)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(A)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(A)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(A, DeclarationKind.Class, A)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrType(CLOSE_CURLY_BRACKET, var)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, A)
              parseMetadataStar({)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
              listener: beginMember()
              skipOuterPattern(var)
                skipObjectPatternRest(x)
              parseFields({, null, null, null, null, null, null, var, var, NoType(), x, DeclarationKind.Class, A, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, null, null, null, var, {)
                listener: handleNoType(var)
                ensureIdentifierPotentiallyRecovered(var, fieldDeclaration, false)
                  listener: handleIdentifier(x, fieldDeclaration)
                parseFieldInitializerOpt(x, x, null, null, null, null, var, DeclarationKind.Class, A)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, null, null, null, null, var, 1, var, ;)
              listener: endMember()
            notEofOrType(CLOSE_CURLY_BRACKET, A)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, A)
              parseMetadataStar(;)
                listener: beginMetadataStar(A)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, null, null, null, null, ;, NoType(), null, A, DeclarationKind.Class, A, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, A, A)
                listener: handleNoType(;)
                ensureIdentifierPotentiallyRecovered(;, methodDeclaration, false)
                  listener: handleIdentifier(A, methodDeclaration)
                parseQualifiedRestOpt(A, methodDeclarationContinuation)
                parseMethodTypeVar(A)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(A, A, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(A, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  parseInitializers(:)
                    listener: beginInitializers(:)
                    parseInitializer(:)
                      listener: beginInitializer(x)
                      parseInitializerExpressionRest(:)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                              parsePrimary(:, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(:, expression, ConstantPatternContext.none)
                                  parseSend(:, expression, ConstantPatternContext.none)
                                    ensureIdentifier(:, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(=)
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(=)
                                    listener: handleSend(x, x)
                            parseThrowExpression(=, true)
                              parseExpression(throw)
                                parsePrecedenceExpression(throw, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(throw, true, ConstantPatternContext.none)
                                    parsePrimary(throw, expression, ConstantPatternContext.none)
                                      parseLiteralInt(throw)
                                        listener: handleLiteralInt(1)
                                  parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                                    parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                                      parseSend(., expressionContinuation, ConstantPatternContext.none)
                                        ensureIdentifier(., expressionContinuation)
                                          listener: handleIdentifier(isEven, expressionContinuation)
                                        listener: handleNoTypeArguments(;)
                                        parseArgumentsOpt(isEven)
                                          listener: handleNoArguments(;)
                                        listener: handleSend(isEven, isEven)
                                  listener: handleDotAccess(., isEven, false)
                              listener: handleThrowExpression(throw, isEven)
                            listener: handleAssignmentExpression(=, isEven)
                        listener: endInitializer(isEven)
                    listener: endInitializers(1, :, isEven)
                parseAsyncModifierOpt(isEven)
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(isEven, false, true)
                  listener: handleEmptyFunctionBody(;)
                listener: endClassConstructor(null, A, (, :, ;)
              listener: endMember()
            notEofOrType(CLOSE_CURLY_BRACKET, A)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, A)
              parseMetadataStar(;)
                listener: beginMetadataStar(A)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, null, null, null, null, ;, NoType(), null, A, DeclarationKind.Class, A, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, A, A)
                listener: handleNoType(;)
                ensureIdentifierPotentiallyRecovered(;, methodDeclaration, false)
                  listener: handleIdentifier(A, methodDeclaration)
                parseQualifiedRestOpt(A, methodDeclarationContinuation)
                parseMethodTypeVar(A)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(A, A, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(A, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  parseInitializers(:)
                    listener: beginInitializers(:)
                    parseInitializer(:)
                      listener: beginInitializer(this)
                      parseInitializerExpressionRest(:)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                              parsePrimary(:, expression, ConstantPatternContext.none)
                                parseThisExpression(:, expression)
                                  listener: handleThisExpression(this, expression)
                            parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                              parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                                parseSend(., expressionContinuation, ConstantPatternContext.none)
                                  ensureIdentifier(., expressionContinuation)
                                    listener: handleIdentifier(x, expressionContinuation)
                                  listener: handleNoTypeArguments(=)
                                  parseArgumentsOpt(x)
                                    listener: handleNoArguments(=)
                                  listener: handleSend(x, x)
                            listener: handleDotAccess(., x, false)
                            parseThrowExpression(=, true)
                              parseExpression(throw)
                                parsePrecedenceExpression(throw, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(throw, true, ConstantPatternContext.none)
                                    parsePrimary(throw, expression, ConstantPatternContext.none)
                                      parseLiteralInt(throw)
                                        listener: handleLiteralInt(2)
                                  parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                                    parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                                      parseSend(., expressionContinuation, ConstantPatternContext.none)
                                        ensureIdentifier(., expressionContinuation)
                                          listener: handleIdentifier(isEven, expressionContinuation)
                                        listener: handleNoTypeArguments(;)
                                        parseArgumentsOpt(isEven)
                                          listener: handleNoArguments(;)
                                        listener: handleSend(isEven, isEven)
                                  listener: handleDotAccess(., isEven, false)
                              listener: handleThrowExpression(throw, isEven)
                            listener: handleAssignmentExpression(=, isEven)
                        listener: endInitializer(isEven)
                    listener: endInitializers(1, :, isEven)
                parseAsyncModifierOpt(isEven)
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(isEven, false, true)
                  listener: handleEmptyFunctionBody(;)
                listener: endClassConstructor(null, A, (, :, ;)
              listener: endMember()
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 3, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, }, class, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(A, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, A)
        parseClass(A, class, class, null, A)
          parsePrimaryConstructorOpt(A, null, false)
            listener: handleNoPrimaryConstructor(A, null, false)
          parseClassHeaderOpt(A, class, class)
            parseClassExtendsOpt(A, DeclarationHeaderKind.Class)
              listener: handleNoType(A)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(A)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(A)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(A, DeclarationKind.Class, A)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrType(CLOSE_CURLY_BRACKET, var)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, A)
              parseMetadataStar({)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
              listener: beginMember()
              skipOuterPattern(var)
                skipObjectPatternRest(x)
              parseFields({, null, null, null, null, null, null, var, var, NoType(), x, DeclarationKind.Class, A, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, null, null, null, var, {)
                listener: handleNoType(var)
                ensureIdentifierPotentiallyRecovered(var, fieldDeclaration, false)
                  listener: handleIdentifier(x, fieldDeclaration)
                parseFieldInitializerOpt(x, x, null, null, null, null, var, DeclarationKind.Class, A)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, null, null, null, null, var, 1, var, ;)
              listener: endMember()
            notEofOrType(CLOSE_CURLY_BRACKET, A)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, A)
              parseMetadataStar(;)
                listener: beginMetadataStar(A)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, null, null, null, null, ;, NoType(), null, A, DeclarationKind.Class, A, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, A, A)
                listener: handleNoType(;)
                ensureIdentifierPotentiallyRecovered(;, methodDeclaration, false)
                  listener: handleIdentifier(A, methodDeclaration)
                parseQualifiedRestOpt(A, methodDeclarationContinuation)
                parseMethodTypeVar(A)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(A, A, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(A, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  parseInitializers(:)
                    listener: beginInitializers(:)
                    parseInitializer(:)
                      listener: beginInitializer(x)
                      parseInitializerExpressionRest(:)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                              parsePrimary(:, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(:, expression, ConstantPatternContext.none)
                                  parseSend(:, expression, ConstantPatternContext.none)
                                    ensureIdentifier(:, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(=)
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(=)
                                    listener: handleSend(x, x)
                            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                              parseUnaryExpression(=, true, ConstantPatternContext.none)
                                parsePrimary(=, expression, ConstantPatternContext.none)
                                  parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                    parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                      listener: beginParenthesizedExpressionOrRecordLiteral(()
                                      parseExpression(()
                                        parseThrowExpression((, true)
                                          parseExpression(throw)
                                            parsePrecedenceExpression(throw, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(throw, true, ConstantPatternContext.none)
                                                parsePrimary(throw, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(throw)
                                                    listener: handleLiteralInt(3)
                                              parseCascadeExpression(3)
                                                listener: beginCascade(..)
                                                parseSend(.., expressionContinuation, ConstantPatternContext.none)
                                                  ensureIdentifier(.., expressionContinuation)
                                                    listener: handleIdentifier(isEven, expressionContinuation)
                                                  listener: handleNoTypeArguments())
                                                  parseArgumentsOpt(isEven)
                                                    listener: handleNoArguments())
                                                  listener: handleSend(isEven, isEven)
                                                listener: handleCascadeAccess(.., isEven, false)
                                                parseArgumentOrIndexStar(isEven, NoTypeParamOrArg(), false)
                                                listener: endCascade()
                                          listener: handleThrowExpression(throw, isEven)
                                      ensureCloseParen(isEven, ()
                                      listener: endParenthesizedExpression(()
                            listener: handleAssignmentExpression(=, ))
                        listener: endInitializer())
                    listener: endInitializers(1, :, ))
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  listener: handleEmptyFunctionBody(;)
                listener: endClassConstructor(null, A, (, :, ;)
              listener: endMember()
            notEofOrType(CLOSE_CURLY_BRACKET, A)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, A)
              parseMetadataStar(;)
                listener: beginMetadataStar(A)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, null, null, null, null, ;, NoType(), null, A, DeclarationKind.Class, A, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, A, A)
                listener: handleNoType(;)
                ensureIdentifierPotentiallyRecovered(;, methodDeclaration, false)
                  listener: handleIdentifier(A, methodDeclaration)
                parseQualifiedRestOpt(A, methodDeclarationContinuation)
                parseMethodTypeVar(A)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(A, A, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(A, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  parseInitializers(:)
                    listener: beginInitializers(:)
                    parseInitializer(:)
                      listener: beginInitializer(this)
                      parseInitializerExpressionRest(:)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                              parsePrimary(:, expression, ConstantPatternContext.none)
                                parseThisExpression(:, expression)
                                  listener: handleThisExpression(this, expression)
                            parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                              parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                                parseSend(., expressionContinuation, ConstantPatternContext.none)
                                  ensureIdentifier(., expressionContinuation)
                                    listener: handleIdentifier(x, expressionContinuation)
                                  listener: handleNoTypeArguments(=)
                                  parseArgumentsOpt(x)
                                    listener: handleNoArguments(=)
                                  listener: handleSend(x, x)
                            listener: handleDotAccess(., x, false)
                            parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                              parseUnaryExpression(=, true, ConstantPatternContext.none)
                                parsePrimary(=, expression, ConstantPatternContext.none)
                                  parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                    parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                      listener: beginParenthesizedExpressionOrRecordLiteral(()
                                      parseExpression(()
                                        parseThrowExpression((, true)
                                          parseExpression(throw)
                                            parsePrecedenceExpression(throw, 1, true, ConstantPatternContext.none)
                                              parseUnaryExpression(throw, true, ConstantPatternContext.none)
                                                parsePrimary(throw, expression, ConstantPatternContext.none)
                                                  parseLiteralInt(throw)
                                                    listener: handleLiteralInt(4)
                                              parseCascadeExpression(4)
                                                listener: beginCascade(..)
                                                parseSend(.., expressionContinuation, ConstantPatternContext.none)
                                                  ensureIdentifier(.., expressionContinuation)
                                                    listener: handleIdentifier(isEven, expressionContinuation)
                                                  listener: handleNoTypeArguments())
                                                  parseArgumentsOpt(isEven)
                                                    listener: handleNoArguments())
                                                  listener: handleSend(isEven, isEven)
                                                listener: handleCascadeAccess(.., isEven, false)
                                                parseArgumentOrIndexStar(isEven, NoTypeParamOrArg(), false)
                                                listener: endCascade()
                                          listener: handleThrowExpression(throw, isEven)
                                      ensureCloseParen(isEven, ()
                                      listener: endParenthesizedExpression(()
                            listener: handleAssignmentExpression(=, ))
                        listener: endInitializer())
                    listener: endInitializers(1, :, ))
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  listener: handleEmptyFunctionBody(;)
                listener: endClassConstructor(null, A, (, :, ;)
              listener: endMember()
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 3, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(})
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, }, class, null, null, null, null, DirectiveContext(DirectiveState.Declarations))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(A, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, A)
        parseClass(A, class, class, null, A)
          parsePrimaryConstructorOpt(A, null, false)
            listener: handleNoPrimaryConstructor(A, null, false)
          parseClassHeaderOpt(A, class, class)
            parseClassExtendsOpt(A, DeclarationHeaderKind.Class)
              listener: handleNoType(A)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(A)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(A)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(A, DeclarationKind.Class, A)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrType(CLOSE_CURLY_BRACKET, var)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, A)
              parseMetadataStar({)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
              listener: beginMember()
              skipOuterPattern(var)
                skipObjectPatternRest(x)
              parseFields({, null, null, null, null, null, null, var, var, NoType(), x, DeclarationKind.Class, A, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, null, null, null, var, {)
                listener: handleNoType(var)
                ensureIdentifierPotentiallyRecovered(var, fieldDeclaration, false)
                  listener: handleIdentifier(x, fieldDeclaration)
                parseFieldInitializerOpt(x, x, null, null, null, null, var, DeclarationKind.Class, A)
                  listener: handleNoFieldInitializer(;)
                listener: endClassFields(null, null, null, null, null, null, var, 1, var, ;)
              listener: endMember()
            notEofOrType(CLOSE_CURLY_BRACKET, A)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, A)
              parseMetadataStar(;)
                listener: beginMetadataStar(A)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, null, null, null, null, ;, NoType(), null, A, DeclarationKind.Class, A, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, A, A)
                listener: handleNoType(;)
                ensureIdentifierPotentiallyRecovered(;, methodDeclaration, false)
                  listener: handleIdentifier(A, methodDeclaration)
                parseQualifiedRestOpt(A, methodDeclarationContinuation)
                parseMethodTypeVar(A)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(A, A, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(A, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  parseInitializers(:)
                    listener: beginInitializers(:)
                    parseInitializer(:)
                      listener: beginInitializer(x)
                      parseInitializerExpressionRest(:)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                              parsePrimary(:, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(:, expression, ConstantPatternContext.none)
                                  parseSend(:, expression, ConstantPatternContext.none)
                                    ensureIdentifier(:, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(=)
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(=)
                                    listener: handleSend(x, x)
                            parseThrowExpression(=, true)
                              parseExpression(throw)
                                parsePrecedenceExpression(throw, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(throw, true, ConstantPatternContext.none)
                                    parsePrimary(throw, expression, ConstantPatternContext.none)
                                      parseLiteralInt(throw)
                                        listener: handleLiteralInt(5)
                                  parseCascadeExpression(5)
                                    listener: beginCascade(..)
                                    parseSend(.., expressionContinuation, ConstantPatternContext.none)
                                      ensureIdentifier(.., expressionContinuation)
                                        listener: handleIdentifier(isEven, expressionContinuation)
                                      listener: handleNoTypeArguments(;)
                                      parseArgumentsOpt(isEven)
                                        listener: handleNoArguments(;)
                                      listener: handleSend(isEven, isEven)
                                    listener: handleCascadeAccess(.., isEven, false)
                                    parseArgumentOrIndexStar(isEven, NoTypeParamOrArg(), false)
                                    listener: endCascade()
                              listener: handleThrowExpression(throw, isEven)
                            listener: handleAssignmentExpression(=, isEven)
                        listener: endInitializer(isEven)
                    listener: endInitializers(1, :, isEven)
                parseAsyncModifierOpt(isEven)
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(isEven, false, true)
                  listener: handleEmptyFunctionBody(;)
                listener: endClassConstructor(null, A, (, :, ;)
              listener: endMember()
            notEofOrType(CLOSE_CURLY_BRACKET, A)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, A)
              parseMetadataStar(;)
                listener: beginMetadataStar(A)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod(;, null, null, null, null, null, null, null, ;, NoType(), null, A, DeclarationKind.Class, A, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, A, A)
                listener: handleNoType(;)
                ensureIdentifierPotentiallyRecovered(;, methodDeclaration, false)
                  listener: handleIdentifier(A, methodDeclaration)
                parseQualifiedRestOpt(A, methodDeclarationContinuation)
                parseMethodTypeVar(A)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(A, A, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(A, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  parseInitializers(:)
                    listener: beginInitializers(:)
                    parseInitializer(:)
                      listener: beginInitializer(this)
                      parseInitializerExpressionRest(:)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                              parsePrimary(:, expression, ConstantPatternContext.none)
                                parseThisExpression(:, expression)
                                  listener: handleThisExpression(this, expression)
                            parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                              parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                                parseSend(., expressionContinuation, ConstantPatternContext.none)
                                  ensureIdentifier(., expressionContinuation)
                                    listener: handleIdentifier(x, expressionContinuation)
                                  listener: handleNoTypeArguments(=)
                                  parseArgumentsOpt(x)
                                    listener: handleNoArguments(=)
                                  listener: handleSend(x, x)
                            listener: handleDotAccess(., x, false)
                            parseThrowExpression(=, true)
                              parseExpression(throw)
                                parsePrecedenceExpression(throw, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(throw, true, ConstantPatternContext.none)
                                    parsePrimary(throw, expression, ConstantPatternContext.none)
                                      parseLiteralInt(throw)
                                        listener: handleLiteralInt(6)
                                  parseCascadeExpression(6)
                                    listener: beginCascade(..)
                                    parseSend(.., expressionContinuation, ConstantPatternContext.none)
                                      ensureIdentifier(.., expressionContinuation)
                                        listener: handleIdentifier(isEven, expressionContinuation)
                                      listener: handleNoTypeArguments(;)
                                      parseArgumentsOpt(isEven)
                                        listener: handleNoArguments(;)
                                      listener: handleSend(isEven, isEven)
                                    listener: handleCascadeAccess(.., isEven, false)
                                    parseArgumentOrIndexStar(isEven, NoTypeParamOrArg(), false)
                                    listener: endCascade()
                              listener: handleThrowExpression(throw, isEven)
                            listener: handleAssignmentExpression(=, isEven)
                        listener: endInitializer(isEven)
                    listener: endInitializers(1, :, isEven)
                parseAsyncModifierOpt(isEven)
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(isEven, false, true)
                  listener: handleEmptyFunctionBody(;)
                listener: endClassConstructor(null, A, (, :, ;)
              listener: endMember()
            notEofOrType(CLOSE_CURLY_BRACKET, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 3, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(})
  reportAllErrorTokens(var)
  listener: endCompilationUnit(5, )
