parseUnit(void)
  skipErrorTokens(void)
  listener: beginCompilationUnit(void)
  syntheticPreviousToken(void)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(void)
      parseFields(, null, null, null, null, null, null, null, , Instance of 'ComplexTypeInfo', f, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, )
        listener: beginFunctionType(void)
        listener: handleNoTypeVariables(()
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            parseOptionalNamedParameters((, MemberKind.GeneralizedFunctionType)
              listener: beginOptionalFormalParameters({)
              parseFormalParameter({, FormalParameterKind.optionalNamed, MemberKind.GeneralizedFunctionType)
                parseMetadataStar({)
                  listener: beginMetadataStar(required)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(required, MemberKind.GeneralizedFunctionType, required, null, null)
                listener: beginFunctionType(int)
                listener: handleNoTypeVariables(()
                ensureIdentifier(required, typeReference)
                  listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(Function)
                listener: handleType(int, null)
                parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
                  parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
                    listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
                    listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
                listener: endFunctionType(Function, null)
                ensureIdentifier(), formalParameterDeclaration)
                  insertSyntheticIdentifier(), formalParameterDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got '}'., Try inserting an identifier before '}'., {lexeme: }}], messageOnToken: null)
                    reportRecoverableError(}, Message[ExpectedIdentifier, Expected an identifier, but got '}'., Try inserting an identifier before '}'., {lexeme: }}])
                      listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '}'., Try inserting an identifier before '}'., {lexeme: }}], }, })
                    rewriter()
                  listener: handleIdentifier(, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(})
                listener: endFormalParameter(null, null, null, , null, null, FormalParameterKind.requiredNamed, MemberKind.GeneralizedFunctionType)
              listener: endOptionalFormalParameters(1, {, })
            ensureCloseParen(}, ()
            listener: endFormalParameters(1, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureIdentifierPotentiallyRecovered(), topLevelVariableDeclaration, false)
          listener: handleIdentifier(f, topLevelVariableDeclaration)
        parseFieldInitializerOpt(f, f, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(;)
        listener: endTopLevelFields(null, null, null, null, null, 1, void, ;)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(void)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', g, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        listener: beginFunctionType(void)
        listener: handleNoTypeVariables(()
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            parseOptionalNamedParameters((, MemberKind.GeneralizedFunctionType)
              listener: beginOptionalFormalParameters({)
              parseFormalParameter({, FormalParameterKind.optionalNamed, MemberKind.GeneralizedFunctionType)
                parseMetadataStar({)
                  listener: beginMetadataStar(required)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(required, MemberKind.GeneralizedFunctionType, required, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(})
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  insertSyntheticIdentifier(int, formalParameterDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got '}'., Try inserting an identifier before '}'., {lexeme: }}], messageOnToken: null)
                    reportRecoverableError(}, Message[ExpectedIdentifier, Expected an identifier, but got '}'., Try inserting an identifier before '}'., {lexeme: }}])
                      listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '}'., Try inserting an identifier before '}'., {lexeme: }}], }, })
                    rewriter()
                  listener: handleIdentifier(, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(})
                listener: endFormalParameter(null, null, null, , null, null, FormalParameterKind.requiredNamed, MemberKind.GeneralizedFunctionType)
              listener: endOptionalFormalParameters(1, {, })
            ensureCloseParen(}, ()
            listener: endFormalParameters(1, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureIdentifierPotentiallyRecovered(), topLevelVariableDeclaration, false)
          listener: handleIdentifier(g, topLevelVariableDeclaration)
        parseFieldInitializerOpt(g, g, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(;)
        listener: endTopLevelFields(null, null, null, null, null, 1, void, ;)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(void)
      parseFields(;, null, null, null, null, null, null, null, ;, Instance of 'ComplexTypeInfo', h, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, ;)
        listener: beginFunctionType(void)
        listener: handleNoTypeVariables(()
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            parseOptionalNamedParameters((, MemberKind.GeneralizedFunctionType)
              listener: beginOptionalFormalParameters({)
              parseFormalParameter({, FormalParameterKind.optionalNamed, MemberKind.GeneralizedFunctionType)
                parseMetadataStar({)
                  listener: beginMetadataStar(required)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(required, MemberKind.GeneralizedFunctionType, required, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(,)
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  insertSyntheticIdentifier(int, formalParameterDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got ','., Try inserting an identifier before ','., {lexeme: ,}], messageOnToken: null)
                    reportRecoverableError(,, Message[ExpectedIdentifier, Expected an identifier, but got ','., Try inserting an identifier before ','., {lexeme: ,}])
                      listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got ','., Try inserting an identifier before ','., {lexeme: ,}], ,, ,)
                    rewriter()
                  listener: handleIdentifier(, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, , null, null, FormalParameterKind.requiredNamed, MemberKind.GeneralizedFunctionType)
              parseFormalParameter(,, FormalParameterKind.optionalNamed, MemberKind.GeneralizedFunctionType)
                parseMetadataStar(,)
                  listener: beginMetadataStar(required)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(required, MemberKind.GeneralizedFunctionType, required, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(})
                listener: handleType(int, null)
                ensureIdentifier(int, formalParameterDeclaration)
                  insertSyntheticIdentifier(int, formalParameterDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got '}'., Try inserting an identifier before '}'., {lexeme: }}], messageOnToken: null)
                    reportRecoverableError(}, Message[ExpectedIdentifier, Expected an identifier, but got '}'., Try inserting an identifier before '}'., {lexeme: }}])
                      listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '}'., Try inserting an identifier before '}'., {lexeme: }}], }, })
                    rewriter()
                  listener: handleIdentifier(, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(})
                listener: endFormalParameter(null, null, null, , null, null, FormalParameterKind.requiredNamed, MemberKind.GeneralizedFunctionType)
              listener: endOptionalFormalParameters(2, {, })
            ensureCloseParen(}, ()
            listener: endFormalParameters(1, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, ?)
        ensureIdentifierPotentiallyRecovered(?, topLevelVariableDeclaration, false)
          listener: handleIdentifier(h, topLevelVariableDeclaration)
        parseFieldInitializerOpt(h, h, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(;)
        listener: endTopLevelFields(null, null, null, null, null, 1, void, ;)
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(void)
  listener: endCompilationUnit(3, )
