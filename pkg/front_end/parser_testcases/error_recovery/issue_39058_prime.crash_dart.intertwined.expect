parseUnit({)
  skipErrorTokens({)
  listener: beginCompilationUnit({)
  syntheticPreviousToken({)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar({)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember({)
    parseInvalidTopLevelDeclaration()
      reportRecoverableErrorWithToken({, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '{'., null, {token: {}], {, {)
      parseInvalidBlock()
        parseBlock(, BlockKind(invalid))
          ensureBlock(, null, null)
          listener: beginBlock({, BlockKind(invalid))
          notEofOrValue(}, <)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, false)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, false)
                  looksLikeLocalFunction(<)
                  parseExpressionStatement({)
                    parseExpression({)
                      parsePrecedenceExpression({, 1, true)
                        parseUnaryExpression({, true)
                          parsePrimary({, expression)
                            parseLiteralListSetMapOrFunction({, null)
                              listener: beginTypeArguments(<)
                              reportRecoverableErrorWithToken([], Instance of 'Template<(Token) => Message>')
                              rewriter()
                              listener: handleIdentifier(, typeReference)
                              listener: handleNoTypeArguments([])
                              listener: handleType(, null)
                              listener: endTypeArguments(1, <, >)
                              reportRecoverableError(}, Message[ExpectedButGot, Expected '[' before this., null, {string: [}])
                              rewriter()
                              parseLiteralListSuffix(>, null)
                                rewriteSquareBrackets(>)
                                  link([, ])
                                  rewriter()
                                listener: handleLiteralList(0, [, null, ])
                    ensureSemicolon(])
                      reportRecoverableError([, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
                      rewriter()
                    listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlock(1, {, }, BlockKind(invalid))
        listener: handleInvalidTopLevelBlock({)
      listener: handleInvalidTopLevelDeclaration(})
  listener: endTopLevelDeclaration()
  reportAllErrorTokens({)
  listener: endCompilationUnit(1, )
