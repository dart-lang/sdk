class abstract = A with B;
class as = A with B;
class assert = A with B;
class async = A with B;
class await = A with B;
class break = A with B;
class case = A with B;
class catch = A with B;
class class = A with B;
class const = A with B;
class continue = A with B;
class covariant = A with B;
class default = A with B;
class deferred = A with B;
class do = A with B;
class dynamic = A with B;
class else = A with B;
class enum = A with B;
class export = A with B;
class extends = A with B;
class extension = A with B;
class external = A with B;
class factory = A with B;
class false = A with B;
class final = A with B;
class finally = A with B;
class for = A with B;
class Function = A with B;
class get = A with B;
class hide = A with B;
class if = A with B;
class implements = A with B;
class import = A with B;
class in = A with B;
class inout = A with B;
class interface = A with B;
class is = A with B;
class late = A with B;
class library = A with B;
class mixin = A with B;
class native = A with B;
class new = A with B;
class null = A with B;
class of = A with B;
class on = A with B;
class operator = A with B;
class out = A with B;
class part = A with B;
class patch = A with B;
class required = A with B;
class rethrow = A with B;
class return = A with B;
class set = A with B;
class show = A with B;
class source = A with B;
class static = A with B;
class super = A with B;
class switch = A with B;
class sync = A with B;
class this = A with B;
class throw = A with B;
class true = A with B;
class try = A with B;
class typedef = A with B;
class var = A with B;
class void = A with B;
class while = A with B;
class with = A with B;
class yield = A with B;
