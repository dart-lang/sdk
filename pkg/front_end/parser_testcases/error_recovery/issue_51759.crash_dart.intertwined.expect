parseUnit(void)
  skipErrorTokens(void)
  listener: beginCompilationUnit(void)
  syntheticPreviousToken(void)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(, null, null, , Instance of 'VoidType', null, foo, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(foo, topLevelFunctionDeclaration)
        parseMethodTypeVar(foo)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(foo, foo, false, MemberKind.TopLevelMethod)
          parseFormalParameters(foo, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, x)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                looksLikeLocalFunction(a)
                listener: beginMetadataStar(x)
                listener: endMetadataStar(0)
                listener: handleIdentifier(x, typeReference)
                listener: handleNoTypeArguments(a)
                listener: handleType(x, null)
                listener: beginVariablesDeclaration(a, null, null)
                parseVariablesDeclarationRest(x, true)
                  parseOptionallyInitializedIdentifier(x)
                    ensureIdentifier(x, localVariableDeclaration)
                      listener: handleIdentifier(a, localVariableDeclaration)
                    listener: beginInitializedIdentifier(a)
                    parseVariableInitializerOpt(a)
                      listener: handleNoVariableInitializer(a)
                    listener: endInitializedIdentifier(a)
                  ensureSemicolon(a)
                    reportRecoverableError(a, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
                      listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], a, a)
                    rewriter()
                  listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, <)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(<)
                  parseExpressionStatement(;)
                    parseExpression(;)
                      parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression(;, true, ConstantPatternContext.none)
                          parsePrimary(;, expression, ConstantPatternContext.none)
                            parseLiteralListSetMapOrFunction(;, null)
                              listener: beginTypeVariables(<)
                              parseMetadataStar(<)
                                listener: beginMetadataStar(B)
                                listener: endMetadataStar(0)
                              ensureIdentifier(<, typeVariableDeclaration)
                                listener: handleIdentifier(B, typeVariableDeclaration)
                              listener: beginTypeVariable(B)
                              listener: handleTypeVariablesDefined(B, 1)
                              listener: handleNoType(B)
                              listener: endTypeVariable(<, 0, null, null)
                              reportRecoverableError(B, Message[ExpectedAfterButGot, Expected '>' after this., null, {string: >}])
                                listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected '>' after this., null, {string: >}], B, B)
                              parseMetadataStar(<)
                              ensureIdentifier(<, typeVariableDeclaration)
                              reportRecoverableError(B, Message[ExpectedAfterButGot, Expected '>' after this., null, {string: >}])
                              parseMetadataStar(<)
                              ensureIdentifier(<, typeVariableDeclaration)
                              reportRecoverableError(B, Message[ExpectedAfterButGot, Expected '>' after this., null, {string: >}])
                              parseMetadataStar(<)
                              ensureIdentifier(<, typeVariableDeclaration)
                              listener: endTypeVariables(<, >)
                              parseLiteralFunctionSuffix(>)
                                reportRecoverableErrorWithToken(;, Instance of 'Template<(Token) => Message>')
                                  listener: handleRecoverableError(Message[UnexpectedToken, Unexpected token ';'., null, {lexeme: ;}], ;, ;)
                                parseFunctionExpression(>)
                                  listener: beginFunctionExpression(()
                                  parseFormalParametersRequiredOpt(>, MemberKind.Local)
                                    parseFormalParametersRest((, MemberKind.Local)
                                      listener: beginFormalParameters((, MemberKind.Local)
                                      listener: endFormalParameters(0, (, ), MemberKind.Local)
                                  parseAsyncOptBody(), true, false)
                                    parseAsyncModifierOpt())
                                      listener: handleAsyncModifier(null, null)
                                      inPlainSync()
                                    parseFunctionBody(), true, false)
                                      reportRecoverableError(;, ExpectedBody)
                                        listener: handleRecoverableError(ExpectedBody, ;, ;)
                                      listener: handleEmptyFunctionBody(;)
                                  listener: endFunctionExpression((, })
                    ensureSemicolon(;)
                      reportRecoverableError(;, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
                        listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], ;, ;)
                      rewriter()
                    listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(2, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(void)
  listener: endCompilationUnit(1, )
