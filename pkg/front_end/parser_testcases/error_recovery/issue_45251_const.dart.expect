Problems reported:

parser/error_recovery/issue_45251_const:3:45: A map literal can't be prefixed by 'Map'.
  final Map<String, Undefined> foo1 = const Map<String, List<int>>{};
                                            ^^^

parser/error_recovery/issue_45251_const:9:45: A map literal can't be prefixed by 'Map'.
  final Map<String, Undefined> foo3 = const Map{};
                                            ^^^

parser/error_recovery/issue_45251_const:18:45: A map literal can't be prefixed by 'Map'.
  final Map<String, Undefined> foo6 = const Map<String, List<int>>{"a": null};
                                            ^^^

parser/error_recovery/issue_45251_const:21:45: A map literal can't be prefixed by 'Map'.
  final Map<String, Undefined> foo7 = const Map{"a": null};
                                            ^^^

beginCompilationUnit(class)
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(F, classOrMixinDeclaration)
    handleNoTypeVariables({)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, F)
      handleNoType(F)
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
        beginMetadataStar(final)
        endMetadataStar(0)
        beginMember()
          beginFields(DeclarationKind.Class, null, null, null, null, null, null, final, {)
            handleIdentifier(Map, typeReference)
            beginTypeArguments(<)
              handleIdentifier(String, typeReference)
              handleNoTypeArguments(,)
              handleType(String, null)
              handleIdentifier(Undefined, typeReference)
              handleNoTypeArguments(>)
              handleType(Undefined, null)
            endTypeArguments(2, <, >)
            handleType(Map, null)
            handleIdentifier(foo1, fieldDeclaration)
            beginFieldInitializer(=)
              handleRecoverableError(Message[LiteralWithClass, A map literal can't be prefixed by 'Map'., Try removing 'Map', {string: map, lexeme: Map}], Map, Map)
              beginConstLiteral(<)
                beginTypeArguments(<)
                  handleIdentifier(String, typeReference)
                  handleNoTypeArguments(,)
                  handleType(String, null)
                  handleIdentifier(List, typeReference)
                  beginTypeArguments(<)
                    handleIdentifier(int, typeReference)
                    handleNoTypeArguments(>)
                    handleType(int, null)
                  endTypeArguments(1, <, >)
                  handleType(List, null)
                endTypeArguments(2, <, >)
                handleLiteralSetOrMap(0, {, const, }, false)
              endConstLiteral(;)
            endFieldInitializer(=, ;)
          endClassFields(null, null, null, null, null, null, final, 1, final, ;)
        endMember()
        beginMetadataStar(final)
        endMetadataStar(0)
        beginMember()
          beginFields(DeclarationKind.Class, null, null, null, null, null, null, final, ;)
            handleIdentifier(Map, typeReference)
            beginTypeArguments(<)
              handleIdentifier(String, typeReference)
              handleNoTypeArguments(,)
              handleType(String, null)
              handleIdentifier(Undefined, typeReference)
              handleNoTypeArguments(>)
              handleType(Undefined, null)
            endTypeArguments(2, <, >)
            handleType(Map, null)
            handleIdentifier(foo2, fieldDeclaration)
            beginFieldInitializer(=)
              beginConstLiteral(<)
                beginTypeArguments(<)
                  handleIdentifier(String, typeReference)
                  handleNoTypeArguments(,)
                  handleType(String, null)
                  handleIdentifier(List, typeReference)
                  beginTypeArguments(<)
                    handleIdentifier(int, typeReference)
                    handleNoTypeArguments(>)
                    handleType(int, null)
                  endTypeArguments(1, <, >)
                  handleType(List, null)
                endTypeArguments(2, <, >)
                handleLiteralSetOrMap(0, {, const, }, false)
              endConstLiteral(;)
            endFieldInitializer(=, ;)
          endClassFields(null, null, null, null, null, null, final, 1, final, ;)
        endMember()
        beginMetadataStar(final)
        endMetadataStar(0)
        beginMember()
          beginFields(DeclarationKind.Class, null, null, null, null, null, null, final, ;)
            handleIdentifier(Map, typeReference)
            beginTypeArguments(<)
              handleIdentifier(String, typeReference)
              handleNoTypeArguments(,)
              handleType(String, null)
              handleIdentifier(Undefined, typeReference)
              handleNoTypeArguments(>)
              handleType(Undefined, null)
            endTypeArguments(2, <, >)
            handleType(Map, null)
            handleIdentifier(foo3, fieldDeclaration)
            beginFieldInitializer(=)
              handleRecoverableError(Message[LiteralWithClass, A map literal can't be prefixed by 'Map'., Try removing 'Map', {string: map, lexeme: Map}], Map, Map)
              beginConstLiteral({)
                handleNoTypeArguments({)
                handleLiteralSetOrMap(0, {, const, }, false)
              endConstLiteral(;)
            endFieldInitializer(=, ;)
          endClassFields(null, null, null, null, null, null, final, 1, final, ;)
        endMember()
        beginMetadataStar(final)
        endMetadataStar(0)
        beginMember()
          beginFields(DeclarationKind.Class, null, null, null, null, null, null, final, ;)
            handleIdentifier(Map, typeReference)
            beginTypeArguments(<)
              handleIdentifier(String, typeReference)
              handleNoTypeArguments(,)
              handleType(String, null)
              handleIdentifier(Undefined, typeReference)
              handleNoTypeArguments(>)
              handleType(Undefined, null)
            endTypeArguments(2, <, >)
            handleType(Map, null)
            handleIdentifier(foo4, fieldDeclaration)
            beginFieldInitializer(=)
              beginConstExpression(const)
                handleIdentifier(Map, constructorReference)
                beginConstructorReference(Map)
                  beginTypeArguments(<)
                    handleIdentifier(String, typeReference)
                    handleNoTypeArguments(,)
                    handleType(String, null)
                    handleIdentifier(List, typeReference)
                    beginTypeArguments(<)
                      handleIdentifier(int, typeReference)
                      handleNoTypeArguments(>)
                      handleType(int, null)
                    endTypeArguments(1, <, >)
                    handleType(List, null)
                  endTypeArguments(2, <, >)
                  handleNoConstructorReferenceContinuationAfterTypeArguments(()
                endConstructorReference(Map, null, (, ConstructorReferenceContext.Const)
                beginArguments(()
                endArguments(0, (, ))
              endConstExpression(const)
            endFieldInitializer(=, ;)
          endClassFields(null, null, null, null, null, null, final, 1, final, ;)
        endMember()
        beginMetadataStar(final)
        endMetadataStar(0)
        beginMember()
          beginFields(DeclarationKind.Class, null, null, null, null, null, null, final, ;)
            handleIdentifier(Map, typeReference)
            beginTypeArguments(<)
              handleIdentifier(String, typeReference)
              handleNoTypeArguments(,)
              handleType(String, null)
              handleIdentifier(Undefined, typeReference)
              handleNoTypeArguments(>)
              handleType(Undefined, null)
            endTypeArguments(2, <, >)
            handleType(Map, null)
            handleIdentifier(foo5, fieldDeclaration)
            beginFieldInitializer(=)
              beginConstExpression(const)
                handleIdentifier(Map, constructorReference)
                beginConstructorReference(Map)
                  handleNoTypeArguments(()
                  handleNoConstructorReferenceContinuationAfterTypeArguments(()
                endConstructorReference(Map, null, (, ConstructorReferenceContext.Const)
                beginArguments(()
                endArguments(0, (, ))
              endConstExpression(const)
            endFieldInitializer(=, ;)
          endClassFields(null, null, null, null, null, null, final, 1, final, ;)
        endMember()
        beginMetadataStar(final)
        endMetadataStar(0)
        beginMember()
          beginFields(DeclarationKind.Class, null, null, null, null, null, null, final, ;)
            handleIdentifier(Map, typeReference)
            beginTypeArguments(<)
              handleIdentifier(String, typeReference)
              handleNoTypeArguments(,)
              handleType(String, null)
              handleIdentifier(Undefined, typeReference)
              handleNoTypeArguments(>)
              handleType(Undefined, null)
            endTypeArguments(2, <, >)
            handleType(Map, null)
            handleIdentifier(foo6, fieldDeclaration)
            beginFieldInitializer(=)
              handleRecoverableError(Message[LiteralWithClass, A map literal can't be prefixed by 'Map'., Try removing 'Map', {string: map, lexeme: Map}], Map, Map)
              beginConstLiteral(<)
                beginTypeArguments(<)
                  handleIdentifier(String, typeReference)
                  handleNoTypeArguments(,)
                  handleType(String, null)
                  handleIdentifier(List, typeReference)
                  beginTypeArguments(<)
                    handleIdentifier(int, typeReference)
                    handleNoTypeArguments(>)
                    handleType(int, null)
                  endTypeArguments(1, <, >)
                  handleType(List, null)
                endTypeArguments(2, <, >)
                beginLiteralString("a")
                endLiteralString(0, :)
                handleLiteralNull(null)
                handleLiteralMapEntry(:, })
                handleLiteralSetOrMap(1, {, const, }, false)
              endConstLiteral(;)
            endFieldInitializer(=, ;)
          endClassFields(null, null, null, null, null, null, final, 1, final, ;)
        endMember()
        beginMetadataStar(final)
        endMetadataStar(0)
        beginMember()
          beginFields(DeclarationKind.Class, null, null, null, null, null, null, final, ;)
            handleIdentifier(Map, typeReference)
            beginTypeArguments(<)
              handleIdentifier(String, typeReference)
              handleNoTypeArguments(,)
              handleType(String, null)
              handleIdentifier(Undefined, typeReference)
              handleNoTypeArguments(>)
              handleType(Undefined, null)
            endTypeArguments(2, <, >)
            handleType(Map, null)
            handleIdentifier(foo7, fieldDeclaration)
            beginFieldInitializer(=)
              handleRecoverableError(Message[LiteralWithClass, A map literal can't be prefixed by 'Map'., Try removing 'Map', {string: map, lexeme: Map}], Map, Map)
              beginConstLiteral({)
                handleNoTypeArguments({)
                beginLiteralString("a")
                endLiteralString(0, :)
                handleLiteralNull(null)
                handleLiteralMapEntry(:, })
                handleLiteralSetOrMap(1, {, const, }, false)
              endConstLiteral(;)
            endFieldInitializer(=, ;)
          endClassFields(null, null, null, null, null, null, final, 1, final, ;)
        endMember()
        beginMetadataStar(final)
        endMetadataStar(0)
        beginMember()
          beginFields(DeclarationKind.Class, null, null, null, null, null, null, final, ;)
            handleIdentifier(Map, typeReference)
            beginTypeArguments(<)
              handleIdentifier(String, typeReference)
              handleNoTypeArguments(,)
              handleType(String, null)
              handleIdentifier(Undefined, typeReference)
              handleNoTypeArguments(>)
              handleType(Undefined, null)
            endTypeArguments(2, <, >)
            handleType(Map, null)
            handleIdentifier(foo8, fieldDeclaration)
            beginFieldInitializer(=)
              beginConstLiteral(<)
                beginTypeArguments(<)
                  handleIdentifier(String, typeReference)
                  handleNoTypeArguments(,)
                  handleType(String, null)
                  handleIdentifier(List, typeReference)
                  beginTypeArguments(<)
                    handleIdentifier(int, typeReference)
                    handleNoTypeArguments(>)
                    handleType(int, null)
                  endTypeArguments(1, <, >)
                  handleType(List, null)
                endTypeArguments(2, <, >)
                beginLiteralString("a")
                endLiteralString(0, :)
                handleLiteralNull(null)
                handleLiteralMapEntry(:, })
                handleLiteralSetOrMap(1, {, const, }, false)
              endConstLiteral(;)
            endFieldInitializer(=, ;)
          endClassFields(null, null, null, null, null, null, final, 1, final, ;)
        endMember()
        beginMetadataStar(final)
        endMetadataStar(0)
        beginMember()
          beginFields(DeclarationKind.Class, null, null, null, null, null, null, final, ;)
            handleIdentifier(Map, typeReference)
            beginTypeArguments(<)
              handleIdentifier(String, typeReference)
              handleNoTypeArguments(,)
              handleType(String, null)
              handleIdentifier(Undefined, typeReference)
              handleNoTypeArguments(>)
              handleType(Undefined, null)
            endTypeArguments(2, <, >)
            handleType(Map, null)
            handleIdentifier(foo9, fieldDeclaration)
            beginFieldInitializer(=)
              beginConstLiteral({)
                handleNoTypeArguments({)
                beginLiteralString("a")
                endLiteralString(0, :)
                handleLiteralNull(null)
                handleLiteralMapEntry(:, })
                handleLiteralSetOrMap(1, {, const, }, false)
              endConstLiteral(;)
            endFieldInitializer(=, ;)
          endClassFields(null, null, null, null, null, null, final, 1, final, ;)
        endMember()
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 9, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration()
endCompilationUnit(1, )
