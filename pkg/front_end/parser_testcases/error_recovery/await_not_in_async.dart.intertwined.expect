parseUnit(Future)
  skipErrorTokens(Future)
  listener: beginCompilationUnit(Future)
  syntheticPreviousToken(Future)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(Future)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(Future)
      parseTopLevelMethod(, null, , Instance of 'ComplexTypeInfo', null, f, false)
        listener: beginTopLevelMethod(, null)
        ensureIdentifier(, typeReference)
          listener: handleIdentifier(Future, typeReference)
        listener: beginTypeArguments(<)
        listener: handleVoidKeyword(void)
        listener: endTypeArguments(1, <, >)
        listener: handleType(Future, null)
        ensureIdentifierPotentiallyRecovered(>, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(f, topLevelFunctionDeclaration)
        parseMethodTypeVar(f)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(f, f, false, MemberKind.TopLevelMethod)
          parseFormalParameters(f, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true)
                parseUnaryExpression(=>, true)
                  parsePrimary(=>, expression)
                    parseSendOrFunctionLiteral(=>, expression)
                      parseSend(=>, expression)
                        ensureIdentifier(=>, expression)
                          listener: handleIdentifier(Future, expression)
                        listener: handleNoTypeArguments(.)
                        parseArgumentsOpt(Future)
                          listener: handleNoArguments(.)
                        listener: handleSend(Future, .)
                parsePrimary(., expressionContinuation)
                  parseSendOrFunctionLiteral(., expressionContinuation)
                    looksLikeFunctionBody(;)
                    parseSend(., expressionContinuation)
                      ensureIdentifier(., expressionContinuation)
                        listener: handleIdentifier(value, expressionContinuation)
                      listener: handleNoTypeArguments(()
                      parseArgumentsOpt(value)
                        parseArguments(value)
                          parseArgumentsRest(()
                            listener: beginArguments(()
                            listener: endArguments(0, (, ))
                      listener: handleSend(value, ;)
                listener: handleEndingBinaryExpression(.)
            ensureSemicolon())
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(Future, null, ;)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(;, null, ;, Instance of 'VoidType', null, g, false)
        listener: beginTopLevelMethod(;, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(g, topLevelFunctionDeclaration)
        parseMethodTypeVar(g)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(g, g, false, MemberKind.TopLevelMethod)
          parseFormalParameters(g, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, await)
          parseStatement({)
            parseStatementX({)
              inPlainSync()
              looksLikeAwaitExpression({)
                looksLikeExpression(await)
              parseExpressionStatement({)
                parseExpression({)
                  parsePrecedenceExpression({, 1, true)
                    parseUnaryExpression({, true)
                      inPlainSync()
                      looksLikeAwaitExpression({)
                        looksLikeExpression(await)
                      parseAwaitExpression({, true)
                        listener: beginAwaitExpression(await)
                        parsePrecedenceExpression(await, 16, true)
                          parseUnaryExpression(await, true)
                            parsePrimary(await, expression)
                              parseSendOrFunctionLiteral(await, expression)
                                looksLikeFunctionBody(;)
                                parseSend(await, expression)
                                  ensureIdentifier(await, expression)
                                    listener: handleIdentifier(f, expression)
                                  listener: handleNoTypeArguments(()
                                  parseArgumentsOpt(f)
                                    parseArguments(f)
                                      parseArgumentsRest(()
                                        listener: beginArguments(()
                                        listener: endArguments(0, (, ))
                                  listener: handleSend(f, ;)
                        inAsync()
                        reportRecoverableError(await, AwaitNotAsync)
                          listener: handleRecoverableError(AwaitNotAsync, await, await)
                        listener: endInvalidAwaitExpression(await, ;, AwaitNotAsync)
                ensureSemicolon())
                listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(Future)
  listener: endCompilationUnit(2, )
