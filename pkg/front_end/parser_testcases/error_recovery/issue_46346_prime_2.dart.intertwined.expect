parseUnit(class)
  skipErrorTokens(class)
  listener: beginCompilationUnit(class)
  syntheticPreviousToken(class)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, class, Instance of 'DirectiveContext')
      parseClassDeclarationModifiers(, class)
      parseClassOrNamedMixinApplication(null, class)
        listener: beginClassOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          insertSyntheticIdentifier(class, classOrMixinDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got ''., Try inserting an identifier before ''., {lexeme: }], messageOnToken: null)
            reportRecoverableError(, Message[ExpectedIdentifier, Expected an identifier, but got ''., Try inserting an identifier before ''., {lexeme: }])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got ''., Try inserting an identifier before ''., {lexeme: }], , )
              listener: // WARNING: Reporting at eof for .
            rewriter()
          listener: handleIdentifier(, classOrMixinDeclaration)
        listener: handleNoTypeVariables()
        listener: beginClassDeclaration(class, null, )
        parseClass(, class, class, )
          parseClassHeaderOpt(, class, class)
            parseClassExtendsOpt()
              listener: handleNoType()
              listener: handleClassExtends(null, 1)
            parseWithClauseOpt()
              listener: handleClassNoWithClause()
            parseClassOrMixinImplementsOpt()
              listener: handleClassOrMixinImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassHeaderRecovery(, class, class)
            parseClassHeaderOpt(, class, class)
              parseClassExtendsOpt()
              parseWithClauseOpt()
              parseClassOrMixinImplementsOpt()
            skipUnexpectedTokenOpt(, [extends, with, implements, {])
            parseClassExtendsOpt()
              listener: handleNoType()
              listener: handleClassExtends(null, 1)
            parseWithClauseOpt()
              listener: handleClassNoWithClause()
            parseClassOrMixinImplementsOpt()
              listener: handleClassOrMixinImplements(null, 0)
            listener: handleRecoverClassHeader()
          ensureBlock(, null, class declaration)
            reportRecoverableError(, Message[ExpectedClassOrMixinBody, A class declaration must have a body, even if it is empty., Try adding an empty body., {string: class declaration}])
              listener: handleRecoverableError(Message[ExpectedClassOrMixinBody, A class declaration must have a body, even if it is empty., Try adding an empty body., {string: class declaration}], , )
              listener: // WARNING: Reporting at eof for .
            insertBlock()
              rewriter()
              rewriter()
          parseClassOrMixinOrExtensionBody(, DeclarationKind.Class, )
            listener: beginClassOrMixinBody(DeclarationKind.Class, {)
            notEofOrValue(}, })
            listener: endClassOrMixinBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(class)
  listener: endCompilationUnit(1, )
