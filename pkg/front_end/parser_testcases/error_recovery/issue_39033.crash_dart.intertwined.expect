parseUnit(typedef)
  skipErrorTokens(typedef)
  listener: beginCompilationUnit(typedef)
  syntheticPreviousToken(typedef)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(typedef, , typedef, null, null, null, null, DirectiveContext(DirectiveState.Unknown))
      parseTypedef(null, typedef)
        listener: beginUncategorizedTopLevelDeclaration(typedef)
        listener: beginTypedef(typedef)
        ensureIdentifierPotentiallyRecovered(typedef, typedefDeclaration, true)
          listener: handleIdentifier(F, typedefDeclaration)
        listener: beginTypeVariables(<)
        parseMetadataStar(<)
          listener: beginMetadataStar(Glib)
          listener: endMetadataStar(0)
        ensureIdentifier(<, typeVariableDeclaration)
          listener: handleIdentifier(Glib, typeVariableDeclaration)
        listener: beginTypeVariable(Glib)
        listener: handleTypeVariablesDefined(Glib, 1)
        listener: handleNoType(Glib)
        listener: endTypeVariable(., 0, null, null)
        reportRecoverableError(Glib, Message[Template(ExpectedAfterButGot), Expected '>' after this., null, {string: >}])
          listener: handleRecoverableError(Message[Template(ExpectedAfterButGot), Expected '>' after this., null, {string: >}], Glib, Glib)
        listener: endTypeVariables(<, >)
        reportRecoverableErrorWithToken(, Template(ExpectedType))
          listener: handleRecoverableError(Message[Template(ExpectedType), Expected a type, but got ''., null, {lexeme: }], , )
          listener: // WARNING: Reporting at eof for .
        rewriter()
        listener: handleIdentifier(, typeReference)
        listener: handleNoTypeArguments()
        listener: handleType(, null)
        ensureSemicolon()
          reportRecoverableError(=, Message[Template(ExpectedAfterButGot), Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[Template(ExpectedAfterButGot), Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endTypedef(null, typedef, =, ;)
  listener: endTopLevelDeclaration(;)
  reportAllErrorTokens(typedef)
  listener: endCompilationUnit(1, )
