parseUnit(class)
  skipErrorTokens(class)
  listener: beginCompilationUnit(class)
  syntheticPreviousToken(class)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, class, null, null, null, null, null, Instance of 'DirectiveContext')
      parseClassOrNamedMixinApplication(null, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(B, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, B)
        parseClass(B, class, class, B)
          parseClassHeaderOpt(B, class, class)
            parseClassExtendsOpt(B)
              listener: handleNoType(B)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(B)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(B)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(B, DeclarationKind.Class, B)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(foo)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(foo)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(foo)
      isReservedKeyword(class)
      indicatesMethodOrField(M1)
      parseFields(}, null, null, null, null, null, null, null, }, Instance of 'NoType', foo, DeclarationKind.TopLevel, null, false)
        listener: beginFields(DeclarationKind.TopLevel, null, null, null, null, null, null, null, })
        reportRecoverableError(foo, MissingConstFinalVarOrType)
          listener: handleRecoverableError(MissingConstFinalVarOrType, foo, foo)
        listener: handleNoType(})
        ensureIdentifierPotentiallyRecovered(}, topLevelVariableDeclaration, false)
          listener: handleIdentifier(foo, topLevelVariableDeclaration)
        parseFieldInitializerOpt(foo, foo, null, null, null, null, null, DeclarationKind.TopLevel, null)
          listener: handleNoFieldInitializer(class)
        ensureSemicolon(foo)
          reportRecoverableError(foo, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], foo, foo)
          rewriter()
        listener: endTopLevelFields(null, null, null, null, null, 1, foo, ;)
  listener: endTopLevelDeclaration(class)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, class, null, null, null, null, null, Instance of 'DirectiveContext')
      parseClassOrNamedMixinApplication(null, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(M1, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, null, M1)
        parseClass(M1, class, class, M1)
          parseClassHeaderOpt(M1, class, class)
            parseClassExtendsOpt(M1)
              listener: handleNoType(M1)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(M1)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(M1)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(M1, DeclarationKind.Class, M1)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, foo)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, M1)
              parseMetadataStar({)
                listener: beginMetadataStar(foo)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(class)
              indicatesMethodOrField(M2)
              parseFields({, null, null, null, null, null, null, null, {, Instance of 'NoType', foo, DeclarationKind.Class, M1, false)
                listener: beginFields(DeclarationKind.Class, null, null, null, null, null, null, null, {)
                reportRecoverableError(foo, MissingConstFinalVarOrType)
                  listener: handleRecoverableError(MissingConstFinalVarOrType, foo, foo)
                listener: handleNoType({)
                ensureIdentifierPotentiallyRecovered({, fieldDeclaration, false)
                  listener: handleIdentifier(foo, fieldDeclaration)
                parseFieldInitializerOpt(foo, foo, null, null, null, null, null, DeclarationKind.Class, M1)
                  listener: handleNoFieldInitializer(class)
                ensureSemicolon(foo)
                  reportRecoverableError(foo, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
                    listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], foo, foo)
                  rewriter()
                listener: endClassFields(null, null, null, null, null, null, null, 1, foo, ;)
              listener: endMember()
            notEofOrValue(}, class)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Class, M1)
              parseMetadataStar(;)
                listener: beginMetadataStar(class)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(;, ;, null, null, null, null, null, null, null, ;, Instance of 'NoType', null, DeclarationKind.Class, M1)
                reportAndSkipClassInClass(class)
                  reportRecoverableError(class, ClassInClass)
                    listener: handleRecoverableError(ClassInClass, class, class)
                  listener: handleInvalidMember(class)
                  listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 2, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(class)
  listener: endCompilationUnit(3, )
