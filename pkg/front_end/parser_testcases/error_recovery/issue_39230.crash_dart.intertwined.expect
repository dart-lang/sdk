parseUnit(class)
  skipErrorTokens(class)
  listener: beginCompilationUnit(class)
  syntheticPreviousToken(class)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(class, , class, null, null, null, null, DirectiveContext(DirectiveState.Unknown))
      parseClassOrNamedMixinApplication(class, null, null, null, null, null, null, null, null, class)
        listener: beginClassOrMixinOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(C, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
        parseClass(C, class, class, C)
          parseClassHeaderOpt(C, class, class)
            parseClassExtendsOpt(C, DeclarationHeaderKind.Class)
              listener: handleNoType(C)
              listener: handleClassExtends(null, 1)
            parseClassWithClauseOpt(C)
              listener: handleClassNoWithClause()
            parseClassOrMixinOrEnumImplementsOpt(C)
              listener: handleImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(C, DeclarationKind.Class, C)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
            notEofOrValue(}, C)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Class, C)
              parseMetadataStar({)
                listener: beginMetadataStar(C)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(()
              parseMethod({, null, null, null, null, null, null, null, {, NoType(), null, C, DeclarationKind.Class, C, false)
                listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, C)
                listener: handleNoType({)
                ensureIdentifierPotentiallyRecovered({, methodDeclaration, false)
                  listener: handleIdentifier(C, methodDeclaration)
                parseQualifiedRestOpt(C, methodDeclarationContinuation)
                parseMethodTypeVar(C)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(C, C, false, MemberKind.NonStaticMethod)
                  parseFormalParameters(C, MemberKind.NonStaticMethod)
                    parseFormalParametersRest((, MemberKind.NonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                      listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  ensureBlock(), BlockKind(function body))
                    reportRecoverableError(/, Message[ExpectedFunctionBody, Expected a function body, but got '/'., null, {lexeme: /}])
                      listener: handleRecoverableError(Message[ExpectedFunctionBody, Expected a function body, but got '/'., null, {lexeme: /}], /, /)
                    insertBlock())
                      rewriter()
                      rewriter()
                  listener: handleInvalidFunctionBody({)
                listener: endClassConstructor(null, C, (, null, })
              listener: endMember()
            notEofOrValue(}, /)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Class, C)
              parseMetadataStar(})
                listener: beginMetadataStar(/)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(}, }, null, null, null, null, null, null, null, }, NoType(), null, DeclarationKind.Class, C)
                parseInvalidOperatorDeclaration(}, null, null, null, null, null, null, null, }, DeclarationKind.Class, C)
                  reportRecoverableError(/, MissingOperatorKeyword)
                    listener: handleRecoverableError(MissingOperatorKeyword, /, /)
                  rewriter()
                  parseMethod(}, null, null, null, null, null, null, null, }, NoType(), null, operator, DeclarationKind.Class, C, false)
                    listener: beginMethod(DeclarationKind.Class, null, null, null, null, null, null, operator)
                    listener: handleNoType(})
                    parseOperatorName(})
                      listener: handleOperatorName(operator, /)
                    parseMethodTypeVar(/)
                      listener: handleNoTypeVariables(:)
                    parseGetterOrFormalParameters(/, operator, false, MemberKind.NonStaticMethod)
                      missingParameterMessage(MemberKind.NonStaticMethod)
                      reportRecoverableError(/, MissingMethodParameters)
                        listener: handleRecoverableError(MissingMethodParameters, /, /)
                      rewriter()
                      parseFormalParametersRest((, MemberKind.NonStaticMethod)
                        listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                        listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                    parseInitializersOpt())
                      parseInitializers(:)
                        listener: beginInitializers(:)
                        parseInitializer(:)
                          listener: beginInitializer(super)
                          parseSuperInitializerExpression(:)
                            parseInitializerExpressionRest(:)
                              parseExpression(:)
                                parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                  parseUnaryExpression(:, true, ConstantPatternContext.none)
                                    parsePrimary(:, expression, ConstantPatternContext.none)
                                      parseSuperExpression(:, expression)
                                        listener: handleSuperExpression(super, expression)
                                        listener: handleNoTypeArguments(()
                                        parseArguments(super)
                                          parseArgumentsRest(()
                                            listener: beginArguments(()
                                            listener: endArguments(0, (, ))
                                        listener: handleSend(super, ;)
                              listener: endInitializer(;)
                        listener: endInitializers(1, :, ;)
                    parseAsyncModifierOpt())
                      listener: handleAsyncModifier(null, null)
                      inPlainSync()
                    inPlainSync()
                    parseFunctionBody(), false, true)
                      listener: handleEmptyFunctionBody(;)
                    reportRecoverableError(operator, ConstructorWithWrongName)
                      listener: handleRecoverableError(ConstructorWithWrongName, /, /)
                    listener: endClassConstructor(null, operator, (, :, ;)
                  listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Class, 2, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(class)
  listener: endCompilationUnit(1, )
