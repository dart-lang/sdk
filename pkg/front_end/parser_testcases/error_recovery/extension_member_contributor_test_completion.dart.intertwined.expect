parseUnit(extension)
  skipErrorTokens(extension)
  listener: beginCompilationUnit(extension)
  syntheticPreviousToken(extension)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(extension)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(extension, , extension, null, null, null, null, DirectiveContext(DirectiveState.Unknown))
      parseExtension(extension, extension)
        listener: beginExtensionDeclarationPrelude(extension)
        parseExtensionDeclaration(extension, extension, extension)
          listener: beginTypeVariables(<)
          parseMetadataStar(<)
            listener: beginMetadataStar(T)
            listener: endMetadataStar(0)
          ensureIdentifier(<, typeVariableDeclaration)
            listener: handleIdentifier(T, typeVariableDeclaration)
          listener: beginTypeVariable(T)
          listener: handleTypeVariablesDefined(num, 1)
          listener: handleIdentifier(num, typeReference)
          listener: handleNoTypeArguments(>)
          listener: handleType(num, null)
          listener: endTypeVariable(>, 0, extends, null)
          listener: endTypeVariables(<, >)
          listener: beginExtensionDeclaration(extension, E)
          listener: handleIdentifier(List, typeReference)
          listener: beginTypeArguments(<)
          listener: handleIdentifier(T, typeReference)
          listener: handleNoTypeArguments(>)
          listener: handleType(T, null)
          listener: endTypeArguments(1, <, >)
          listener: handleType(List, null)
          parseClassOrMixinOrExtensionBody(>, DeclarationKind.Extension, E)
            listener: beginClassOrMixinOrExtensionBody(DeclarationKind.Extension, {)
            notEofOrValue(}, bool)
            parseClassOrMixinOrExtensionOrEnumMemberImpl({, DeclarationKind.Extension, E)
              parseMetadataStar({)
                listener: beginMetadataStar(bool)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod({, null, null, null, null, null, null, null, {, SimpleType(), null, a, DeclarationKind.Extension, E, false)
                listener: beginMethod(DeclarationKind.Extension, null, null, null, null, null, null, a)
                listener: handleIdentifier(bool, typeReference)
                listener: handleNoTypeArguments(a)
                listener: handleType(bool, null)
                ensureIdentifierPotentiallyRecovered(bool, methodDeclaration, false)
                  listener: handleIdentifier(a, methodDeclaration)
                parseQualifiedRestOpt(a, methodDeclarationContinuation)
                parseMethodTypeVar(a)
                  listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(a, a, false, MemberKind.ExtensionNonStaticMethod)
                  parseFormalParameters(a, MemberKind.ExtensionNonStaticMethod)
                    parseFormalParametersRest((, MemberKind.ExtensionNonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.ExtensionNonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.ExtensionNonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.ExtensionNonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(b)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(b, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue(,)
                        listener: endFormalParameter(null, null, null, b, null, null, FormalParameterKind.requiredPositional, MemberKind.ExtensionNonStaticMethod)
                      parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.ExtensionNonStaticMethod)
                        parseMetadataStar(,)
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.ExtensionNonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(c)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(c, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, c, null, null, FormalParameterKind.requiredPositional, MemberKind.ExtensionNonStaticMethod)
                      listener: endFormalParameters(2, (, ), MemberKind.ExtensionNonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(0, {, })
                listener: endExtensionMethod(null, bool, (, null, })
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(}, DeclarationKind.Extension, E)
              parseMetadataStar(})
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(}, null, null, null, null, null, null, null, }, SimpleType(), get, b, DeclarationKind.Extension, E, false)
                listener: beginMethod(DeclarationKind.Extension, null, null, null, null, null, get, b)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(get)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(get, methodDeclaration, false)
                  listener: handleIdentifier(b, methodDeclaration)
                parseQualifiedRestOpt(b, methodDeclarationContinuation)
                listener: handleNoTypeVariables(=>)
                parseGetterOrFormalParameters(b, b, true, MemberKind.ExtensionNonStaticMethod)
                  listener: handleNoFormalParameters(=>, MemberKind.ExtensionNonStaticMethod)
                parseInitializersOpt(b)
                  listener: handleNoInitializers()
                parseAsyncModifierOpt(b)
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(b, false, true)
                  parseExpressionFunctionBody(=>, false)
                    parseExpression(=>)
                      parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression(=>, true, ConstantPatternContext.none)
                          parsePrimary(=>, expression, ConstantPatternContext.none)
                            parseLiteralInt(=>)
                              listener: handleLiteralInt(0)
                    ensureSemicolon(0)
                    listener: handleExpressionFunctionBody(=>, ;)
                    inGenerator()
                listener: endExtensionMethod(get, int, =>, null, ;)
              listener: endMember()
            notEofOrValue(}, set)
            parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Extension, E)
              parseMetadataStar(;)
                listener: beginMetadataStar(set)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseMethod(;, null, null, null, null, null, null, null, ;, NoType(), set, c, DeclarationKind.Extension, E, false)
                listener: beginMethod(DeclarationKind.Extension, null, null, null, null, null, set, c)
                listener: handleNoType(;)
                ensureIdentifierPotentiallyRecovered(set, methodDeclaration, false)
                  listener: handleIdentifier(c, methodDeclaration)
                parseQualifiedRestOpt(c, methodDeclarationContinuation)
                listener: handleNoTypeVariables(()
                parseGetterOrFormalParameters(c, c, false, MemberKind.ExtensionNonStaticMethod)
                  parseFormalParameters(c, MemberKind.ExtensionNonStaticMethod)
                    parseFormalParametersRest((, MemberKind.ExtensionNonStaticMethod)
                      listener: beginFormalParameters((, MemberKind.ExtensionNonStaticMethod)
                      parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.ExtensionNonStaticMethod)
                        parseMetadataStar(()
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: beginFormalParameter(int, MemberKind.ExtensionNonStaticMethod, null, null, null)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(d)
                        listener: handleType(int, null)
                        ensureIdentifier(int, formalParameterDeclaration)
                          listener: handleIdentifier(d, formalParameterDeclaration)
                        listener: handleFormalParameterWithoutValue())
                        listener: endFormalParameter(null, null, null, d, null, null, FormalParameterKind.requiredPositional, MemberKind.ExtensionNonStaticMethod)
                      listener: endFormalParameters(1, (, ), MemberKind.ExtensionNonStaticMethod)
                parseInitializersOpt())
                  listener: handleNoInitializers()
                parseAsyncModifierOpt())
                  listener: handleAsyncModifier(null, null)
                  inPlainSync()
                inPlainSync()
                inPlainSync()
                parseFunctionBody(), false, true)
                  listener: beginBlockFunctionBody({)
                  notEofOrValue(}, })
                  listener: endBlockFunctionBody(0, {, })
                listener: endExtensionMethod(set, set, (, null, })
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinOrExtensionBody(DeclarationKind.Extension, 3, {, })
          listener: endExtensionDeclaration(extension, extension, on, })
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(}, null, null, }, VoidType(), null, f, false)
        listener: beginTopLevelMethod(}, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(f, topLevelFunctionDeclaration)
        parseMethodTypeVar(f)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(f, f, false, MemberKind.TopLevelMethod)
          parseFormalParameters(f, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(List)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(List, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(List, typeReference)
                listener: beginTypeArguments(<)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(>)
                listener: handleType(int, null)
                listener: endTypeArguments(1, <, >)
                listener: handleType(List, null)
                ensureIdentifier(>, formalParameterDeclaration)
                  listener: handleIdentifier(l, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, l, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, l)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                looksLikeLocalFunction(l)
                parseExpressionStatement({)
                  parseExpression({)
                    parsePrecedenceExpression({, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression({, true, ConstantPatternContext.none)
                        parsePrimary({, expression, ConstantPatternContext.none)
                          parseSendOrFunctionLiteral({, expression, ConstantPatternContext.none)
                            parseSend({, expression, ConstantPatternContext.none)
                              isNextIdentifier({)
                              ensureIdentifier({, expression)
                                listener: handleIdentifier(l, expression)
                              listener: handleNoTypeArguments(.)
                              parseArgumentsOpt(l)
                                listener: handleNoArguments(.)
                              listener: handleSend(l, .)
                      parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                        parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                          parseSend(., expressionContinuation, ConstantPatternContext.none)
                            isNextIdentifier(.)
                            ensureIdentifier(., expressionContinuation)
                              listener: handleIdentifier(a, expressionContinuation)
                            listener: handleNoTypeArguments(})
                            parseArgumentsOpt(a)
                              listener: handleNoArguments(})
                            listener: handleSend(a, })
                      listener: handleEndingBinaryExpression(.)
                  ensureSemicolon(a)
                    reportRecoverableError(a, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
                      listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], a, a)
                    rewriter()
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(}, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(})
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(}, null, null, }, VoidType(), null, g, false)
        listener: beginTopLevelMethod(}, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(g, topLevelFunctionDeclaration)
        parseMethodTypeVar(g)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(g, g, false, MemberKind.TopLevelMethod)
          parseFormalParameters(g, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(List)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(List, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(List, typeReference)
                listener: beginTypeArguments(<)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(>)
                listener: handleType(int, null)
                listener: endTypeArguments(1, <, >)
                listener: handleType(List, null)
                ensureIdentifier(>, formalParameterDeclaration)
                  listener: handleIdentifier(l, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, l, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, l)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                looksLikeLocalFunction(print)
                listener: beginMetadataStar(l)
                listener: endMetadataStar(0)
                listener: handleIdentifier(l, prefixedTypeReference)
                listener: handleIdentifier(a, typeReferenceContinuation)
                listener: handleQualified(.)
                listener: handleNoTypeArguments(print)
                listener: handleType(l, null)
                listener: beginVariablesDeclaration(print, null, null)
                parseVariablesDeclarationRest(a, true)
                  parseOptionallyInitializedIdentifier(a)
                    ensureIdentifier(a, localVariableDeclaration)
                      listener: handleIdentifier(print, localVariableDeclaration)
                    listener: beginInitializedIdentifier(print)
                    parseVariableInitializerOpt(print)
                      listener: handleNoVariableInitializer(print)
                    listener: endInitializedIdentifier(print)
                  ensureSemicolon(print)
                    reportRecoverableError(print, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
                      listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], print, print)
                    rewriter()
                  listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(()
                  parseExpressionStatement(;)
                    parseExpression(;)
                      parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                        parseUnaryExpression(;, true, ConstantPatternContext.none)
                          parsePrimary(;, expression, ConstantPatternContext.none)
                            parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(;, ConstantPatternContext.none)
                              parseParenthesizedExpressionOrRecordLiteral(;, null, ConstantPatternContext.none)
                                listener: beginParenthesizedExpressionOrRecordLiteral(()
                                parseExpression(()
                                  parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                    parseUnaryExpression((, true, ConstantPatternContext.none)
                                      parsePrimary((, expression, ConstantPatternContext.none)
                                        parseSendOrFunctionLiteral((, expression, ConstantPatternContext.none)
                                          parseSend((, expression, ConstantPatternContext.none)
                                            isNextIdentifier(()
                                            ensureIdentifier((, expression)
                                              listener: handleIdentifier(l, expression)
                                            listener: handleNoTypeArguments(.)
                                            parseArgumentsOpt(l)
                                              listener: handleNoArguments(.)
                                            listener: handleSend(l, .)
                                    parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                                      parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                                        parseSend(., expressionContinuation, ConstantPatternContext.none)
                                          isNextIdentifier(.)
                                          ensureIdentifier(., expressionContinuation)
                                            listener: handleIdentifier(b, expressionContinuation)
                                          listener: handleNoTypeArguments())
                                          parseArgumentsOpt(b)
                                            listener: handleNoArguments())
                                          listener: handleSend(b, ))
                                    listener: handleEndingBinaryExpression(.)
                                ensureCloseParen(b, ()
                                listener: endParenthesizedExpression(()
                    ensureSemicolon())
                    listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(2, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(extension)
  listener: endCompilationUnit(3, )
