parseUnit(enum)
  skipErrorTokens(enum)
  listener: beginCompilationUnit(enum)
  syntheticPreviousToken(enum)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(enum)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, enum, null, null, null, null, null, Instance of 'DirectiveContext')
      parseEnum(enum)
        listener: beginUncategorizedTopLevelDeclaration(enum)
        ensureIdentifier(enum, enumDeclaration)
          listener: handleIdentifier(E, enumDeclaration)
        listener: beginEnum(enum)
        parseEnumHeaderOpt(E, enum)
          listener: handleNoTypeVariables({)
          parseEnumWithClauseOpt(E)
            listener: handleEnumNoWithClause()
          parseClassOrMixinOrEnumImplementsOpt(E)
            listener: handleImplements(null, 0)
        listener: handleEnumHeader(enum, {)
        parseEnumElement({)
          parseMetadataStar({)
            listener: beginMetadataStar(x)
            listener: endMetadataStar(0)
          ensureIdentifier({, enumValueDeclaration)
            listener: handleIdentifier(x, enumValueDeclaration)
          listener: handleNoTypeNameInConstructorReference(;)
          listener: beginConstructorReference(x)
          listener: handleNoTypeArguments(;)
          listener: handleNoConstructorReferenceContinuationAfterTypeArguments(;)
          listener: endConstructorReference(x, null, ;, ConstructorReferenceContext.Const)
          listener: handleNoArguments(x)
          listener: handleEnumElement({)
        listener: handleEnumElements(;, 1)
        notEofOrValue(}, String)
        parseClassOrMixinOrExtensionOrEnumMemberImpl(;, DeclarationKind.Enum, E)
          parseMetadataStar(;)
            listener: beginMetadataStar(String)
            listener: endMetadataStar(0)
          listener: beginMember()
          parseMethod(;, null, null, null, null, null, null, null, ;, Instance of 'SimpleType', null, hello, DeclarationKind.Enum, E, false)
            listener: beginMethod(DeclarationKind.Enum, null, null, null, null, null, null, hello)
            listener: handleIdentifier(String, typeReference)
            listener: handleNoTypeArguments(hello)
            listener: handleType(String, null)
            ensureIdentifierPotentiallyRecovered(String, methodDeclaration, false)
              listener: handleIdentifier(hello, methodDeclaration)
            parseQualifiedRestOpt(hello, methodDeclarationContinuation)
            parseMethodTypeVar(hello)
              listener: handleNoTypeVariables(()
            parseGetterOrFormalParameters(hello, hello, false, MemberKind.NonStaticMethod)
              parseFormalParameters(hello, MemberKind.NonStaticMethod)
                parseFormalParametersRest((, MemberKind.NonStaticMethod)
                  listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                  listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
            parseInitializersOpt())
              listener: handleNoInitializers()
            parseAsyncModifierOpt())
              listener: handleAsyncModifier(null, null)
              inPlainSync()
            inPlainSync()
            parseFunctionBody(), false, true)
              listener: beginBlockFunctionBody({)
              notEofOrValue(}, print)
              parseStatement({)
                parseStatementX({)
                  parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                    looksLikeLocalFunction(print)
                    parseExpressionStatement({)
                      parseExpression({)
                        parsePrecedenceExpression({, 1, true)
                          parseUnaryExpression({, true)
                            parsePrimary({, expression)
                              parseSendOrFunctionLiteral({, expression)
                                looksLikeFunctionBody(;)
                                parseSend({, expression)
                                  isNextIdentifier({)
                                  ensureIdentifier({, expression)
                                    listener: handleIdentifier(print, expression)
                                  listener: handleNoTypeArguments(()
                                  parseArgumentsOpt(print)
                                    parseArguments(print)
                                      parseArgumentsRest(()
                                        listener: beginArguments(()
                                        parseExpression(()
                                          parsePrecedenceExpression((, 1, true)
                                            parseUnaryExpression((, true)
                                              parsePrimary((, expression)
                                                parseLiteralString(()
                                                  parseSingleLiteralString(()
                                                    listener: beginLiteralString("hello")
                                                    listener: endLiteralString(0, ))
                                        listener: endArguments(1, (, ))
                                  listener: handleSend(print, ;)
                      ensureSemicolon())
                      listener: handleExpressionStatement(;)
              notEofOrValue(}, return)
              parseStatement(;)
                parseStatementX(;)
                  parseReturnStatement(;)
                    listener: beginReturnStatement(return)
                    parseExpression(return)
                      parsePrecedenceExpression(return, 1, true)
                        parseUnaryExpression(return, true)
                          parsePrimary(return, expression)
                            parseLiteralString(return)
                              parseSingleLiteralString(return)
                                listener: beginLiteralString("hello")
                                listener: endLiteralString(0, ;)
                    ensureSemicolon("hello")
                    listener: endReturnStatement(true, return, ;)
                    inGenerator()
              notEofOrValue(}, })
              listener: endBlockFunctionBody(2, {, })
            listener: endEnumMethod(null, String, (, null, })
          listener: endMember()
        notEofOrValue(}, })
        listener: endEnum(enum, {, 1)
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(enum)
  listener: endCompilationUnit(1, )
