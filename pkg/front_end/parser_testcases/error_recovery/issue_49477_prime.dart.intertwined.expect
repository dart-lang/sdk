parseUnit(import)
  skipErrorTokens(import)
  listener: beginCompilationUnit(import)
  syntheticPreviousToken(import)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(import)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(import, , import, null, null, null, null, DirectiveContext(DirectiveState.Unknown))
      parseImport(import)
        listener: beginUncategorizedTopLevelDeclaration(import)
        listener: beginImport(import)
        ensureLiteralString(import)
          parseLiteralString(import)
            parseSingleLiteralString(import)
              listener: beginLiteralString('dart:io')
              listener: endLiteralString(0, ;)
        parseConditionalUriStar('dart:io')
          listener: beginConditionalUris(;)
          listener: endConditionalUris(0)
        parseImportPrefixOpt('dart:io')
          listener: handleImportPrefix(null, null)
        parseCombinatorStar('dart:io')
          listener: beginCombinators(;)
          listener: endCombinators(0)
        listener: endImport(import, null, ;)
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.ImportAndExport))
    parseMetadataStar(;)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(;, null, null, ;, VoidType(), null, main, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(List)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(List, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(List, typeReference)
                listener: beginTypeArguments(<)
                listener: handleIdentifier(String, typeReference)
                listener: handleNoTypeArguments(>)
                listener: handleType(String, null)
                listener: endTypeArguments(1, <, >)
                listener: handleType(List, null)
                ensureIdentifier(>, formalParameterDeclaration)
                  listener: handleIdentifier(args, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, args, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(async, null)
          inPlainSync()
        parseFunctionBody(async, false, false)
          listener: beginBlockFunctionBody({)
          notEofOrType(CLOSE_CURLY_BRACKET, final)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers(final, {, null, final, null, null)
                looksLikeLocalFunction(proc)
                listener: beginMetadataStar(final)
                listener: endMetadataStar(0)
                listener: handleNoType(final)
                listener: beginVariablesDeclaration(proc, null, final)
                parseVariablesDeclarationRest(final, true)
                  parseOptionallyInitializedIdentifier(final)
                    ensureIdentifier(final, localVariableDeclaration)
                      listener: handleIdentifier(proc, localVariableDeclaration)
                    listener: beginInitializedIdentifier(proc)
                    parseVariableInitializerOpt(proc)
                      listener: beginVariableInitializer(=)
                      parseExpression(=)
                        parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                          parseUnaryExpression(=, true, ConstantPatternContext.none)
                            inPlainSync()
                            parseAwaitExpression(=, true)
                              listener: beginAwaitExpression(await)
                              parsePrecedenceExpression(await, 16, true, ConstantPatternContext.none)
                                parseUnaryExpression(await, true, ConstantPatternContext.none)
                                  parsePrimary(await, expression, ConstantPatternContext.none)
                                    parseSendOrFunctionLiteral(await, expression, ConstantPatternContext.none)
                                      parseSend(await, expression, ConstantPatternContext.none)
                                        ensureIdentifier(await, expression)
                                          listener: handleIdentifier(Process, expression)
                                        listener: handleNoTypeArguments(.)
                                        parseArgumentsOpt(Process)
                                          listener: handleNoArguments(.)
                                        listener: handleSend(Process, Process)
                                parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                                  parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                                    parseSend(., expressionContinuation, ConstantPatternContext.none)
                                      ensureIdentifier(., expressionContinuation)
                                        listener: handleIdentifier(start, expressionContinuation)
                                      listener: handleNoTypeArguments(()
                                      parseArgumentsOpt(start)
                                        parseArguments(start)
                                          parseArgumentsRest(()
                                            listener: beginArguments(()
                                            allowedToShortcutParseExpression()
                                            listener: beginLiteralString('')
                                            listener: endLiteralString(0, ,)
                                            allowedToShortcutParseExpression()
                                            parseExpression(,)
                                              parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                                parseUnaryExpression(,, true, ConstantPatternContext.none)
                                                  parsePrimary(,, expression, ConstantPatternContext.none)
                                                    listener: handleNoTypeArguments([])
                                                    parseLiteralListSuffix(,, null)
                                                      rewriteSquareBrackets(,)
                                                        link([, ])
                                                        rewriter()
                                                      listener: handleLiteralList(0, [, null, ])
                                            listener: endArguments(2, (, ))
                                      listener: handleSend(start, ))
                                listener: handleDotAccess(., ), false)
                              inAsync()
                              listener: endAwaitExpression(await, ))
                      listener: endVariableInitializer(=)
                    listener: endInitializedIdentifier(proc)
                  ensureSemicolon())
                  listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, proc)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(proc)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true, ConstantPatternContext.none)
                      parseUnaryExpression(;, true, ConstantPatternContext.none)
                        parsePrimary(;, expression, ConstantPatternContext.none)
                          parseSendOrFunctionLiteral(;, expression, ConstantPatternContext.none)
                            parseSend(;, expression, ConstantPatternContext.none)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(proc, expression)
                              listener: handleNoTypeArguments(.)
                              parseArgumentsOpt(proc)
                                listener: handleNoArguments(.)
                              listener: handleSend(proc, proc)
                      parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                        parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                          parseSend(., expressionContinuation, ConstantPatternContext.none)
                            ensureIdentifier(., expressionContinuation)
                              listener: handleIdentifier(stdout, expressionContinuation)
                            listener: handleNoTypeArguments(.)
                            parseArgumentsOpt(stdout)
                              listener: handleNoArguments(.)
                            listener: handleSend(stdout, stdout)
                      listener: handleDotAccess(., stdout, false)
                      parsePrimary(., expressionContinuation, ConstantPatternContext.none)
                        parseSendOrFunctionLiteral(., expressionContinuation, ConstantPatternContext.none)
                          parseSend(., expressionContinuation, ConstantPatternContext.none)
                            ensureIdentifier(., expressionContinuation)
                              listener: handleIdentifier(int, expressionContinuation)
                            listener: handleNoTypeArguments(getNumber)
                            parseArgumentsOpt(int)
                              listener: handleNoArguments(getNumber)
                            listener: handleSend(int, int)
                      listener: handleDotAccess(., int, false)
                  ensureSemicolon(int)
                    reportRecoverableError(int, Message[Template(ExpectedAfterButGot), Expected ';' after this., null, {string: ;}])
                      listener: handleRecoverableError(Message[Template(ExpectedAfterButGot), Expected ';' after this., null, {string: ;}], int, int)
                    rewriter()
                  listener: handleExpressionStatement(proc, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, getNumber)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                looksLikeLocalFunction(getNumber)
                listener: beginMetadataStar(getNumber)
                listener: endMetadataStar(0)
                listener: handleNoTypeVariables(()
                listener: beginLocalFunctionDeclaration(getNumber)
                listener: handleNoType(;)
                parseNamedFunctionRest(;, getNumber, getNumber, false)
                  listener: beginFunctionName(getNumber)
                  ensureIdentifier(;, localFunctionDeclaration)
                    listener: handleIdentifier(getNumber, localFunctionDeclaration)
                  listener: endFunctionName(getNumber, (, false)
                  parseFormalParametersRequiredOpt(getNumber, MemberKind.Local)
                    parseFormalParametersRest((, MemberKind.Local)
                      listener: beginFormalParameters((, MemberKind.Local)
                      listener: endFormalParameters(0, (, ), MemberKind.Local)
                  parseInitializersOpt())
                    listener: handleNoInitializers()
                  parseAsyncOptBody(), false, false)
                    parseAsyncModifierOpt())
                      listener: handleAsyncModifier(null, null)
                      inPlainSync()
                    parseFunctionBody(), false, false)
                      listener: beginBlockFunctionBody({)
                      notEofOrType(CLOSE_CURLY_BRACKET, return)
                      parseStatement({)
                        parseStatementX({)
                          parseReturnStatement({)
                            listener: beginReturnStatement(return)
                            parseExpression(return)
                              parsePrecedenceExpression(return, 1, true, ConstantPatternContext.none)
                                parseUnaryExpression(return, true, ConstantPatternContext.none)
                                  parsePrimary(return, expression, ConstantPatternContext.none)
                                    parseLiteralInt(return)
                                      listener: handleLiteralInt(42)
                            ensureSemicolon(42)
                            listener: endReturnStatement(true, return, ;)
                            inGenerator()
                      notEofOrType(CLOSE_CURLY_BRACKET, })
                      listener: endBlockFunctionBody(1, {, })
                  listener: endLocalFunctionDeclaration(})
          notEofOrType(CLOSE_CURLY_BRACKET, })
          listener: endBlockFunctionBody(3, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(})
  reportAllErrorTokens(import)
  listener: endCompilationUnit(2, )
