parseUnit(foo)
  skipErrorTokens(foo)
  listener: beginCompilationUnit(foo)
  syntheticPreviousToken(foo)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(foo)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(foo)
      isReservedKeyword(()
      parseTopLevelMethod(, null, null, , NoType(), null, foo, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleNoType()
        ensureIdentifierPotentiallyRecovered(, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(foo, topLevelFunctionDeclaration)
        parseMethodTypeVar(foo)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(foo, foo, false, MemberKind.TopLevelMethod)
          parseFormalParameters(foo, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(bar)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(bar, MemberKind.TopLevelMethod, null, null, null)
                listener: handleNoType(()
                ensureIdentifier((, formalParameterDeclaration)
                  listener: handleIdentifier(bar, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, bar, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrType(CLOSE_CURLY_BRACKET, Map)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                looksLikeLocalFunction(c)
                listener: beginMetadataStar(Map)
                listener: endMetadataStar(0)
                ensureIdentifier({, typeReference)
                  listener: handleIdentifier(Map, typeReference)
                listener: beginTypeArguments(<)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(,)
                listener: handleType(int, null)
                reportRecoverableErrorWithToken(>, Template(ExpectedType))
                  listener: handleRecoverableError(Message[Template(ExpectedType), Expected a type, but got '>'., null, {lexeme: >}], >, >)
                rewriter()
                listener: handleIdentifier(, typeReference)
                listener: handleNoTypeArguments(>)
                listener: handleType(, null)
                listener: endTypeArguments(2, <, >)
                listener: handleType(Map, null)
                listener: beginVariablesDeclaration(c, null, null)
                parseVariablesDeclarationRest(>, true)
                  parseOptionallyInitializedIdentifier(>)
                    ensureIdentifier(>, localVariableDeclaration)
                      listener: handleIdentifier(c, localVariableDeclaration)
                    listener: beginInitializedIdentifier(c)
                    parseVariableInitializerOpt(c)
                      listener: beginVariableInitializer(=)
                      parseExpression(=)
                        parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                          parseUnaryExpression(=, true, ConstantPatternContext.none)
                            parsePrimary(=, expression, ConstantPatternContext.none)
                              listener: handleNoTypeArguments({)
                              parseLiteralSetOrMapSuffix(=, null)
                                listener: handleLiteralSetOrMap(0, {, null, }, false)
                      listener: endVariableInitializer(=)
                    listener: endInitializedIdentifier(c)
                  ensureSemicolon(})
                  listener: endVariablesDeclaration(1, ;)
          notEofOrType(CLOSE_CURLY_BRACKET, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod(foo, null, })
  listener: endTopLevelDeclaration(})
  reportAllErrorTokens(foo)
  listener: endCompilationUnit(1, )
