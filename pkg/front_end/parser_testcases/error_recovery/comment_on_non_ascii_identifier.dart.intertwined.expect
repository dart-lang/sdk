parseUnit(NonAsciiIdentifierToken(230))
  skipErrorTokens(NonAsciiIdentifierToken(230))
  listener: beginCompilationUnit(main)
  syntheticPreviousToken(main)
  parseTopLevelDeclarationImpl(NonAsciiIdentifierToken(198), Instance of 'DirectiveContext')
    parseMetadataStar(NonAsciiIdentifierToken(198))
      listener: beginMetadataStar(main)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(NonAsciiIdentifierToken(198))
      listener: beginTopLevelMember(main)
      isReservedKeyword(()
      parseTopLevelMethod(NonAsciiIdentifierToken(198), null, NonAsciiIdentifierToken(198), Instance of 'NoType', null, main, false)
        listener: beginTopLevelMethod(NonAsciiIdentifierToken(198), null)
        listener: handleNoType(NonAsciiIdentifierToken(198))
        ensureIdentifierPotentiallyRecovered(NonAsciiIdentifierToken(198), topLevelFunctionDeclaration, false)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, int)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, false)
                looksLikeLocalFunction(æFoo)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(æFoo)
                listener: handleType(int, null)
                listener: beginVariablesDeclaration(æFoo, null, null)
                parseVariablesDeclarationRest(int, true)
                  parseOptionallyInitializedIdentifier(int)
                    ensureIdentifier(int, localVariableDeclaration)
                      listener: handleIdentifier(æFoo, localVariableDeclaration)
                    listener: beginInitializedIdentifier(æFoo)
                    parseVariableInitializerOpt(æFoo)
                      listener: beginVariableInitializer(=)
                      parseExpression(=)
                        parsePrecedenceExpression(=, 1, true)
                          parseUnaryExpression(=, true)
                            parsePrimary(=, expression)
                              parseLiteralInt(=)
                                listener: handleLiteralInt(42)
                      listener: endVariableInitializer(=)
                    listener: endInitializedIdentifier(æFoo)
                  ensureSemicolon(42)
                  listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, int)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, false)
                looksLikeLocalFunction(fooÆ)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(fooÆ)
                listener: handleType(int, null)
                listener: beginVariablesDeclaration(fooÆ, null, null)
                parseVariablesDeclarationRest(int, true)
                  parseOptionallyInitializedIdentifier(int)
                    ensureIdentifier(int, localVariableDeclaration)
                      listener: handleIdentifier(fooÆ, localVariableDeclaration)
                    listener: beginInitializedIdentifier(fooÆ)
                    parseVariableInitializerOpt(fooÆ)
                      listener: beginVariableInitializer(=)
                      parseExpression(=)
                        parsePrecedenceExpression(=, 1, true)
                          parseUnaryExpression(=, true)
                            parsePrimary(=, expression)
                              parseLiteralInt(=)
                                listener: handleLiteralInt(42)
                      listener: endVariableInitializer(=)
                    listener: endInitializedIdentifier(fooÆ)
                  ensureSemicolon(42)
                  listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, int)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, false)
                looksLikeLocalFunction(foo)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(foo)
                listener: handleType(int, null)
                listener: beginVariablesDeclaration(foo, null, null)
                parseVariablesDeclarationRest(int, true)
                  parseOptionallyInitializedIdentifier(int)
                    ensureIdentifier(int, localVariableDeclaration)
                      listener: handleIdentifier(foo, localVariableDeclaration)
                    listener: beginInitializedIdentifier(foo)
                    parseVariableInitializerOpt(foo)
                      listener: beginVariableInitializer(=)
                      parseExpression(=)
                        parsePrecedenceExpression(=, 1, true)
                          parseUnaryExpression(=, true)
                            parsePrimary(=, expression)
                              parseLiteralInt(=)
                                listener: handleLiteralInt(42)
                      listener: endVariableInitializer(=)
                    listener: endInitializedIdentifier(foo)
                  ensureSemicolon(42)
                  listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, print)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, false)
                looksLikeLocalFunction(print)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true)
                      parseUnaryExpression(;, true)
                        parsePrimary(;, expression)
                          parseSendOrFunctionLiteral(;, expression)
                            looksLikeFunctionBody(;)
                            parseSend(;, expression)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(print, expression)
                              listener: handleNoTypeArguments(()
                              parseArgumentsOpt(print)
                                parseArguments(print)
                                  parseArgumentsRest(()
                                    listener: beginArguments(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseSendOrFunctionLiteral((, expression)
                                              parseSend((, expression)
                                                ensureIdentifier((, expression)
                                                  listener: handleIdentifier(æFoo, expression)
                                                listener: handleNoTypeArguments())
                                                parseArgumentsOpt(æFoo)
                                                  listener: handleNoArguments())
                                                listener: handleSend(æFoo, ))
                                    listener: endArguments(1, (, ))
                              listener: handleSend(print, ;)
                  ensureSemicolon())
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, print)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, false)
                looksLikeLocalFunction(print)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true)
                      parseUnaryExpression(;, true)
                        parsePrimary(;, expression)
                          parseSendOrFunctionLiteral(;, expression)
                            looksLikeFunctionBody(;)
                            parseSend(;, expression)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(print, expression)
                              listener: handleNoTypeArguments(()
                              parseArgumentsOpt(print)
                                parseArguments(print)
                                  parseArgumentsRest(()
                                    listener: beginArguments(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseSendOrFunctionLiteral((, expression)
                                              parseSend((, expression)
                                                ensureIdentifier((, expression)
                                                  listener: handleIdentifier(fooÆ, expression)
                                                listener: handleNoTypeArguments())
                                                parseArgumentsOpt(fooÆ)
                                                  listener: handleNoArguments())
                                                listener: handleSend(fooÆ, ))
                                    listener: endArguments(1, (, ))
                              listener: handleSend(print, ;)
                  ensureSemicolon())
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, print)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, false)
                looksLikeLocalFunction(print)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true)
                      parseUnaryExpression(;, true)
                        parsePrimary(;, expression)
                          parseSendOrFunctionLiteral(;, expression)
                            looksLikeFunctionBody(;)
                            parseSend(;, expression)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(print, expression)
                              listener: handleNoTypeArguments(()
                              parseArgumentsOpt(print)
                                parseArguments(print)
                                  parseArgumentsRest(()
                                    listener: beginArguments(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseSendOrFunctionLiteral((, expression)
                                              parseSend((, expression)
                                                ensureIdentifier((, expression)
                                                  listener: handleIdentifier(foo, expression)
                                                listener: handleNoTypeArguments())
                                                parseArgumentsOpt(foo)
                                                  listener: handleNoArguments())
                                                listener: handleSend(foo, ))
                                    listener: endArguments(1, (, ))
                              listener: handleSend(print, ;)
                  ensureSemicolon())
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(6, {, })
        listener: endTopLevelMethod(main, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(NonAsciiIdentifierToken(230))
    listener: handleErrorToken(NonAsciiIdentifierToken(230))
    listener: handleRecoverableError(Message[NonAsciiIdentifier, The non-ASCII character 'æ' (U+00E6) can't be used in identifiers, only in strings and comments., Try using an US-ASCII letter, a digit, '_' (an underscore), or '$' (a dollar sign)., {character: æ, codePoint: 230}], NonAsciiIdentifierToken(230), NonAsciiIdentifierToken(230))
    listener: handleErrorToken(NonAsciiIdentifierToken(198))
    listener: handleRecoverableError(Message[NonAsciiIdentifier, The non-ASCII character 'Æ' (U+00C6) can't be used in identifiers, only in strings and comments., Try using an US-ASCII letter, a digit, '_' (an underscore), or '$' (a dollar sign)., {character: Æ, codePoint: 198}], NonAsciiIdentifierToken(198), NonAsciiIdentifierToken(198))
    listener: handleErrorToken(NonAsciiIdentifierToken(230))
    listener: handleRecoverableError(Message[NonAsciiIdentifier, The non-ASCII character 'æ' (U+00E6) can't be used in identifiers, only in strings and comments., Try using an US-ASCII letter, a digit, '_' (an underscore), or '$' (a dollar sign)., {character: æ, codePoint: 230}], NonAsciiIdentifierToken(230), NonAsciiIdentifierToken(230))
    listener: handleErrorToken(NonAsciiIdentifierToken(198))
    listener: handleRecoverableError(Message[NonAsciiIdentifier, The non-ASCII character 'Æ' (U+00C6) can't be used in identifiers, only in strings and comments., Try using an US-ASCII letter, a digit, '_' (an underscore), or '$' (a dollar sign)., {character: Æ, codePoint: 198}], NonAsciiIdentifierToken(198), NonAsciiIdentifierToken(198))
  listener: endCompilationUnit(1, )
