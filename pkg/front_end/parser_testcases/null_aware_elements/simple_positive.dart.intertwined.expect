parseUnit(foo1)
  skipErrorTokens(foo1)
  listener: beginCompilationUnit(foo1)
  syntheticPreviousToken(foo1)
  parseTopLevelDeclarationImpl(, DirectiveContext(DirectiveState.Unknown))
    parseMetadataStar()
      listener: beginMetadataStar(foo1)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(foo1)
      isReservedKeyword(()
      parseTopLevelMethod(, null, null, , NoType(), null, foo1, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleNoType()
        ensureIdentifierPotentiallyRecovered(, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(foo1, topLevelFunctionDeclaration)
        parseMethodTypeVar(foo1)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(foo1, foo1, false, MemberKind.TopLevelMethod)
          parseFormalParameters(foo1, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(int, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    parseLiteralListSetMapOrFunction(=>, null)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(int, null)
                      listener: endTypeArguments(1, <, >)
                      parseLiteralListSuffix(>, null)
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(])
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(])
                                    listener: handleSend(x, x)
                        listener: handleNullAwareElement(?)
                        listener: handleLiteralList(1, [, null, ])
            ensureSemicolon(])
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(foo1, null, ;)
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(foo2)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(foo2)
      isReservedKeyword(()
      parseTopLevelMethod(;, null, null, ;, NoType(), null, foo2, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(foo2, topLevelFunctionDeclaration)
        parseMethodTypeVar(foo2)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(foo2, foo2, false, MemberKind.TopLevelMethod)
          parseFormalParameters(foo2, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(String)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(String, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(String, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(String, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    parseLiteralListSetMapOrFunction(=>, null)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(String, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(String, null)
                      listener: endTypeArguments(1, <, >)
                      parseLiteralSetOrMapSuffix(>, null)
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(})
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(})
                                    listener: handleSend(x, x)
                        listener: handleNullAwareElement(?)
                        listener: handleLiteralSetOrMap(1, {, null, }, false)
            ensureSemicolon(})
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(foo2, null, ;)
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(foo3)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(foo3)
      isReservedKeyword(()
      parseTopLevelMethod(;, null, null, ;, NoType(), null, foo3, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(foo3, topLevelFunctionDeclaration)
        parseMethodTypeVar(foo3)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(foo3, foo3, false, MemberKind.TopLevelMethod)
          parseFormalParameters(foo3, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(bool)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(bool, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(bool, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(bool, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(num)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(num, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(num, typeReference)
                listener: handleNoTypeArguments(y)
                listener: handleType(num, null)
                ensureIdentifier(num, formalParameterDeclaration)
                  listener: handleIdentifier(y, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(2, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    parseLiteralListSetMapOrFunction(=>, null)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(bool, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(bool, null)
                      listener: handleIdentifier(num, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(num, null)
                      listener: endTypeArguments(2, <, >)
                      parseLiteralSetOrMapSuffix(>, null)
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(:)
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(:)
                                    listener: handleSend(x, x)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                              parsePrimary(:, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(:, expression, ConstantPatternContext.none)
                                  parseSend(:, expression, ConstantPatternContext.none)
                                    ensureIdentifier(:, expression)
                                      listener: handleIdentifier(y, expression)
                                    listener: handleNoTypeArguments(})
                                    parseArgumentsOpt(y)
                                      listener: handleNoArguments(})
                                    listener: handleSend(y, y)
                        listener: handleLiteralMapEntry(:, }, ?, null)
                        listener: handleLiteralSetOrMap(1, {, null, }, false)
            ensureSemicolon(})
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(foo3, null, ;)
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(bar1)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(bar1)
      isReservedKeyword(()
      parseTopLevelMethod(;, null, null, ;, NoType(), null, bar1, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(bar1, topLevelFunctionDeclaration)
        parseMethodTypeVar(bar1)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(bar1, bar1, false, MemberKind.TopLevelMethod)
          parseFormalParameters(bar1, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(int, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    parseLiteralListSetMapOrFunction(=>, null)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(int, null)
                      listener: endTypeArguments(1, <, >)
                      parseLiteralListSuffix(>, null)
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(])
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(])
                                    listener: handleSend(x, x)
                        listener: handleNullAwareElement(?)
                        listener: handleLiteralList(1, [, null, ])
            ensureSemicolon(])
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(bar1, null, ;)
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(bar2)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(bar2)
      isReservedKeyword(()
      parseTopLevelMethod(;, null, null, ;, NoType(), null, bar2, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(bar2, topLevelFunctionDeclaration)
        parseMethodTypeVar(bar2)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(bar2, bar2, false, MemberKind.TopLevelMethod)
          parseFormalParameters(bar2, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(int, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(bool)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(bool, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(bool, typeReference)
                listener: handleNoTypeArguments(b)
                listener: handleType(bool, null)
                ensureIdentifier(bool, formalParameterDeclaration)
                  listener: handleIdentifier(b, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, null, b, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(2, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    parseLiteralListSetMapOrFunction(=>, null)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(int, null)
                      listener: endTypeArguments(1, <, >)
                      parseLiteralSetOrMapSuffix(>, null)
                        listener: beginIfControlFlow(if)
                        ensureParenthesizedCondition(if, allowCase: false)
                          parseExpressionInParenthesisRest((, allowCase: false)
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                parseUnaryExpression((, true, ConstantPatternContext.none)
                                  parsePrimary((, expression, ConstantPatternContext.none)
                                    parseSendOrFunctionLiteral((, expression, ConstantPatternContext.none)
                                      parseSend((, expression, ConstantPatternContext.none)
                                        ensureIdentifier((, expression)
                                          listener: handleIdentifier(b, expression)
                                        listener: handleNoTypeArguments())
                                        parseArgumentsOpt(b)
                                          listener: handleNoArguments())
                                        listener: handleSend(b, b)
                            ensureCloseParen(b, ()
                            listener: handleParenthesizedCondition((, null, null)
                        listener: handleThenControlFlow())
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(})
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(})
                                    listener: handleSend(x, x)
                        listener: handleNullAwareElement(?)
                        listener: endIfControlFlow(x)
                        listener: handleLiteralSetOrMap(1, {, null, }, false)
            ensureSemicolon(})
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(bar2, null, ;)
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(bar3)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(bar3)
      isReservedKeyword(()
      parseTopLevelMethod(;, null, null, ;, NoType(), null, bar3, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(bar3, topLevelFunctionDeclaration)
        parseMethodTypeVar(bar3)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(bar3, bar3, false, MemberKind.TopLevelMethod)
          parseFormalParameters(bar3, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(int, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(1, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    parseLiteralListSetMapOrFunction(=>, null)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(int, null)
                      listener: endTypeArguments(1, <, >)
                      parseLiteralSetOrMapSuffix(>, null)
                        listener: beginForControlFlow(null, for)
                        parseForLoopPartsStart(null, for, ForPartsContext(null))
                          parseExpressionStatementOrDeclaration((, ForPartsContext(null))
                            parseExpressionStatementOrDeclarationAfterModifiers(var, (, null, var, null, ForPartsContext(null))
                              listener: beginMetadataStar(var)
                              listener: endMetadataStar(0)
                              listener: handleNoType(var)
                              listener: beginVariablesDeclaration(_, null, var)
                        parseForLoopPartsMid(var, null, for)
                          parseVariablesDeclarationRest(var, false)
                            parseOptionallyInitializedIdentifier(var)
                              ensureIdentifier(var, localVariableDeclaration)
                                listener: handleIdentifier(_, localVariableDeclaration)
                              listener: beginInitializedIdentifier(_)
                              parseVariableInitializerOpt(_)
                                listener: handleNoVariableInitializer(_)
                              listener: endInitializedIdentifier(_)
                            listener: endVariablesDeclaration(1, null)
                          listener: handleForInitializerLocalVariableDeclaration(_, true)
                        parseForInLoopPartsRest(_, null, for, null, _)
                          listener: beginForInExpression([])
                          parseExpression(in)
                            parsePrecedenceExpression(in, 1, true, ConstantPatternContext.none)
                              parseUnaryExpression(in, true, ConstantPatternContext.none)
                                parsePrimary(in, expression, ConstantPatternContext.none)
                                  listener: handleNoTypeArguments([])
                                  parseLiteralListSuffix(in, null)
                                    rewriteSquareBrackets(in)
                                      link([, ])
                                      rewriter()
                                    listener: handleLiteralList(0, [, null, ])
                          ensureCloseParen(], ()
                          listener: endForInExpression())
                          listener: handleForInLoopParts(null, for, (, null, in)
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(})
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(})
                                    listener: handleSend(x, x)
                        listener: handleNullAwareElement(?)
                        listener: endForInControlFlow(x)
                        listener: handleLiteralSetOrMap(1, {, null, }, false)
            ensureSemicolon(})
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(bar3, null, ;)
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(bar4)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(bar4)
      isReservedKeyword(()
      parseTopLevelMethod(;, null, null, ;, NoType(), null, bar4, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(bar4, topLevelFunctionDeclaration)
        parseMethodTypeVar(bar4)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(bar4, bar4, false, MemberKind.TopLevelMethod)
          parseFormalParameters(bar4, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(String)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(String, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(String, typeReference)
                listener: handleNoTypeArguments(x)
                listener: handleType(String, null)
                ensureIdentifier(String, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(bool)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(bool, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(bool, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(bool, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(y, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(2, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    parseLiteralListSetMapOrFunction(=>, null)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(String, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(String, null)
                      listener: handleIdentifier(bool, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(bool, null)
                      listener: endTypeArguments(2, <, >)
                      parseLiteralSetOrMapSuffix(>, null)
                        parseExpression({)
                          parsePrecedenceExpression({, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression({, true, ConstantPatternContext.none)
                              parsePrimary({, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral({, expression, ConstantPatternContext.none)
                                  parseSend({, expression, ConstantPatternContext.none)
                                    ensureIdentifier({, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(:)
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(:)
                                    listener: handleSend(x, x)
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(y, expression)
                                    listener: handleNoTypeArguments(})
                                    parseArgumentsOpt(y)
                                      listener: handleNoArguments(})
                                    listener: handleSend(y, y)
                        listener: handleLiteralMapEntry(:, }, null, ?)
                        listener: handleLiteralSetOrMap(1, {, null, }, false)
            ensureSemicolon(})
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(bar4, null, ;)
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(bar5)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(bar5)
      isReservedKeyword(()
      parseTopLevelMethod(;, null, null, ;, NoType(), null, bar5, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(bar5, topLevelFunctionDeclaration)
        parseMethodTypeVar(bar5)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(bar5, bar5, false, MemberKind.TopLevelMethod)
          parseFormalParameters(bar5, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(int)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(int, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(int, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(num)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(num, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(num, typeReference)
                listener: handleNoTypeArguments(y)
                listener: handleType(num, null)
                ensureIdentifier(num, formalParameterDeclaration)
                  listener: handleIdentifier(y, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(2, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    parseLiteralListSetMapOrFunction(=>, null)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(int, null)
                      listener: handleIdentifier(num, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(num, null)
                      listener: endTypeArguments(2, <, >)
                      parseLiteralSetOrMapSuffix(>, null)
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(:)
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(:)
                                    listener: handleSend(x, x)
                        parseExpression(:)
                          parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(:, true, ConstantPatternContext.none)
                              parsePrimary(:, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(:, expression, ConstantPatternContext.none)
                                  parseSend(:, expression, ConstantPatternContext.none)
                                    ensureIdentifier(:, expression)
                                      listener: handleIdentifier(y, expression)
                                    listener: handleNoTypeArguments(})
                                    parseArgumentsOpt(y)
                                      listener: handleNoArguments(})
                                    listener: handleSend(y, y)
                        listener: handleLiteralMapEntry(:, }, ?, null)
                        listener: handleLiteralSetOrMap(1, {, null, }, false)
            ensureSemicolon(})
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(bar5, null, ;)
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(bar6)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(bar6)
      isReservedKeyword(()
      parseTopLevelMethod(;, null, null, ;, NoType(), null, bar6, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(bar6, topLevelFunctionDeclaration)
        parseMethodTypeVar(bar6)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(bar6, bar6, false, MemberKind.TopLevelMethod)
          parseFormalParameters(bar6, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(double)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(double, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(double, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(double, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(Symbol)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(Symbol, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(Symbol, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(Symbol, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(y, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(2, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    parseLiteralListSetMapOrFunction(=>, null)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(double, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(double, null)
                      listener: handleIdentifier(Symbol, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(Symbol, null)
                      listener: endTypeArguments(2, <, >)
                      parseLiteralSetOrMapSuffix(>, null)
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(:)
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(:)
                                    listener: handleSend(x, x)
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(y, expression)
                                    listener: handleNoTypeArguments(})
                                    parseArgumentsOpt(y)
                                      listener: handleNoArguments(})
                                    listener: handleSend(y, y)
                        listener: handleLiteralMapEntry(:, }, ?, ?)
                        listener: handleLiteralSetOrMap(1, {, null, }, false)
            ensureSemicolon(})
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(bar6, null, ;)
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(bar7)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(bar7)
      isReservedKeyword(()
      parseTopLevelMethod(;, null, null, ;, NoType(), null, bar7, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(bar7, topLevelFunctionDeclaration)
        parseMethodTypeVar(bar7)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(bar7, bar7, false, MemberKind.TopLevelMethod)
          parseFormalParameters(bar7, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(num)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(num, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(num, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(num, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(double)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(double, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(double, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(double, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(y, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(bool)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(bool, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(bool, typeReference)
                listener: handleNoTypeArguments(b)
                listener: handleType(bool, null)
                ensureIdentifier(bool, formalParameterDeclaration)
                  listener: handleIdentifier(b, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, null, b, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(3, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    parseLiteralListSetMapOrFunction(=>, null)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(num, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(num, null)
                      listener: handleIdentifier(double, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(double, null)
                      listener: endTypeArguments(2, <, >)
                      parseLiteralSetOrMapSuffix(>, null)
                        listener: beginIfControlFlow(if)
                        ensureParenthesizedCondition(if, allowCase: false)
                          parseExpressionInParenthesisRest((, allowCase: false)
                            parseExpression(()
                              parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                parseUnaryExpression((, true, ConstantPatternContext.none)
                                  parsePrimary((, expression, ConstantPatternContext.none)
                                    parseSendOrFunctionLiteral((, expression, ConstantPatternContext.none)
                                      parseSend((, expression, ConstantPatternContext.none)
                                        ensureIdentifier((, expression)
                                          listener: handleIdentifier(b, expression)
                                        listener: handleNoTypeArguments())
                                        parseArgumentsOpt(b)
                                          listener: handleNoArguments())
                                        listener: handleSend(b, b)
                            ensureCloseParen(b, ()
                            listener: handleParenthesizedCondition((, null, null)
                        listener: handleThenControlFlow())
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(:)
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(:)
                                    listener: handleSend(x, x)
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(y, expression)
                                    listener: handleNoTypeArguments(})
                                    parseArgumentsOpt(y)
                                      listener: handleNoArguments(})
                                    listener: handleSend(y, y)
                        listener: handleLiteralMapEntry(:, }, ?, ?)
                        listener: endIfControlFlow(y)
                        listener: handleLiteralSetOrMap(1, {, null, }, false)
            ensureSemicolon(})
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(bar7, null, ;)
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(;, DirectiveContext(DirectiveState.Declarations))
    parseMetadataStar(;)
      listener: beginMetadataStar(bar8)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(bar8)
      isReservedKeyword(()
      parseTopLevelMethod(;, null, null, ;, NoType(), null, bar8, false)
        listener: beginTopLevelMethod(;, null, null)
        listener: handleNoType(;)
        ensureIdentifierPotentiallyRecovered(;, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(bar8, topLevelFunctionDeclaration)
        parseMethodTypeVar(bar8)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(bar8, bar8, false, MemberKind.TopLevelMethod)
          parseFormalParameters(bar8, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              parseFormalParameter((, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(()
                  listener: beginMetadataStar(num)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(num, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(num, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(num, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(x, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue(,)
                listener: endFormalParameter(null, null, null, null, x, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              parseFormalParameter(,, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
                parseMetadataStar(,)
                  listener: beginMetadataStar(double)
                  listener: endMetadataStar(0)
                listener: beginFormalParameter(double, MemberKind.TopLevelMethod, null, null, null)
                listener: handleIdentifier(double, typeReference)
                listener: handleNoTypeArguments(?)
                listener: handleType(double, ?)
                ensureIdentifier(?, formalParameterDeclaration)
                  listener: handleIdentifier(y, formalParameterDeclaration)
                listener: handleFormalParameterWithoutValue())
                listener: endFormalParameter(null, null, null, null, y, null, null, FormalParameterKind.requiredPositional, MemberKind.TopLevelMethod)
              listener: endFormalParameters(2, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    parseLiteralListSetMapOrFunction(=>, null)
                      listener: beginTypeArguments(<)
                      listener: handleIdentifier(num, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(num, null)
                      listener: handleIdentifier(double, typeReference)
                      listener: handleNoTypeArguments(>)
                      listener: handleType(double, null)
                      listener: endTypeArguments(2, <, >)
                      parseLiteralSetOrMapSuffix(>, null)
                        listener: beginForControlFlow(null, for)
                        parseForLoopPartsStart(null, for, ForPartsContext(null))
                          parseExpressionStatementOrDeclaration((, ForPartsContext(null))
                            parseExpressionStatementOrDeclarationAfterModifiers(var, (, null, var, null, ForPartsContext(null))
                              listener: beginMetadataStar(var)
                              listener: endMetadataStar(0)
                              listener: handleNoType(var)
                              listener: beginVariablesDeclaration(_, null, var)
                        parseForLoopPartsMid(var, null, for)
                          parseVariablesDeclarationRest(var, false)
                            parseOptionallyInitializedIdentifier(var)
                              ensureIdentifier(var, localVariableDeclaration)
                                listener: handleIdentifier(_, localVariableDeclaration)
                              listener: beginInitializedIdentifier(_)
                              parseVariableInitializerOpt(_)
                                listener: handleNoVariableInitializer(_)
                              listener: endInitializedIdentifier(_)
                            listener: endVariablesDeclaration(1, null)
                          listener: handleForInitializerLocalVariableDeclaration(_, true)
                        parseForInLoopPartsRest(_, null, for, null, _)
                          listener: beginForInExpression([])
                          parseExpression(in)
                            parsePrecedenceExpression(in, 1, true, ConstantPatternContext.none)
                              parseUnaryExpression(in, true, ConstantPatternContext.none)
                                parsePrimary(in, expression, ConstantPatternContext.none)
                                  listener: handleNoTypeArguments([])
                                  parseLiteralListSuffix(in, null)
                                    rewriteSquareBrackets(in)
                                      link([, ])
                                      rewriter()
                                    listener: handleLiteralList(0, [, null, ])
                          ensureCloseParen(], ()
                          listener: endForInExpression())
                          listener: handleForInLoopParts(null, for, (, null, in)
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(x, expression)
                                    listener: handleNoTypeArguments(:)
                                    parseArgumentsOpt(x)
                                      listener: handleNoArguments(:)
                                    listener: handleSend(x, x)
                        parseExpression(?)
                          parsePrecedenceExpression(?, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(?, true, ConstantPatternContext.none)
                              parsePrimary(?, expression, ConstantPatternContext.none)
                                parseSendOrFunctionLiteral(?, expression, ConstantPatternContext.none)
                                  parseSend(?, expression, ConstantPatternContext.none)
                                    ensureIdentifier(?, expression)
                                      listener: handleIdentifier(y, expression)
                                    listener: handleNoTypeArguments(})
                                    parseArgumentsOpt(y)
                                      listener: handleNoArguments(})
                                    listener: handleSend(y, y)
                        listener: handleLiteralMapEntry(:, }, ?, ?)
                        listener: endForInControlFlow(y)
                        listener: handleLiteralSetOrMap(1, {, null, }, false)
            ensureSemicolon(})
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(bar8, null, ;)
  listener: endTopLevelDeclaration(;)
  reportAllErrorTokens(foo1)
  listener: endCompilationUnit(11, )
