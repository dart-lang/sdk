Problems reported:

parser/also-nnbd/issue_40288:1:7: Can't use 'late' as a name here.
class late {
      ^^^^

parser/also-nnbd/issue_40288:5:7: Can't use 'required' as a name here.
class required {
      ^^^^^^^^

parser/also-nnbd/issue_40288:10:8: Variables must be declared using the keywords 'const', 'final', 'var' or a type name.
  late l = late();
       ^

parser/also-nnbd/issue_40288:11:3: Can't have modifier 'required' here.
  required r = required();
  ^^^^^^^^

parser/also-nnbd/issue_40288:11:12: Variables must be declared using the keywords 'const', 'final', 'var' or a type name.
  required r = required();
           ^

beginCompilationUnit(class)
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleRecoverableError(Message[Template(BuiltInIdentifierInDeclaration), Can't use 'late' as a name here., null, {lexeme: late}], late, late)
    handleIdentifier(late, classOrMixinDeclaration)
    handleNoTypeVariables({)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, late)
      handleNoType(late)
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
        beginMetadataStar(int)
        endMetadataStar(0)
        beginMember()
          beginMethod(DeclarationKind.Class, null, null, null, null, null, get, g, late)
            handleIdentifier(int, typeReference)
            handleNoTypeArguments(get)
            handleType(int, null)
            handleIdentifier(g, methodDeclaration)
            handleNoTypeVariables(=>)
            handleNoFormalParameters(=>, MemberKind.NonStaticMethod)
            handleNoInitializers()
            handleAsyncModifier(null, null)
            handleLiteralInt(1)
            handleExpressionFunctionBody(=>, ;)
          endClassMethod(get, int, =>, null, ;)
        endMember()
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 1, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleRecoverableError(Message[Template(BuiltInIdentifierInDeclaration), Can't use 'required' as a name here., null, {lexeme: required}], required, required)
    handleIdentifier(required, classOrMixinDeclaration)
    handleNoTypeVariables({)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, required)
      handleNoType(required)
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
        beginMetadataStar(int)
        endMetadataStar(0)
        beginMember()
          beginMethod(DeclarationKind.Class, null, null, null, null, null, get, g, required)
            handleIdentifier(int, typeReference)
            handleNoTypeArguments(get)
            handleType(int, null)
            handleIdentifier(g, methodDeclaration)
            handleNoTypeVariables(=>)
            handleNoFormalParameters(=>, MemberKind.NonStaticMethod)
            handleNoInitializers()
            handleAsyncModifier(null, null)
            handleLiteralInt(2)
            handleExpressionFunctionBody(=>, ;)
          endClassMethod(get, int, =>, null, ;)
        endMember()
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 1, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
  beginMetadataStar(class)
  endMetadataStar(0)
  beginClassOrMixinOrNamedMixinApplicationPrelude(class)
    handleIdentifier(C, classOrMixinDeclaration)
    handleNoTypeVariables({)
    beginClassDeclaration(class, null, null, null, null, null, null, null, null, C)
      handleNoType(C)
      handleClassExtends(null, 1)
      handleClassNoWithClause()
      handleImplements(null, 0)
      handleClassHeader(class, class, null)
      beginClassOrMixinOrExtensionBody(DeclarationKind.Class, {)
        beginMetadataStar(late)
        endMetadataStar(0)
        beginMember()
          beginFields(DeclarationKind.Class, null, null, null, null, null, late, null, {)
            handleRecoverableError(MissingConstFinalVarOrType, l, l)
            handleNoType(late)
            handleIdentifier(l, fieldDeclaration)
            beginFieldInitializer(=)
              handleIdentifier(late, expression)
              handleNoTypeArguments(()
              beginArguments(()
              endArguments(0, (, ))
              handleSend(late, ))
            endFieldInitializer(=, ))
          endClassFields(null, null, null, null, null, late, null, 1, late, ;)
        endMember()
        beginMetadataStar(required)
        endMetadataStar(0)
        handleRecoverableError(Message[Template(ExtraneousModifier), Can't have modifier 'required' here., Try removing 'required'., {lexeme: required}], required, required)
        beginMember()
          beginFields(DeclarationKind.Class, null, null, null, null, null, null, null, ;)
            handleRecoverableError(MissingConstFinalVarOrType, r, r)
            handleNoType(required)
            handleIdentifier(r, fieldDeclaration)
            beginFieldInitializer(=)
              handleIdentifier(required, expression)
              handleNoTypeArguments(()
              beginArguments(()
              endArguments(0, (, ))
              handleSend(required, ))
            endFieldInitializer(=, ))
          endClassFields(null, null, null, null, null, null, null, 1, required, ;)
        endMember()
      endClassOrMixinOrExtensionBody(DeclarationKind.Class, 2, {, })
    endClassDeclaration(class, })
  endTopLevelDeclaration(})
endCompilationUnit(3, )
