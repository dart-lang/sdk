library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/records/type_record.dart:66:7: Error: The argument type 'Record' can't be assigned to the parameter type '(int, String)'.
//   foo(record); // Error.
//       ^
//
import self as self;
import "dart:core" as core;

typedef R = core::Record;
typedef AR = self::A<core::Record>;
typedef RR = core::Record;
typedef AR2 = self::A<core::Record>;
typedef AR3 = self::A<core::Record>;
typedef AR4 = self::A<self::A<core::Record>>;
abstract mixin class A<X extends core::Object? = dynamic> extends core::Object {
  synthetic constructor •() → self::A<self::A::X%>
    : super core::Object::•()
    ;
}
abstract class A1 extends self::A<core::Record> {
  synthetic constructor •() → self::A1
    : super self::A::•()
    ;
}
abstract class A2 extends core::Object implements self::A<core::Record> {
  synthetic constructor •() → self::A2
    : super core::Object::•()
    ;
}
abstract class _A3&Object&A extends core::Object implements self::A<core::Record> /*isAnonymousMixin,isEliminatedMixin,hasConstConstructor*/  {
  const synthetic constructor •() → self::_A3&Object&A
    : super core::Object::•()
    ;
}
abstract class A3 extends self::_A3&Object&A {
  synthetic constructor •() → self::A3
    : super self::_A3&Object&A::•()
    ;
}
abstract class A4 extends self::A<core::Record> {
  synthetic constructor •() → self::A4
    : super self::A::•()
    ;
}
abstract class A5 extends self::A<core::Record> {
  synthetic constructor •() → self::A5
    : super self::A::•()
    ;
}
abstract class A6 extends self::A<core::Record> {
  synthetic constructor •() → self::A6
    : super self::A::•()
    ;
}
abstract class A7 extends self::A<self::A<core::Record>> {
  synthetic constructor •() → self::A7
    : super self::A::•()
    ;
}
static method foo1() → core::Record
  return throw "";
static method foo2() → dynamic
  return core::_GrowableList::•<core::Record>(0);
static method foo3() → dynamic
  return #C1;
static method foo4() → dynamic
  return #C2;
static method foo5(core::Record r) → dynamic
  return null;
static method foo6({required core::Record r = #C3}) → dynamic
  return null;
static method foo7() → core::List<core::Record>
  return throw "";
static method foo8(core::List<core::Record> l) → dynamic
  return null;
static method foo9() → core::Record
  return throw "";
static method foo10() → self::A<core::Record>
  return throw "";
static method foo11() → core::Record
  return throw "";
static method foo12(core::Record r) → dynamic
  return null;
static method foo13(self::A<core::Record> l) → dynamic
  return null;
static method foo14(core::Record l) → dynamic
  return null;
static method foo((core::int, core::String) record) → dynamic {
  self::bar(record);
}
static method bar(core::Record record) → dynamic {
  self::foo(invalid-expression "pkg/front_end/testcases/records/type_record.dart:66:7: Error: The argument type 'Record' can't be assigned to the parameter type '(int, String)'.
  foo(record); // Error.
      ^" in record as{TypeError,ForNonNullableByDefault} (core::int, core::String));
}
static method main() → dynamic {}

constants  {
  #C1 = TypeLiteralConstant(core::Record)
  #C2 = TypeLiteralConstant(core::List<core::Record>)
  #C3 = null
}
