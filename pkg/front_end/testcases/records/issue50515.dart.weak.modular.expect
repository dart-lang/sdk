library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/records/issue50515.dart:11:11: Error: Constant evaluation error:
// test() => const <(A,)>{ (A(),) };
//           ^
// pkg/front_end/testcases/records/issue50515.dart:11:25: Context: The element '(A {})' does not have a primitive equality.
//  - 'A' is from 'pkg/front_end/testcases/records/issue50515.dart'.
// test() => const <(A,)>{ (A(),) };
//                         ^
//
import self as self;
import "dart:core" as core;

class A extends core::Object /*hasConstConstructor*/  {
  const constructor •() → self::A
    : super core::Object::•()
    ;
  operator ==(core::Object other) → core::bool
    return false;
}
static method test() → dynamic
  return invalid-expression "The element '(A {})' does not have a primitive equality.
 - 'A' is from 'pkg/front_end/testcases/records/issue50515.dart'.";



Constructor coverage from constants:
org-dartlang-testcase:///issue50515.dart:
- A. (from org-dartlang-testcase:///issue50515.dart:6:9)
- Object. (from org-dartlang-sdk:///sdk/lib/core/object.dart)
