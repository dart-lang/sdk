library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

typedef R = core::Record;
typedef AR = self::A<core::Record>;
typedef RR = core::Record;
typedef AR2 = self::A<core::Record>;
typedef AR3 = self::A<core::Record>;
typedef AR4 = self::A<self::A<core::Record>>;
abstract mixin class A<X extends core::Object? = dynamic> extends core::Object {
  synthetic constructor •() → self::A<self::A::X%>
    ;
}
abstract class A1 extends self::A<core::Record> {
  synthetic constructor •() → self::A1
    ;
}
abstract class A2 extends core::Object implements self::A<core::Record> {
  synthetic constructor •() → self::A2
    ;
}
abstract class _A3&Object&A = core::Object with self::A<core::Record> /*isAnonymousMixin,hasConstConstructor*/  {
  const synthetic constructor •() → self::_A3&Object&A
    : super core::Object::•()
    ;
}
abstract class A3 extends self::_A3&Object&A {
  synthetic constructor •() → self::A3
    ;
}
abstract class A4 extends self::A<core::Record> {
  synthetic constructor •() → self::A4
    ;
}
abstract class A5 extends self::A<core::Record> {
  synthetic constructor •() → self::A5
    ;
}
abstract class A6 extends self::A<core::Record> {
  synthetic constructor •() → self::A6
    ;
}
abstract class A7 extends self::A<self::A<core::Record>> {
  synthetic constructor •() → self::A7
    ;
}
static method foo1() → core::Record
  ;
static method foo2() → dynamic
  ;
static method foo3() → dynamic
  ;
static method foo4() → dynamic
  ;
static method foo5(core::Record r) → dynamic
  ;
static method foo6({required core::Record r}) → dynamic
  ;
static method foo7() → core::List<core::Record>
  ;
static method foo8(core::List<core::Record> l) → dynamic
  ;
static method foo9() → core::Record
  ;
static method foo10() → self::A<core::Record>
  ;
static method foo11() → core::Record
  ;
static method foo12(core::Record r) → dynamic
  ;
static method foo13(self::A<core::Record> l) → dynamic
  ;
static method foo14(core::Record l) → dynamic
  ;
static method foo((core::int, core::String) record) → dynamic
  ;
static method bar(core::Record record) → dynamic
  ;
static method main() → dynamic
  ;
