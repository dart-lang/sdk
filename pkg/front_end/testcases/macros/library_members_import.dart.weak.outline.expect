library /*isNonNullableByDefault*/;
import self as self;

import "org-dartlang-testcase:///library_members.dart";

static method test() → dynamic
  ;
static method main() → dynamic
  ;

library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/macros/library_members_lib.dart:8:6: Error: Member 'existingMethod' conflicts with an existing member of the same name in the augmented library.
// Try changing the name of the member or adding an 'augment' modifier.
// void existingMethod() {
//      ^^^^^^^^^^^^^^
// pkg/front_end/testcases/macros/library_members.dart:7:6: Context: This is the existing member.
// void existingMethod() {
//      ^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/library_members_lib.dart:11:6: Error: Declaration 'existingMethod2' conflicts with an existing declaration of the same name in the augmented library.
// Try changing the name of the declaration.
// void existingMethod2() {
//      ^^^^^^^^^^^^^^^
// pkg/front_end/testcases/macros/library_members.dart:22:7: Context: This is the existing member.
// class existingMethod2 {}
//       ^^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/library_members_lib.dart:17:14: Error: Augmentation member 'orphanedMethod' doesn't match a member in the augmented library.
// Try changing the name to an existing member or removing the 'augment' modifier.
// augment void orphanedMethod() {
//              ^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/library_members_lib.dart:33:7: Error: Class 'ExistingClass' conflicts with an existing class of the same name in the augmented library.
// Try changing the name of the class or adding an 'augment' modifier.
// class ExistingClass {}
//       ^^^^^^^^^^^^^
// pkg/front_end/testcases/macros/library_members.dart:19:7: Context: This is the existing class.
// class ExistingClass {}
//       ^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/library_members_lib.dart:34:7: Error: Declaration 'ExistingClass2' conflicts with an existing declaration of the same name in the augmented library.
// Try changing the name of the declaration.
// class ExistingClass2 {}
//       ^^^^^^^^^^^^^^
// pkg/front_end/testcases/macros/library_members.dart:23:6: Context: This is the existing member.
// void ExistingClass2() {}
//      ^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/library_members_lib.dart:37:15: Error: Augmentation class 'OrphanedClass' doesn't match a class in the augmented library.
// Try changing the name to an existing class or removing the 'augment' modifier.
// augment class OrphanedClass {}
//               ^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/library_members_lib.dart:23:10: Error: Member 'existingSetter' conflicts with an existing member of the same name in the augmented library.
// Try changing the name of the member or adding an 'augment' modifier.
// void set existingSetter(_) {
//          ^^^^^^^^^^^^^^
// pkg/front_end/testcases/macros/library_members.dart:13:10: Context: This is the existing member.
// void set existingSetter(_) {
//          ^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/macros/library_members_lib.dart:29:18: Error: Augmentation member 'orphanedSetter' doesn't match a member in the augmented library.
// Try changing the name to an existing member or removing the 'augment' modifier.
// augment void set orphanedSetter(_) {
//                  ^^^^^^^^^^^^^^
//
import self as self2;
import "dart:core" as core;

import "org-dartlang-testcase:///library_members.dart";

class ExistingClass#0#1 extends core::Object { // from org-dartlang-testcase:///library_members_lib.dart
  synthetic constructor •() → self2::ExistingClass#0#1
    ;
}
class ExistingClass2#0#1 extends core::Object { // from org-dartlang-testcase:///library_members_lib.dart
  synthetic constructor •() → self2::ExistingClass2#0#1
    ;
}
class InjectedClass extends core::Object { // from org-dartlang-testcase:///library_members_lib.dart
  synthetic constructor •() → self2::InjectedClass
    ;
}
class OrphanedClass extends core::Object { // from org-dartlang-testcase:///library_members_lib.dart
  synthetic constructor •() → self2::OrphanedClass
    ;
}
class ExistingClass extends core::Object {
  synthetic constructor •() → self2::ExistingClass
    ;
}
class AugmentedClass extends core::Object {
  synthetic constructor •() → self2::AugmentedClass
    ;
}
class existingMethod2 extends core::Object {
  synthetic constructor •() → self2::existingMethod2
    ;
}
static method existingMethod() → void
  ;
external static method augmentedMethod() → void;
static set existingSetter(dynamic _) → void
  ;
external static set augmentedSetter(dynamic _) → void;
static method ExistingClass2() → void
  ;
static method test() → dynamic
  ;
static method main() → dynamic
  ;
static method /* from org-dartlang-testcase:///library_members_lib.dart */ existingMethod#1() → void
  ;
static method /* from org-dartlang-testcase:///library_members_lib.dart */ existingMethod2#1() → void
  ;
static method /* from org-dartlang-testcase:///library_members_lib.dart */ injectedMethod() → void
  ;
static method /* from org-dartlang-testcase:///library_members_lib.dart */ orphanedMethod() → void
  ;
static set /* from org-dartlang-testcase:///library_members_lib.dart */ existingSetter#1(dynamic _) → void
  ;
static set /* from org-dartlang-testcase:///library_members_lib.dart */ injectedSetter(dynamic _) → void
  ;
static set /* from org-dartlang-testcase:///library_members_lib.dart */ orphanedSetter(dynamic _) → void
  ;
static method /* from org-dartlang-testcase:///library_members_lib.dart */ augmentTest() → void
  ;
static method /* from org-dartlang-testcase:///library_members_lib.dart */ augmentMain() → void
  ;
