library;
//
// Problems in library:
//
// pkg/front_end/testcases/declaring_constructors/enum_primary_constructor.dart:6:8: Error: Generative enum constructors must be marked as 'const'.
// enum E1() { // Error
//        ^
//
// pkg/front_end/testcases/declaring_constructors/enum_primary_constructor.dart:7:3: Error: Cannot invoke a non-'const' constructor where a const expression is expected.
// Try using a constructor or factory that is 'const'.
//   a
//   ^
//
import self as self;
import "dart:core" as core;

class E1 extends core::_Enum /*isEnum*/  {
  enum-element static const field invalid-type a = invalid-expression "pkg/front_end/testcases/declaring_constructors/enum_primary_constructor.dart:7:3: Error: Cannot invoke a non-'const' constructor where a const expression is expected.
Try using a constructor or factory that is 'const'.
  a
  ^";
  static const field core::List<self::E1> values = const <self::E1>[self::E1::a];
  constructor •(core::int #index, core::String #name) → self::E1
    ;
  method core::_enumToString() → core::String
    return "E1.${this.{core::_Enum::_name}{core::String}}";
}
class E2 extends core::_Enum /*isEnum*/  {
  enum-element static const field self::E2 a = const self::E2::•(0, "a");
  static const field core::List<self::E2> values = const <self::E2>[self::E2::a];
  const constructor •(core::int #index, core::String #name) → self::E2
    : super core::_Enum::•(#index, #name)
    ;
  method core::_enumToString() → core::String
    return "E2.${this.{core::_Enum::_name}{core::String}}";
}
class E3 extends core::_Enum /*isEnum*/  {
  enum-element static const field self::E3 a = const self::E3::•(0, "a");
  final field core::int? b;
  static const field core::List<self::E3> values = const <self::E3>[self::E3::a];
  const constructor •(core::int #index, core::String #name) → self::E3
    : super core::_Enum::•(#index, #name)
    ;
  method core::_enumToString() → core::String
    return "E3.${this.{core::_Enum::_name}{core::String}}";
}
class E4 extends core::_Enum /*isEnum*/  {
  enum-element static const field self::E4 a = const self::E4::•(0, "a");
  field core::int? b;
  static const field core::List<self::E4> values = const <self::E4>[self::E4::a];
  const constructor •(core::int #index, core::String #name) → self::E4
    : super core::_Enum::•(#index, #name)
    ;
  method core::_enumToString() → core::String
    return "E4.${this.{core::_Enum::_name}{core::String}}";
}


Extra constant evaluation status:
Evaluated: ConstructorInvocation @ org-dartlang-testcase:///enum_primary_constructor.dart:11:3 -> InstanceConstant(const E2{_Enum.index: 0, _Enum._name: "a"})
Evaluated: ListLiteral @ org-dartlang-testcase:///enum_primary_constructor.dart:10:12 -> ListConstant(const <E2>[const E2{_Enum.index: 0, _Enum._name: "a"}])
Evaluated: ConstructorInvocation @ org-dartlang-testcase:///enum_primary_constructor.dart:15:3 -> InstanceConstant(const E3{E3.b: null, _Enum.index: 0, _Enum._name: "a"})
Evaluated: ListLiteral @ org-dartlang-testcase:///enum_primary_constructor.dart:14:12 -> ListConstant(const <E3>[const E3{E3.b: null, _Enum.index: 0, _Enum._name: "a"}])
Evaluated: ConstructorInvocation @ org-dartlang-testcase:///enum_primary_constructor.dart:20:3 -> InstanceConstant(const E4{E4.b: null, _Enum.index: 0, _Enum._name: "a"})
Evaluated: ListLiteral @ org-dartlang-testcase:///enum_primary_constructor.dart:19:12 -> ListConstant(const <E4>[const E4{E4.b: null, _Enum.index: 0, _Enum._name: "a"}])
Extra constant evaluation: evaluated: 26, effectively constant: 6
