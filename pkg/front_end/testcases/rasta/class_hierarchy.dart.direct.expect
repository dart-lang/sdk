library;
import self as self;
import "dart:core" as core;

class A extends core::Object {
  default constructor •() → self::A
    : invalid-initializer;
}
class B extends core::Object {
  default constructor •() → self::B
    : invalid-initializer;
}
class C extends core::Object {
  constructor •() → dynamic
    : invalid-initializer;
}
class D extends core::Object {
  static factory •() → self::D
    invalid-statement;
}
static method main() → void {
  new self::A::•();
  new self::B::•();
  new self::C::•();
  invalid-expression.call();
}
