library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class Base extends core::Object {
  synthetic constructor •() → self::Base
    ;
}
abstract class Mixin extends core::Object /*isMixinDeclaration*/  {
  method foo() → dynamic
    ;
}
abstract class _Sub&Base&Mixin = self::Base with self::Mixin /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Sub&Base&Mixin
    : super self::Base::•()
    ;
  mixin-super-stub method foo() → dynamic
    return super.{self::Mixin::foo}();
}
class Sub extends self::_Sub&Base&Mixin {
  synthetic constructor •() → self::Sub
    ;
}
static method main() → dynamic
  ;
