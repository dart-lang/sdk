library;
import self as self;
import "dart:core" as core;

class A extends core::Object {
  constructor •(dynamic x) → void
    : super core::Object::•()
    ;
}
class B extends self::A {
  const constructor •() → void
    : final dynamic #t1 = const core::_ConstantExpressionError::•()._throw(new core::_CompileTimeError::•("pkg/front_end/testcases/rasta/bad_explicit_super_constructor.dart:10:15: Error: Method not found: 'super.'.\n  const B() : super();\n              ^"))
    ;
}
static method main() → dynamic {
  new self::B::•();
  const self::B::•();
}
