library;
import self as self;
import "dart:core" as core;

class Base extends core::Object {
  synthetic constructor •() → void
    : super core::Object::•()
    ;
}
class Mixin extends core::Object {
  synthetic constructor •() → void
    : super core::Object::•()
    ;
  method foo() → dynamic
    return core::print("foo");
}
abstract class _Sub&Base&Mixin extends self::Base implements self::Mixin {
  synthetic constructor •() → void
    : super self::Base::•()
    ;
  method foo() → dynamic
    return core::print("foo");
}
class Sub extends self::_Sub&Base&Mixin {
  synthetic constructor •() → void
    : super self::Base::•()
    ;
}
static method main() → dynamic {
  new self::Sub::•().{self::Mixin::foo}();
}
