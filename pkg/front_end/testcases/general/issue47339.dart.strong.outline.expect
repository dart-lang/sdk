library;
import self as self;
import "dart:core" as core;

typedef Bar = self::Foo;
typedef BarGeneric<X extends core::Object? = dynamic> = self::FooGeneric<X%>;
class Foo extends core::Object /*hasConstConstructor*/  {
  const constructor named() → self::Foo
    : super core::Object::•()
    ;
  static factory namedFactory() → self::Foo /* redirection-target: self::Foo::named */
    return new self::Foo::named();
}
class FooGeneric<X extends core::Object? = dynamic> extends core::Object /*hasConstConstructor*/  {
  const constructor named() → self::FooGeneric<self::FooGeneric::X%>
    : super core::Object::•()
    ;
  static factory namedFactory<X extends core::Object? = dynamic>() → self::FooGeneric<self::FooGeneric::namedFactory::X%> /* redirection-target: self::FooGeneric::named<self::FooGeneric::namedFactory::X%>*/
    return new self::FooGeneric::named<self::FooGeneric::namedFactory::X%>();
}
static const field self::Foo bar = const self::Foo::named();
static const field self::Foo bar2 = /*original=self::Foo::namedFactory*/ const self::Foo::named();
static const field self::FooGeneric<core::int> barGeneric = const self::FooGeneric::named<core::int>();
static const field self::FooGeneric<core::int> barGeneric2 = /*original=self::FooGeneric::namedFactory*/ const self::FooGeneric::named<core::int>();
static method main() → dynamic
  ;


Extra constant evaluation status:
Evaluated: ConstructorInvocation @ org-dartlang-testcase:///issue47339.dart:12:11 -> InstanceConstant(const Foo{})
Evaluated: RedirectingFactoryInvocation @ org-dartlang-testcase:///issue47339.dart:14:22 -> InstanceConstant(const Foo{})
Evaluated: ConstructorInvocation @ org-dartlang-testcase:///issue47339.dart:23:23 -> InstanceConstant(const FooGeneric<int>{})
Evaluated: RedirectingFactoryInvocation @ org-dartlang-testcase:///issue47339.dart:25:48 -> InstanceConstant(const FooGeneric<int>{})
Extra constant evaluation: evaluated: 6, effectively constant: 4
