library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;
import "dart:_internal" as _in;

class C extends core::Object {
  static field () → Never d = () → Never {
    throw "Baz";
  };
  field () → Never e = () → Never {
    throw "Baz";
  };
  synthetic constructor •() → self::C
    : super core::Object::•()
    ;
}
static field () → Never c = () → Never {
  throw "Baz";
};
static method test() → void {
  () → Never a = () → Never {
    throw "Hello";
  };
  function b() → Never {
    throw "World";
  }
  core::int x;
  let final Never #t1 = x = let final Never #t2 = a(){() → Never} in throw new _in::ReachabilityError::•("`null` encountered as the result from expression with type `Never`.") in throw new _in::ReachabilityError::•("`null` encountered as the result from expression with type `Never`.");
  let final Never #t3 = x = let final Never #t4 = b(){() → Never} in throw new _in::ReachabilityError::•("`null` encountered as the result from expression with type `Never`.") in throw new _in::ReachabilityError::•("`null` encountered as the result from expression with type `Never`.");
  let final Never #t5 = x = let final Never #t6 = self::c(){() → Never} in throw new _in::ReachabilityError::•("`null` encountered as the result from expression with type `Never`.") in throw new _in::ReachabilityError::•("`null` encountered as the result from expression with type `Never`.");
  let final Never #t7 = x = let final Never #t8 = self::C::d(){() → Never} in throw new _in::ReachabilityError::•("`null` encountered as the result from expression with type `Never`.") in throw new _in::ReachabilityError::•("`null` encountered as the result from expression with type `Never`.");
  let final Never #t9 = x = let final Never #t10 = new self::C::•().{self::C::e}{() → Never}(){() → Never} in throw new _in::ReachabilityError::•("`null` encountered as the result from expression with type `Never`.") in throw new _in::ReachabilityError::•("`null` encountered as the result from expression with type `Never`.");
}
