library;
//
// Problems in library:
//
// pkg/front_end/testcases/general/issue54006.dart:12:7: Error: A method declaration needs an explicit list of parameters.
// Try adding a parameter list to the method declaration.
//   set field = 0;
//       ^^^^^
//
// pkg/front_end/testcases/general/issue54006.dart:12:13: Error: Only factory constructor can specify '=' redirection.
// Try making this a factory constructor, or remove the redirection.
//   set field = 0;
//             ^
//
// pkg/front_end/testcases/general/issue54006.dart:12:15: Error: Expected an identifier, but got '0'.
// Try inserting an identifier before '0'.
//   set field = 0;
//               ^
//
// pkg/front_end/testcases/general/issue54006.dart:12:13: Error: Expected ';' after this.
//   set field = 0;
//             ^
//
// pkg/front_end/testcases/general/issue54006.dart:12:15: Error: Expected a class member, but got '0'.
//   set field = 0;
//               ^
//
// pkg/front_end/testcases/general/issue54006.dart:12:16: Error: Expected a class member, but got ';'.
//   set field = 0;
//                ^
//
// pkg/front_end/testcases/general/issue54006.dart:18:12: Error: A getter can't have formal parameters.
// Try removing '(...)'.
//   get field() => 0;
//            ^
//
// pkg/front_end/testcases/general/issue54006.dart:23:12: Error: A getter can't have formal parameters.
// Try removing '(...)'.
//   get field(a, b) => 0;
//            ^
//
// pkg/front_end/testcases/general/issue54006.dart:28:12: Error: A getter can't have formal parameters.
// Try removing '(...)'.
//   get field([a]) => 0;
//            ^
//
// pkg/front_end/testcases/general/issue54006.dart:33:12: Error: A getter can't have formal parameters.
// Try removing '(...)'.
//   get field({a}) => 0;
//            ^
//
// pkg/front_end/testcases/general/issue54006.dart:37:7: Error: A method declaration needs an explicit list of parameters.
// Try adding a parameter list to the method declaration.
//   set field {}
//       ^^^^^
//
// pkg/front_end/testcases/general/issue54006.dart:38:12: Error: A getter can't have formal parameters.
// Try removing '(...)'.
//   get field(a) => 0;
//            ^
//
// pkg/front_end/testcases/general/issue54006.dart:27:14: Error: The parameter 'a' can't have a value of 'null' because of its type 'int', but the implicit default value is 'null'.
// Try adding either an explicit non-'null' default value or the 'required' modifier.
//   set field([a]) {}
//              ^
//
// pkg/front_end/testcases/general/issue54006.dart:32:14: Error: The parameter 'a' can't have a value of 'null' because of its type 'int', but the implicit default value is 'null'.
// Try adding either an explicit non-'null' default value or the 'required' modifier.
//   set field({a}) {}
//              ^
//
// pkg/front_end/testcases/general/issue54006.dart:12:13: Error: Expected a function body or '=>'.
// Try adding {}.
//   set field = 0;
//             ^
//
// pkg/front_end/testcases/general/issue54006.dart:12:13: Error: A setter should have exactly one formal parameter.
//   set field = 0;
//             ^
//
// pkg/front_end/testcases/general/issue54006.dart:17:12: Error: A setter should have exactly one formal parameter.
//   set field() {}
//            ^
//
// pkg/front_end/testcases/general/issue54006.dart:22:12: Error: A setter should have exactly one formal parameter.
//   set field(a, b) {}
//            ^
//
// pkg/front_end/testcases/general/issue54006.dart:27:12: Error: A setter should have exactly one formal parameter.
//   set field([a]) {}
//            ^
//
// pkg/front_end/testcases/general/issue54006.dart:32:12: Error: A setter should have exactly one formal parameter.
//   set field({a}) {}
//            ^
//
// pkg/front_end/testcases/general/issue54006.dart:37:13: Error: A setter should have exactly one formal parameter.
//   set field {}
//             ^
//
import self as self;
import "dart:core" as core;

class A extends core::Object {
  field core::int field;
  constructor •(core::int field) → self::A
    : self::A::field = field, super core::Object::•()
    ;
}
class B extends core::Object implements self::A {
  synthetic constructor •() → self::B
    : super core::Object::•()
    ;
  set field(dynamic #synthetic) → void {
    invalid-expression "pkg/front_end/testcases/general/issue54006.dart:12:13: Error: A setter should have exactly one formal parameter.
  set field = 0;
            ^";
    return invalid-expression "pkg/front_end/testcases/general/issue54006.dart:12:15: Error: This couldn't be parsed.
  set field = 0;
              ^";
  }
  get field() → core::int
    return 0;
}
class C extends core::Object implements self::A {
  synthetic constructor •() → self::C
    : super core::Object::•()
    ;
  set field(dynamic #synthetic) → void {
    invalid-expression "pkg/front_end/testcases/general/issue54006.dart:17:12: Error: A setter should have exactly one formal parameter.
  set field() {}
           ^";
    {}
  }
  get field() → core::int
    return 0;
}
class D extends core::Object implements self::A {
  synthetic constructor •() → self::D
    : super core::Object::•()
    ;
  set field(dynamic #synthetic) → void {
    invalid-expression "pkg/front_end/testcases/general/issue54006.dart:22:12: Error: A setter should have exactly one formal parameter.
  set field(a, b) {}
           ^";
    {
      core::int a;
      dynamic b;
      {}
    }
  }
  get field(dynamic a, dynamic b) → core::int
    return 0;
}
class E extends core::Object implements self::A {
  synthetic constructor •() → self::E
    : super core::Object::•()
    ;
  set field(dynamic #synthetic) → void {
    invalid-expression "pkg/front_end/testcases/general/issue54006.dart:27:12: Error: A setter should have exactly one formal parameter.
  set field([a]) {}
           ^";
    {
      core::int a = null;
      {}
    }
  }
  get field([dynamic a = #C1]) → core::int
    return 0;
}
class F extends core::Object implements self::A {
  synthetic constructor •() → self::F
    : super core::Object::•()
    ;
  set field(dynamic #synthetic) → void {
    invalid-expression "pkg/front_end/testcases/general/issue54006.dart:32:12: Error: A setter should have exactly one formal parameter.
  set field({a}) {}
           ^";
    {
      core::int a = null;
      {}
    }
  }
  get field({dynamic a = #C1}) → core::int
    return 0;
}
class G extends core::Object implements self::A {
  synthetic constructor •() → self::G
    : super core::Object::•()
    ;
  set field(dynamic #synthetic) → void {
    invalid-expression "pkg/front_end/testcases/general/issue54006.dart:37:13: Error: A setter should have exactly one formal parameter.
  set field {}
            ^";
    {}
  }
  get field(dynamic a) → core::int
    return 0;
}

constants  {
  #C1 = null
}
