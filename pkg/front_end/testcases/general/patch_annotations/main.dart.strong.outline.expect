library;
import self as self;

import "dart:test";

static method main() → dynamic
  ;

@/*original=dart.core::pragma::•*/ const dart.core::pragma::_("origin-library")
library;
import self as self2;
import "dart:core" as core;
import "dart:_internal" as _in;

import "dart:_internal";

@/*original=core::pragma::•*/ const core::pragma::_("origin-class")
@/* from org-dartlang-testcase:///patch_lib.dart */ _in::patch
@/* from org-dartlang-testcase:///patch_lib.dart *//*original= core::pragma::•*/ const core::pragma::_("patch-class")
class Class<@/*original=core::pragma::•*/ const core::pragma::_("origin-class-type-variable") @/* from org-dartlang-testcase:///patch_lib.dart *//*original= core::pragma::•*/ const core::pragma::_("patch-class-type-variable") T extends core::Object? = dynamic> extends core::Object {
  @/* from org-dartlang-testcase:///origin_lib.dart *//*original= core::pragma::•*/ const core::pragma::_("origin-constructor")
  @_in::patch
  @/*original=core::pragma::•*/ const core::pragma::_("patch-constructor")
  external constructor /* from org-dartlang-testcase:///patch_lib.dart */ •() → self2::Class<self2::Class::T%>;
  @/* from org-dartlang-testcase:///origin_lib.dart *//*original= core::pragma::•*/ const core::pragma::_("origin-procedure")
  @_in::patch
  @/*original=core::pragma::•*/ const core::pragma::_("patch-procedure")
  external method /* from org-dartlang-testcase:///patch_lib.dart */ method<@/*original=core::pragma::•*/ const core::pragma::_("patch-method-type-variable") S extends core::Object? = dynamic>() → void;
}
@/*original=core::pragma::•*/ const core::pragma::_("origin-extension")
@/* from org-dartlang-testcase:///patch_lib.dart */ _in::patch
@/* from org-dartlang-testcase:///patch_lib.dart *//*original= core::pragma::•*/ const core::pragma::_("patch-extension")
extension Extension<@/*original=core::pragma::•*/ const core::pragma::_("origin-extension-type-variable") @/* from org-dartlang-testcase:///patch_lib.dart *//*original= core::pragma::•*/ const core::pragma::_("patch-extension-type-variable") T extends core::Object? = dynamic> on core::int {
  method method = self2::Extension|method;
  method tearoff method = self2::Extension|get#method;
}
@/* from org-dartlang-testcase:///origin_lib.dart *//*original= core::pragma::•*/ const core::pragma::_("origin-extension-method")
@_in::patch
@/*original=core::pragma::•*/ const core::pragma::_("patch-extension-method")
external static extension-member method /* from org-dartlang-testcase:///patch_lib.dart */ Extension|method<T extends core::Object? = dynamic, @/*original=core::pragma::•*/ const core::pragma::_("patch-extension-method-type-variable") S extends core::Object? = dynamic>(lowered final core::int #this) → void;
static extension-member method /* from org-dartlang-testcase:///patch_lib.dart */ Extension|get#method<T extends core::Object? = dynamic>(lowered final core::int #this) → <S extends core::Object? = dynamic>() → void
  return <S extends core::Object? = dynamic>() → void => self2::Extension|method<self2::Extension|get#method::T%, S%>(#this);


Extra constant evaluation status:
Evaluated: RedirectingFactoryInvocation @ org-dartlang-testcase:///origin_lib.dart:5:2 -> InstanceConstant(const pragma{pragma.name: "origin-library", pragma.options: null})
Evaluated: RedirectingFactoryInvocation @ org-dartlang-testcase:///origin_lib.dart:8:2 -> InstanceConstant(const pragma{pragma.name: "origin-class", pragma.options: null})
Evaluated: FileUriExpression @ org-dartlang-testcase:///patch_lib.dart:8:1 -> InstanceConstant(const _Patch{})
Evaluated: FileUriExpression @ org-dartlang-testcase:///patch_lib.dart:9:1 -> InstanceConstant(const pragma{pragma.name: "patch-class", pragma.options: null})
Evaluated: RedirectingFactoryInvocation @ org-dartlang-testcase:///origin_lib.dart:9:14 -> InstanceConstant(const pragma{pragma.name: "origin-class-type-variable", pragma.options: null})
Evaluated: FileUriExpression @ org-dartlang-testcase:///patch_lib.dart:10:13 -> InstanceConstant(const pragma{pragma.name: "patch-class-type-variable", pragma.options: null})
Evaluated: FileUriExpression @ org-dartlang-testcase:///origin_lib.dart:10:3 -> InstanceConstant(const pragma{pragma.name: "origin-constructor", pragma.options: null})
Evaluated: StaticGet @ org-dartlang-testcase:///patch_lib.dart:11:4 -> InstanceConstant(const _Patch{})
Evaluated: RedirectingFactoryInvocation @ org-dartlang-testcase:///patch_lib.dart:12:4 -> InstanceConstant(const pragma{pragma.name: "patch-constructor", pragma.options: null})
Evaluated: FileUriExpression @ org-dartlang-testcase:///origin_lib.dart:13:3 -> InstanceConstant(const pragma{pragma.name: "origin-procedure", pragma.options: null})
Evaluated: StaticGet @ org-dartlang-testcase:///patch_lib.dart:15:4 -> InstanceConstant(const _Patch{})
Evaluated: RedirectingFactoryInvocation @ org-dartlang-testcase:///patch_lib.dart:16:4 -> InstanceConstant(const pragma{pragma.name: "patch-procedure", pragma.options: null})
Evaluated: RedirectingFactoryInvocation @ org-dartlang-testcase:///patch_lib.dart:17:25 -> InstanceConstant(const pragma{pragma.name: "patch-method-type-variable", pragma.options: null})
Evaluated: RedirectingFactoryInvocation @ org-dartlang-testcase:///origin_lib.dart:17:2 -> InstanceConstant(const pragma{pragma.name: "origin-extension", pragma.options: null})
Evaluated: FileUriExpression @ org-dartlang-testcase:///patch_lib.dart:20:1 -> InstanceConstant(const _Patch{})
Evaluated: FileUriExpression @ org-dartlang-testcase:///patch_lib.dart:21:1 -> InstanceConstant(const pragma{pragma.name: "patch-extension", pragma.options: null})
Evaluated: RedirectingFactoryInvocation @ org-dartlang-testcase:///origin_lib.dart:18:22 -> InstanceConstant(const pragma{pragma.name: "origin-extension-type-variable", pragma.options: null})
Evaluated: FileUriExpression @ org-dartlang-testcase:///patch_lib.dart:22:21 -> InstanceConstant(const pragma{pragma.name: "patch-extension-type-variable", pragma.options: null})
Evaluated: FileUriExpression @ org-dartlang-testcase:///origin_lib.dart:19:3 -> InstanceConstant(const pragma{pragma.name: "origin-extension-method", pragma.options: null})
Evaluated: StaticGet @ org-dartlang-testcase:///patch_lib.dart:23:4 -> InstanceConstant(const _Patch{})
Evaluated: RedirectingFactoryInvocation @ org-dartlang-testcase:///patch_lib.dart:24:4 -> InstanceConstant(const pragma{pragma.name: "patch-extension-method", pragma.options: null})
Evaluated: RedirectingFactoryInvocation @ org-dartlang-testcase:///patch_lib.dart:25:25 -> InstanceConstant(const pragma{pragma.name: "patch-extension-method-type-variable", pragma.options: null})
Extra constant evaluation: evaluated: 25, effectively constant: 22
