library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;
import "no_such_method_private_setter_lib.dart" as no_;

import "org-dartlang-testcase:///no_such_method_private_setter_lib.dart";

class Foo extends core::Object implements no_::Bar {
  synthetic constructor •() → self::Foo
    : super core::Object::•()
    ;
  no-such-method-forwarder get _x() → core::int
    return throw core::NoSuchMethodError::withInvocation(this, new core::_InvocationMirror::_withType(#C1, 1, #C2, #C3, core::Map::unmodifiable<core::Symbol*, dynamic>(#C4)));
  no-such-method-forwarder set _x(core::int value) → void
    return throw core::NoSuchMethodError::withInvocation(this, new core::_InvocationMirror::_withType(#C5, 2, #C2, core::List::unmodifiable<dynamic>(core::_GrowableList::_literal1<dynamic>(value)), core::Map::unmodifiable<core::Symbol*, dynamic>(#C4)));
}
static method main() → dynamic {
  no_::baz(new self::Foo::•());
}

library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/general/no_such_method_private_setter_lib.dart:8:7: Error: Field '_x' should be initialized because its type 'int' doesn't allow null.
//   int _x;
//       ^^
//
import self as no_;
import "dart:core" as core;

class Bar extends core::Object {
  field core::int _x = null;
  synthetic constructor •() → no_::Bar
    : super core::Object::•()
    ;
}
static method baz(no_::Bar bar) → void {
  return;
}

constants  {
  #C1 = #org-dartlang-testcase:///no_such_method_private_setter.dart::_x
  #C2 = <core::Type*>[]
  #C3 = <dynamic>[]
  #C4 = <core::Symbol*, dynamic>{}
  #C5 = #org-dartlang-testcase:///no_such_method_private_setter.dart::_x=
}
