library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class E extends core::_Enum /*isEnum*/  {
  static const field core::List<self::E> values = #C4;
  static const field self::E foo = #C3;
  const constructor •(core::int #index, core::String #name, [core::int x = #C1, core::String y = #C5, core::num? z = #C6]) → self::E
    : super core::_Enum::•(#index, #name)
    ;
  const constructor named(core::int #index, core::String #name, core::int x, {core::String y = #C5, core::bool b = #C7, core::String? z = #C6, core::bool? t = #C6}) → self::E
    : super core::_Enum::•(#index, #name)
    ;
  method toString() → core::String
    return "E.${this.{core::_Enum::_name}{core::String}}";
}
static method main() → dynamic {}

constants  {
  #C1 = 0
  #C2 = "foo"
  #C3 = self::E {index:#C1, _name:#C2}
  #C4 = <self::E*>[#C3]
  #C5 = ""
  #C6 = null
  #C7 = false
}


Constructor coverage from constants:
org-dartlang-testcase:///issue49216.dart:
- E. (from org-dartlang-testcase:///issue49216.dart:8:9)
- _Enum. (from org-dartlang-sdk:///sdk/lib/core/enum.dart:103:9)
- Object. (from org-dartlang-sdk:///sdk/lib/core/object.dart:25:9)
