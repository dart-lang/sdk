library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class C extends core::Object /*hasConstConstructor*/  {
  const constructor •({dynamic x = const self::B::•<dynamic>()}) → self::C
    : super core::Object::•()
    ;
}
class B<X extends core::Object? = dynamic> extends self::A /*hasConstConstructor*/  {
  const constructor •() → self::B<self::B::X%>
    : super self::A::•()
    ;
}
abstract class A extends core::Object /*hasConstConstructor*/  {
  static final field dynamic _redirecting# = <dynamic>[self::A::foo]/*isLegacy*/;
  const constructor •() → self::A
    : super core::Object::•()
    ;
  static factory foo() → self::A
    let dynamic #redirecting_factory = self::B::• in let dynamic #typeArg0 = null in invalid-expression;
}
static method main() → dynamic
  ;


Extra constant evaluation status:
Evaluated: ConstructorInvocation @ org-dartlang-testcase:///issue45003_2.dart:6:30 -> InstanceConstant(const B<dynamic>{})
Extra constant evaluation: evaluated: 6, effectively constant: 1
