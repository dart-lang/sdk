library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

@#C1
typedef F = () → void;
@#C1
typedef G = () → void;
class A extends core::Object /*hasConstConstructor*/  {
  const constructor •() → self::A
    : super core::Object::•()
    ;
}
static method main() → dynamic {}

constants  {
  #C1 = self::A {}
}


Constructor coverage from constants:
org-dartlang-testcase:///typedef_annotation.dart:
- A. (from org-dartlang-testcase:///typedef_annotation.dart:6:9)
- Object. (from org-dartlang-sdk:///sdk/lib/core/object.dart:25:9)
