library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/general/records_opt_out.dart:7:1: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
// (int, String) method1(int a, String b) => (a, b);
// ^
//
// pkg/front_end/testcases/general/records_opt_out.dart:8:14: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
// int method2([(int, String) record = const (0, '')]) => record.$1;
//              ^
//
// pkg/front_end/testcases/general/records_opt_out.dart:9:17: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
// String method3([(int, String) record = const (0, '')]) => record.$2;
//                 ^
//
// pkg/front_end/testcases/general/records_opt_out.dart:10:1: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
// ({int a, String b}) method4(int a, String b) => (a: a, b: b);
// ^
//
// pkg/front_end/testcases/general/records_opt_out.dart:11:14: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
// int method5([({int a, String b}) record = const (a: 0, b: '')]) => record.a;
//              ^
//
// pkg/front_end/testcases/general/records_opt_out.dart:12:17: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
// String method6([({int a, String b}) record = const (a: 0, b: '')]) => record.b;
//                 ^
//
// pkg/front_end/testcases/general/records_opt_out.dart:7:43: Error: The 'records' language feature is disabled for this library.
// Try removing the `@dart=` annotation or setting the language version to 3.0 or higher.
// (int, String) method1(int a, String b) => (a, b);
//                                           ^
// pkg/front_end/testcases/general/records_opt_out.dart:5:1: Context: This is the annotation that opts out this library from the 'records' language feature.
// // @dart=2.18
// ^^^^^^^^^^^^^
//
// pkg/front_end/testcases/general/records_opt_out.dart:8:43: Error: The 'records' language feature is disabled for this library.
// Try removing the `@dart=` annotation or setting the language version to 3.0 or higher.
// int method2([(int, String) record = const (0, '')]) => record.$1;
//                                           ^
// pkg/front_end/testcases/general/records_opt_out.dart:5:1: Context: This is the annotation that opts out this library from the 'records' language feature.
// // @dart=2.18
// ^^^^^^^^^^^^^
//
// pkg/front_end/testcases/general/records_opt_out.dart:9:46: Error: The 'records' language feature is disabled for this library.
// Try removing the `@dart=` annotation or setting the language version to 3.0 or higher.
// String method3([(int, String) record = const (0, '')]) => record.$2;
//                                              ^
// pkg/front_end/testcases/general/records_opt_out.dart:5:1: Context: This is the annotation that opts out this library from the 'records' language feature.
// // @dart=2.18
// ^^^^^^^^^^^^^
//
// pkg/front_end/testcases/general/records_opt_out.dart:10:49: Error: The 'records' language feature is disabled for this library.
// Try removing the `@dart=` annotation or setting the language version to 3.0 or higher.
// ({int a, String b}) method4(int a, String b) => (a: a, b: b);
//                                                 ^
// pkg/front_end/testcases/general/records_opt_out.dart:5:1: Context: This is the annotation that opts out this library from the 'records' language feature.
// // @dart=2.18
// ^^^^^^^^^^^^^
//
// pkg/front_end/testcases/general/records_opt_out.dart:11:49: Error: The 'records' language feature is disabled for this library.
// Try removing the `@dart=` annotation or setting the language version to 3.0 or higher.
// int method5([({int a, String b}) record = const (a: 0, b: '')]) => record.a;
//                                                 ^
// pkg/front_end/testcases/general/records_opt_out.dart:5:1: Context: This is the annotation that opts out this library from the 'records' language feature.
// // @dart=2.18
// ^^^^^^^^^^^^^
//
// pkg/front_end/testcases/general/records_opt_out.dart:12:52: Error: The 'records' language feature is disabled for this library.
// Try removing the `@dart=` annotation or setting the language version to 3.0 or higher.
// String method6([({int a, String b}) record = const (a: 0, b: '')]) => record.b;
//                                                    ^
// pkg/front_end/testcases/general/records_opt_out.dart:5:1: Context: This is the annotation that opts out this library from the 'records' language feature.
// // @dart=2.18
// ^^^^^^^^^^^^^
//
import self as self;
import "dart:core" as core;

static method method1(core::int a, core::String b) → invalid-type
  return invalid-expression "This requires the experimental 'records' language feature to be enabled.";
static method method2([invalid-type record = invalid-expression "This requires the experimental 'records' language feature to be enabled."]) → core::int
  return record{<invalid>}.$1;
static method method3([invalid-type record = invalid-expression "This requires the experimental 'records' language feature to be enabled."]) → core::String
  return record{<invalid>}.$2;
static method method4(core::int a, core::String b) → invalid-type
  return invalid-expression "This requires the experimental 'records' language feature to be enabled.";
static method method5([invalid-type record = invalid-expression "This requires the experimental 'records' language feature to be enabled."]) → core::int
  return record{<invalid>}.a;
static method method6([invalid-type record = invalid-expression "This requires the experimental 'records' language feature to be enabled."]) → core::String
  return record{<invalid>}.b;
