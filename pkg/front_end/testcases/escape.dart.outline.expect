library;
import self as self;
import "dart:core" as core;

class A extends core::Object {
  field dynamic field;
  synthetic constructor •() → self::A
    ;
}
class B extends core::Object {
  field dynamic field;
  synthetic constructor •() → self::B
    ;
}
class C extends core::Object {
  synthetic constructor •() → self::C
    ;
  operator ==(dynamic x) → dynamic
    ;
}
class X extends core::Object implements self::A, self::B {
  field dynamic field;
  synthetic constructor •() → self::X
    ;
}
static method useAsA(self::A object) → void
  ;
static method useAsB(self::B object) → void
  ;
static method escape(dynamic x) → void
  ;
static method main() → dynamic
  ;
