library;
import self as self;
import "dart:core" as core;

class A extends core::Object {
  synthetic constructor •() → self::A
    : super core::Object::•()
    ;
}
class B1<T extends core::Object? = dynamic> extends core::Object implements self::A {
  synthetic constructor •() → self::B1<self::B1::T%>
    : super core::Object::•()
    ;
}
class B2<T extends core::Object? = dynamic> extends core::Object implements self::A {
  synthetic constructor •() → self::B2<self::B2::T%>
    : super core::Object::•()
    ;
}
class C1<T extends core::Object? = dynamic> extends core::Object implements self::B1<self::C1::T%>, self::B2<self::C1::T%> {
  synthetic constructor •() → self::C1<self::C1::T%>
    : super core::Object::•()
    ;
}
class C2<T extends core::Object? = dynamic> extends core::Object implements self::B1<self::C2::T%>, self::B2<self::C2::T%> {
  synthetic constructor •() → self::C2<self::C2::T%>
    : super core::Object::•()
    ;
}
extension Extension on core::String {
  get pC1IntQuestion = self::Extension|get#pC1IntQuestion;
  set pC1IntQuestion = self::Extension|set#pC1IntQuestion;
  get pIterableIntQuestion = self::Extension|get#pIterableIntQuestion;
  set pIterableIntQuestion = self::Extension|set#pIterableIntQuestion;
  method test = self::Extension|test;
  method tearoff test = self::Extension|get#test;
}
static method contextIterable<T extends core::Object? = dynamic>(core::Iterable<self::contextIterable::T%> x) → core::Iterable<self::contextIterable::T%>
  return x;
static method contextB1<T extends core::Object? = dynamic>(self::B1<self::contextB1::T%> x) → self::B1<self::contextB1::T%>
  return x;
static extension-member method Extension|get#pC1IntQuestion(lowered final core::String #this) → self::C1<core::int>?
  return null;
static extension-member method Extension|set#pC1IntQuestion(lowered final core::String #this, core::Object? value) → void {}
static extension-member method Extension|get#pIterableIntQuestion(lowered final core::String #this) → core::Iterable<core::int>?
  return null;
static extension-member method Extension|set#pIterableIntQuestion(lowered final core::String #this, core::Object? value) → void {}
static extension-member method Extension|test(lowered final core::String #this) → dynamic {
  self::C2<core::double> c2Double = new self::C2::•<core::double>();
  self::contextB1<dynamic>(let final self::C1<core::int>? #t1 = self::Extension|get#pC1IntQuestion(#this) in #t1 == null ?{self::B1<dynamic>} let final self::C2<core::double> #t2 = c2Double in let final void #t3 = self::Extension|set#pC1IntQuestion(#this, #t2) in #t2 : #t1{self::C1<core::int>});
  core::List<core::num> listNum = core::_GrowableList::•<core::num>(0);
  self::contextIterable<core::num>(let final core::Iterable<core::int>? #t4 = self::Extension|get#pIterableIntQuestion(#this) in #t4 == null ?{core::Iterable<core::num>} let final core::List<core::num> #t5 = listNum in let final void #t6 = self::Extension|set#pIterableIntQuestion(#this, #t5) in #t5 : #t4{core::Iterable<core::int>});
}
static extension-member method Extension|get#test(lowered final core::String #this) → () → dynamic
  return () → dynamic => self::Extension|test(#this);
static method main() → dynamic {
  self::Extension|test("");
}
