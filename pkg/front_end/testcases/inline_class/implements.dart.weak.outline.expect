library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

inline class A /* declaredRepresentationType = core::int */ {
  method methodA = self::A|methodA;
  tearoff methodA = self::A|get#methodA;
  constructor • = self::A|;
  tearoff • = self::A|get#;
}
inline class B<T extends core::Object? = dynamic> /* declaredRepresentationType = T% */ {
  method methodB = self::B|methodB;
  tearoff methodB = self::B|get#methodB;
  constructor • = self::B|;
}
inline class C1 /* declaredRepresentationType = core::int */ implements self::A {
  method methodC1 = self::C1|methodC1;
  tearoff methodC1 = self::C1|get#methodC1;
  constructor • = self::C1|;
  tearoff • = self::C1|get#;
}
inline class C2 /* declaredRepresentationType = core::int */ implements self::A, self::B<core::int> {
  method methodC2 = self::C2|methodC2;
  tearoff methodC2 = self::C2|get#methodC2;
  constructor • = self::C2|;
  tearoff • = self::C2|get#;
}
inline class D1 /* declaredRepresentationType = core::int */ implements self::C1 {
  method methodD1 = self::D1|methodD1;
  tearoff methodD1 = self::D1|get#methodD1;
  constructor • = self::D1|;
  tearoff • = self::D1|get#;
}
static method A|(core::int it) → self::A
  ;
static method A|get#(core::int it) → self::A
  return self::A|(it);
static method A|methodA(lowered final self::A #this) → core::int
  ;
static method A|get#methodA(lowered final self::A #this) → () → core::int
  return () → core::int => self::A|methodA(#this);
static method B|<T extends core::Object? = dynamic>(self::B|::T% it) → self::B<self::B|::T%>
  ;
static method B|methodB<T extends core::Object? = dynamic>(lowered final self::B<self::B|methodB::T%> #this) → self::B|methodB::T%
  ;
static method B|get#methodB<T extends core::Object? = dynamic>(lowered final self::B<self::B|get#methodB::T%> #this) → () → self::B|get#methodB::T%
  return () → self::B|get#methodB::T% => self::B|methodB<self::B|get#methodB::T%>(#this);
static method C1|(core::int it) → self::C1
  ;
static method C1|get#(core::int it) → self::C1
  return self::C1|(it);
static method C1|methodC1(lowered final self::C1 #this) → core::int
  ;
static method C1|get#methodC1(lowered final self::C1 #this) → () → core::int
  return () → core::int => self::C1|methodC1(#this);
static method C2|(core::int it) → self::C2
  ;
static method C2|get#(core::int it) → self::C2
  return self::C2|(it);
static method C2|methodC2(lowered final self::C2 #this) → core::int
  ;
static method C2|get#methodC2(lowered final self::C2 #this) → () → core::int
  return () → core::int => self::C2|methodC2(#this);
static method D1|(core::int it) → self::D1
  ;
static method D1|get#(core::int it) → self::D1
  return self::D1|(it);
static method D1|methodD1(lowered final self::D1 #this) → core::int
  ;
static method D1|get#methodD1(lowered final self::D1 #this) → () → core::int
  return () → core::int => self::D1|methodD1(#this);
static method errors(self::A a, self::B<core::String> b1, self::B<core::num> b2, self::C1 c1, self::C2 c2, self::D1 d1) → dynamic
  ;
static method method(self::A a, self::B<core::String> b1, self::B<core::num> b2, self::C1 c1, self::C2 c2, self::D1 d1) → dynamic
  ;
static method main() → dynamic
  ;
static method expect(dynamic expected, dynamic actual) → dynamic
  ;
