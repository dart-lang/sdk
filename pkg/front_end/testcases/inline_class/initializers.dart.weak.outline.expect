library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

inline class Class1 /* declaredRepresentationType = core::int */ {
  constructor • = self::Class1|;
  tearoff • = self::Class1|_#new#tearOff;
}
inline class Class2 /* declaredRepresentationType = core::int */ {
  constructor • = self::Class2|;
  tearoff • = self::Class2|_#new#tearOff;
}
inline class Class3 /* declaredRepresentationType = core::int */ {
}
inline class Class4 /* declaredRepresentationType = core::int */ {
  constructor • = self::Class4|;
  tearoff • = self::Class4|_#new#tearOff;
}
inline class Class5 /* declaredRepresentationType = core::int */ {
  constructor • = self::Class5|;
  tearoff • = self::Class5|_#new#tearOff;
}
inline class Class6 /* declaredRepresentationType = core::int */ {
  constructor • = self::Class6|;
  tearoff • = self::Class6|_#new#tearOff;
}
static method Class1|(core::int field) → self::Class1
  ;
static method Class1|_#new#tearOff(core::int field) → self::Class1
  return self::Class1|(field);
static method Class2|(core::int field) → self::Class2
  ;
static method Class2|_#new#tearOff(core::int field) → self::Class2
  return self::Class2|(field);
static method Class4|(core::int field, dynamic nonexisting) → self::Class4
  ;
static method Class4|_#new#tearOff(core::int field, dynamic nonexisting) → self::Class4
  return self::Class4|(field, nonexisting);
static method Class5|(core::int field) → self::Class5
  ;
static method Class5|_#new#tearOff(core::int field) → self::Class5
  return self::Class5|(field);
static method Class6|(core::int field) → self::Class6
  ;
static method Class6|_#new#tearOff(core::int field) → self::Class6
  return self::Class6|(field);
