library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

inline class Class /* declaredRepresentationType = core::int */ {
  constructor • = self::Class|;
  constructor named = self::Class|named;
}
inline class GenericClass<T extends core::Object? = dynamic> /* declaredRepresentationType = T% */ {
  constructor • = self::GenericClass|;
}
static method Class|(core::int it) → self::Class
  ;
static method Class|named(core::int it) → self::Class
  ;
static method GenericClass|<T extends core::Object? = dynamic>(self::GenericClass|::T% it) → self::GenericClass<self::GenericClass|::T%>
  ;
static method main() → dynamic
  ;
static method expect(dynamic expected, dynamic actual) → dynamic
  ;
