library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/inline_class/implements.dart:46:5: Error: The method 'methodB' isn't defined for the class 'A'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodB'.
//   a.methodB(); // Error
//     ^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:47:5: Error: The method 'methodC1' isn't defined for the class 'A'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodC1'.
//   a.methodC1(); // Error
//     ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:48:5: Error: The method 'methodC2' isn't defined for the class 'A'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodC2'.
//   a.methodC2(); // Error
//     ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:49:5: Error: The method 'methodD1' isn't defined for the class 'A'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodD1'.
//   a.methodD1(); // Error
//     ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:51:6: Error: The method 'methodA' isn't defined for the class 'B<String>'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodA'.
//   b1.methodA(); // Error
//      ^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:52:6: Error: The method 'methodC1' isn't defined for the class 'B<String>'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodC1'.
//   b1.methodC1(); // Error
//      ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:53:6: Error: The method 'methodC2' isn't defined for the class 'B<String>'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodC2'.
//   b1.methodC2(); // Error
//      ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:54:6: Error: The method 'methodD1' isn't defined for the class 'B<String>'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodD1'.
//   b1.methodD1(); // Error
//      ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:56:6: Error: The method 'methodA' isn't defined for the class 'B<num>'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodA'.
//   b2.methodA(); // Error
//      ^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:57:6: Error: The method 'methodC1' isn't defined for the class 'B<num>'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodC1'.
//   b2.methodC1(); // Error
//      ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:58:6: Error: The method 'methodC2' isn't defined for the class 'B<num>'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodC2'.
//   b2.methodC2(); // Error
//      ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:59:6: Error: The method 'methodD1' isn't defined for the class 'B<num>'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodD1'.
//   b2.methodD1(); // Error
//      ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:61:6: Error: The method 'methodB' isn't defined for the class 'C1'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodB'.
//   c1.methodB(); // Error
//      ^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:62:6: Error: The method 'methodC2' isn't defined for the class 'C1'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodC2'.
//   c1.methodC2(); // Error
//      ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:63:6: Error: The method 'methodD1' isn't defined for the class 'C1'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodD1'.
//   c1.methodD1(); // Error
//      ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:65:6: Error: The method 'methodC1' isn't defined for the class 'C2'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodC1'.
//   c2.methodC1(); // Error
//      ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:66:6: Error: The method 'methodD1' isn't defined for the class 'C2'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodD1'.
//   c2.methodD1(); // Error
//      ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:68:6: Error: The method 'methodB' isn't defined for the class 'D1'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodB'.
//   d1.methodB(); // Error
//      ^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:69:6: Error: The method 'methodC2' isn't defined for the class 'D1'.
// Try correcting the name to the name of an existing method, or defining a method named 'methodC2'.
//   d1.methodC2(); // Error
//      ^^^^^^^^
//
// pkg/front_end/testcases/inline_class/implements.dart:71:7: Error: A value of type 'B<String>' can't be assigned to a variable of type 'A'.
//   a = b1; // Error
//       ^
//
// pkg/front_end/testcases/inline_class/implements.dart:72:7: Error: A value of type 'B<num>' can't be assigned to a variable of type 'A'.
//   a = b2; // Error
//       ^
//
// pkg/front_end/testcases/inline_class/implements.dart:74:8: Error: A value of type 'A' can't be assigned to a variable of type 'B<String>'.
//   b1 = a; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:75:8: Error: A value of type 'B<num>' can't be assigned to a variable of type 'B<String>'.
//   b1 = b2; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:76:8: Error: A value of type 'C1' can't be assigned to a variable of type 'B<String>'.
//   b1 = c1; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:77:8: Error: A value of type 'C2' can't be assigned to a variable of type 'B<String>'.
//   b1 = c2; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:78:8: Error: A value of type 'D1' can't be assigned to a variable of type 'B<String>'.
//   b1 = d1; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:80:8: Error: A value of type 'A' can't be assigned to a variable of type 'B<num>'.
//   b2 = a; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:81:8: Error: A value of type 'B<String>' can't be assigned to a variable of type 'B<num>'.
//   b2 = b1; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:82:8: Error: A value of type 'C1' can't be assigned to a variable of type 'B<num>'.
//   b2 = c1; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:83:8: Error: A value of type 'D1' can't be assigned to a variable of type 'B<num>'.
//   b2 = d1; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:85:8: Error: A value of type 'A' can't be assigned to a variable of type 'C1'.
//   c1 = a; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:86:8: Error: A value of type 'B<String>' can't be assigned to a variable of type 'C1'.
//   c1 = b1; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:87:8: Error: A value of type 'B<num>' can't be assigned to a variable of type 'C1'.
//   c1 = b2; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:88:8: Error: A value of type 'C2' can't be assigned to a variable of type 'C1'.
//   c1 = c2; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:90:8: Error: A value of type 'A' can't be assigned to a variable of type 'C2'.
//   c2 = a; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:91:8: Error: A value of type 'B<String>' can't be assigned to a variable of type 'C2'.
//   c2 = b1; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:92:8: Error: A value of type 'B<num>' can't be assigned to a variable of type 'C2'.
//   c2 = b2; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:93:8: Error: A value of type 'C1' can't be assigned to a variable of type 'C2'.
//   c2 = c1; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:94:8: Error: A value of type 'D1' can't be assigned to a variable of type 'C2'.
//   c2 = d1; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:96:8: Error: A value of type 'A' can't be assigned to a variable of type 'D1'.
//   d1 = a; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:97:8: Error: A value of type 'B<String>' can't be assigned to a variable of type 'D1'.
//   d1 = b1; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:98:8: Error: A value of type 'B<num>' can't be assigned to a variable of type 'D1'.
//   d1 = b2; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:99:8: Error: A value of type 'C1' can't be assigned to a variable of type 'D1'.
//   d1 = c1; // Error
//        ^
//
// pkg/front_end/testcases/inline_class/implements.dart:100:8: Error: A value of type 'C2' can't be assigned to a variable of type 'D1'.
//   d1 = c2; // Error
//        ^
//
import self as self;
import "dart:core" as core;

inline class A /* declaredRepresentationType = core::int */ {
  method methodA = self::A|methodA;
  tearoff methodA = self::A|get#methodA;
  constructor • = self::A|;
  tearoff • = self::A|get#;
}
inline class B<T extends core::Object? = dynamic> /* declaredRepresentationType = T% */ {
  method methodB = self::B|methodB;
  tearoff methodB = self::B|get#methodB;
  constructor • = self::B|;
}
inline class C1 /* declaredRepresentationType = core::int */ implements self::A {
  method methodC1 = self::C1|methodC1;
  tearoff methodC1 = self::C1|get#methodC1;
  constructor • = self::C1|;
  tearoff • = self::C1|get#;
}
inline class C2 /* declaredRepresentationType = core::int */ implements self::A, self::B<core::int> {
  method methodC2 = self::C2|methodC2;
  tearoff methodC2 = self::C2|get#methodC2;
  constructor • = self::C2|;
  tearoff • = self::C2|get#;
}
inline class D1 /* declaredRepresentationType = core::int */ implements self::C1 {
  method methodD1 = self::D1|methodD1;
  tearoff methodD1 = self::D1|get#methodD1;
  constructor • = self::D1|;
  tearoff • = self::D1|get#;
}
static method A|(core::int it) → self::A {
  final self::A #this = it;
  return #this;
}
static method A|get#(core::int it) → self::A
  return self::A|(it);
static method A|methodA(lowered final self::A #this) → core::int
  return (#this as{ForNonNullableByDefault} core::int).{core::num::+}(5){(core::num) → core::int};
static method A|get#methodA(lowered final self::A #this) → () → core::int
  return () → core::int => self::A|methodA(#this);
static method B|<T extends core::Object? = dynamic>(self::B|::T% it) → self::B<self::B|::T%> {
  final self::B<self::B|::T%> #this = it;
  return #this;
}
static method B|methodB<T extends core::Object? = dynamic>(lowered final self::B<self::B|methodB::T%> #this) → self::B|methodB::T%
  return #this as{ForNonNullableByDefault} self::B|methodB::T%;
static method B|get#methodB<T extends core::Object? = dynamic>(lowered final self::B<self::B|get#methodB::T%> #this) → () → self::B|get#methodB::T%
  return () → self::B|get#methodB::T% => self::B|methodB<self::B|get#methodB::T%>(#this);
static method C1|(core::int it) → self::C1 {
  final self::C1 #this = it;
  return #this;
}
static method C1|get#(core::int it) → self::C1
  return self::C1|(it);
static method C1|methodC1(lowered final self::C1 #this) → core::int
  return (#this as{ForNonNullableByDefault} core::int).{core::num::+}(42){(core::num) → core::int};
static method C1|get#methodC1(lowered final self::C1 #this) → () → core::int
  return () → core::int => self::C1|methodC1(#this);
static method C2|(core::int it) → self::C2 {
  final self::C2 #this = it;
  return #this;
}
static method C2|get#(core::int it) → self::C2
  return self::C2|(it);
static method C2|methodC2(lowered final self::C2 #this) → core::int
  return (#this as{ForNonNullableByDefault} core::int).{core::num::+}(87){(core::num) → core::int};
static method C2|get#methodC2(lowered final self::C2 #this) → () → core::int
  return () → core::int => self::C2|methodC2(#this);
static method D1|(core::int it) → self::D1 {
  final self::D1 #this = it;
  return #this;
}
static method D1|get#(core::int it) → self::D1
  return self::D1|(it);
static method D1|methodD1(lowered final self::D1 #this) → core::int
  return (#this as{ForNonNullableByDefault} core::int).{core::num::+}(123){(core::num) → core::int};
static method D1|get#methodD1(lowered final self::D1 #this) → () → core::int
  return () → core::int => self::D1|methodD1(#this);
static method errors(self::A a, self::B<core::String> b1, self::B<core::num> b2, self::C1 c1, self::C2 c2, self::D1 d1) → dynamic {
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:46:5: Error: The method 'methodB' isn't defined for the class 'A'.
Try correcting the name to the name of an existing method, or defining a method named 'methodB'.
  a.methodB(); // Error
    ^^^^^^^" in a{<unresolved>}.methodB();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:47:5: Error: The method 'methodC1' isn't defined for the class 'A'.
Try correcting the name to the name of an existing method, or defining a method named 'methodC1'.
  a.methodC1(); // Error
    ^^^^^^^^" in a{<unresolved>}.methodC1();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:48:5: Error: The method 'methodC2' isn't defined for the class 'A'.
Try correcting the name to the name of an existing method, or defining a method named 'methodC2'.
  a.methodC2(); // Error
    ^^^^^^^^" in a{<unresolved>}.methodC2();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:49:5: Error: The method 'methodD1' isn't defined for the class 'A'.
Try correcting the name to the name of an existing method, or defining a method named 'methodD1'.
  a.methodD1(); // Error
    ^^^^^^^^" in a{<unresolved>}.methodD1();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:51:6: Error: The method 'methodA' isn't defined for the class 'B<String>'.
Try correcting the name to the name of an existing method, or defining a method named 'methodA'.
  b1.methodA(); // Error
     ^^^^^^^" in b1{<unresolved>}.methodA();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:52:6: Error: The method 'methodC1' isn't defined for the class 'B<String>'.
Try correcting the name to the name of an existing method, or defining a method named 'methodC1'.
  b1.methodC1(); // Error
     ^^^^^^^^" in b1{<unresolved>}.methodC1();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:53:6: Error: The method 'methodC2' isn't defined for the class 'B<String>'.
Try correcting the name to the name of an existing method, or defining a method named 'methodC2'.
  b1.methodC2(); // Error
     ^^^^^^^^" in b1{<unresolved>}.methodC2();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:54:6: Error: The method 'methodD1' isn't defined for the class 'B<String>'.
Try correcting the name to the name of an existing method, or defining a method named 'methodD1'.
  b1.methodD1(); // Error
     ^^^^^^^^" in b1{<unresolved>}.methodD1();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:56:6: Error: The method 'methodA' isn't defined for the class 'B<num>'.
Try correcting the name to the name of an existing method, or defining a method named 'methodA'.
  b2.methodA(); // Error
     ^^^^^^^" in b2{<unresolved>}.methodA();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:57:6: Error: The method 'methodC1' isn't defined for the class 'B<num>'.
Try correcting the name to the name of an existing method, or defining a method named 'methodC1'.
  b2.methodC1(); // Error
     ^^^^^^^^" in b2{<unresolved>}.methodC1();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:58:6: Error: The method 'methodC2' isn't defined for the class 'B<num>'.
Try correcting the name to the name of an existing method, or defining a method named 'methodC2'.
  b2.methodC2(); // Error
     ^^^^^^^^" in b2{<unresolved>}.methodC2();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:59:6: Error: The method 'methodD1' isn't defined for the class 'B<num>'.
Try correcting the name to the name of an existing method, or defining a method named 'methodD1'.
  b2.methodD1(); // Error
     ^^^^^^^^" in b2{<unresolved>}.methodD1();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:61:6: Error: The method 'methodB' isn't defined for the class 'C1'.
Try correcting the name to the name of an existing method, or defining a method named 'methodB'.
  c1.methodB(); // Error
     ^^^^^^^" in c1{<unresolved>}.methodB();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:62:6: Error: The method 'methodC2' isn't defined for the class 'C1'.
Try correcting the name to the name of an existing method, or defining a method named 'methodC2'.
  c1.methodC2(); // Error
     ^^^^^^^^" in c1{<unresolved>}.methodC2();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:63:6: Error: The method 'methodD1' isn't defined for the class 'C1'.
Try correcting the name to the name of an existing method, or defining a method named 'methodD1'.
  c1.methodD1(); // Error
     ^^^^^^^^" in c1{<unresolved>}.methodD1();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:65:6: Error: The method 'methodC1' isn't defined for the class 'C2'.
Try correcting the name to the name of an existing method, or defining a method named 'methodC1'.
  c2.methodC1(); // Error
     ^^^^^^^^" in c2{<unresolved>}.methodC1();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:66:6: Error: The method 'methodD1' isn't defined for the class 'C2'.
Try correcting the name to the name of an existing method, or defining a method named 'methodD1'.
  c2.methodD1(); // Error
     ^^^^^^^^" in c2{<unresolved>}.methodD1();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:68:6: Error: The method 'methodB' isn't defined for the class 'D1'.
Try correcting the name to the name of an existing method, or defining a method named 'methodB'.
  d1.methodB(); // Error
     ^^^^^^^" in d1{<unresolved>}.methodB();
  invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:69:6: Error: The method 'methodC2' isn't defined for the class 'D1'.
Try correcting the name to the name of an existing method, or defining a method named 'methodC2'.
  d1.methodC2(); // Error
     ^^^^^^^^" in d1{<unresolved>}.methodC2();
  a = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:71:7: Error: A value of type 'B<String>' can't be assigned to a variable of type 'A'.
  a = b1; // Error
      ^" in b1 as{TypeError,ForNonNullableByDefault} self::A;
  a = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:72:7: Error: A value of type 'B<num>' can't be assigned to a variable of type 'A'.
  a = b2; // Error
      ^" in b2 as{TypeError,ForNonNullableByDefault} self::A;
  b1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:74:8: Error: A value of type 'A' can't be assigned to a variable of type 'B<String>'.
  b1 = a; // Error
       ^" in a as{TypeError,ForNonNullableByDefault} self::B<core::String>;
  b1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:75:8: Error: A value of type 'B<num>' can't be assigned to a variable of type 'B<String>'.
  b1 = b2; // Error
       ^" in b2 as{TypeError,ForNonNullableByDefault} self::B<core::String>;
  b1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:76:8: Error: A value of type 'C1' can't be assigned to a variable of type 'B<String>'.
  b1 = c1; // Error
       ^" in c1 as{TypeError,ForNonNullableByDefault} self::B<core::String>;
  b1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:77:8: Error: A value of type 'C2' can't be assigned to a variable of type 'B<String>'.
  b1 = c2; // Error
       ^" in c2 as{TypeError,ForNonNullableByDefault} self::B<core::String>;
  b1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:78:8: Error: A value of type 'D1' can't be assigned to a variable of type 'B<String>'.
  b1 = d1; // Error
       ^" in d1 as{TypeError,ForNonNullableByDefault} self::B<core::String>;
  b2 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:80:8: Error: A value of type 'A' can't be assigned to a variable of type 'B<num>'.
  b2 = a; // Error
       ^" in a as{TypeError,ForNonNullableByDefault} self::B<core::num>;
  b2 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:81:8: Error: A value of type 'B<String>' can't be assigned to a variable of type 'B<num>'.
  b2 = b1; // Error
       ^" in b1 as{TypeError,ForNonNullableByDefault} self::B<core::num>;
  b2 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:82:8: Error: A value of type 'C1' can't be assigned to a variable of type 'B<num>'.
  b2 = c1; // Error
       ^" in c1 as{TypeError,ForNonNullableByDefault} self::B<core::num>;
  b2 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:83:8: Error: A value of type 'D1' can't be assigned to a variable of type 'B<num>'.
  b2 = d1; // Error
       ^" in d1 as{TypeError,ForNonNullableByDefault} self::B<core::num>;
  c1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:85:8: Error: A value of type 'A' can't be assigned to a variable of type 'C1'.
  c1 = a; // Error
       ^" in a as{TypeError,ForNonNullableByDefault} self::C1;
  c1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:86:8: Error: A value of type 'B<String>' can't be assigned to a variable of type 'C1'.
  c1 = b1; // Error
       ^" in b1 as{TypeError,ForNonNullableByDefault} self::C1;
  c1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:87:8: Error: A value of type 'B<num>' can't be assigned to a variable of type 'C1'.
  c1 = b2; // Error
       ^" in b2 as{TypeError,ForNonNullableByDefault} self::C1;
  c1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:88:8: Error: A value of type 'C2' can't be assigned to a variable of type 'C1'.
  c1 = c2; // Error
       ^" in c2 as{TypeError,ForNonNullableByDefault} self::C1;
  c2 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:90:8: Error: A value of type 'A' can't be assigned to a variable of type 'C2'.
  c2 = a; // Error
       ^" in a as{TypeError,ForNonNullableByDefault} self::C2;
  c2 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:91:8: Error: A value of type 'B<String>' can't be assigned to a variable of type 'C2'.
  c2 = b1; // Error
       ^" in b1 as{TypeError,ForNonNullableByDefault} self::C2;
  c2 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:92:8: Error: A value of type 'B<num>' can't be assigned to a variable of type 'C2'.
  c2 = b2; // Error
       ^" in b2 as{TypeError,ForNonNullableByDefault} self::C2;
  c2 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:93:8: Error: A value of type 'C1' can't be assigned to a variable of type 'C2'.
  c2 = c1; // Error
       ^" in c1 as{TypeError,ForNonNullableByDefault} self::C2;
  c2 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:94:8: Error: A value of type 'D1' can't be assigned to a variable of type 'C2'.
  c2 = d1; // Error
       ^" in d1 as{TypeError,ForNonNullableByDefault} self::C2;
  d1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:96:8: Error: A value of type 'A' can't be assigned to a variable of type 'D1'.
  d1 = a; // Error
       ^" in a as{TypeError,ForNonNullableByDefault} self::D1;
  d1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:97:8: Error: A value of type 'B<String>' can't be assigned to a variable of type 'D1'.
  d1 = b1; // Error
       ^" in b1 as{TypeError,ForNonNullableByDefault} self::D1;
  d1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:98:8: Error: A value of type 'B<num>' can't be assigned to a variable of type 'D1'.
  d1 = b2; // Error
       ^" in b2 as{TypeError,ForNonNullableByDefault} self::D1;
  d1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:99:8: Error: A value of type 'C1' can't be assigned to a variable of type 'D1'.
  d1 = c1; // Error
       ^" in c1 as{TypeError,ForNonNullableByDefault} self::D1;
  d1 = invalid-expression "pkg/front_end/testcases/inline_class/implements.dart:100:8: Error: A value of type 'C2' can't be assigned to a variable of type 'D1'.
  d1 = c2; // Error
       ^" in c2 as{TypeError,ForNonNullableByDefault} self::D1;
}
static method method(self::A a, self::B<core::String> b1, self::B<core::num> b2, self::C1 c1, self::C2 c2, self::D1 d1) → dynamic {
  self::expect(0.{core::num::+}(5){(core::num) → core::int}, self::A|methodA(a));
  self::expect("0", self::B|methodB<core::String>(b1));
  self::expect(1.{core::num::+}(0){(core::num) → core::int}, self::B|methodB<core::num>(b2));
  self::expect(2.{core::num::+}(5){(core::num) → core::int}, self::A|methodA(c1));
  self::expect(2.{core::num::+}(42){(core::num) → core::int}, self::C1|methodC1(c1));
  self::expect(3.{core::num::+}(5){(core::num) → core::int}, self::A|methodA(c2));
  self::expect(3, self::B|methodB<core::int>(c2));
  self::expect(3.{core::num::+}(87){(core::num) → core::int}, self::C2|methodC2(c2));
  self::expect(4.{core::num::+}(5){(core::num) → core::int}, self::A|methodA(d1));
  self::expect(4.{core::num::+}(42){(core::num) → core::int}, self::C1|methodC1(d1));
  self::expect(4.{core::num::+}(123){(core::num) → core::int}, self::D1|methodD1(d1));
  a = a;
  a = c1;
  a = c2;
  a = d1;
  b1 = b1;
  b2 = b2;
  b2 = c2;
  c1 = c1;
  c1 = d1;
  c2 = c2;
  d1 = d1;
}
static method main() → dynamic {
  self::method(self::A|(0), self::B|<core::String>("0"), self::B|<core::num>(1), self::C1|(2), self::C2|(3), self::D1|(4));
}
static method expect(dynamic expected, dynamic actual) → dynamic {
  if(!(expected =={core::Object::==}{(core::Object) → core::bool} actual)) {
    throw "Expected ${expected}, actual ${actual}";
  }
}


Extra constant evaluation status:
Evaluated: InstanceInvocation @ org-dartlang-testcase:///implements.dart:104:12 -> IntConstant(5)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///implements.dart:108:12 -> IntConstant(1)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///implements.dart:110:12 -> IntConstant(7)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///implements.dart:111:12 -> IntConstant(44)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///implements.dart:113:12 -> IntConstant(8)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///implements.dart:115:12 -> IntConstant(90)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///implements.dart:117:12 -> IntConstant(9)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///implements.dart:118:12 -> IntConstant(46)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///implements.dart:119:12 -> IntConstant(127)
Extra constant evaluation: evaluated: 151, effectively constant: 9
