library test;
import self as self;
import "dart:core" as core;

class B<T extends core::Object = dynamic> extends core::Object {
  field self::B::T x;
  field self::B::T y;
  synthetic constructor •() → void
    ;
}
abstract class C<T extends core::Object = dynamic> extends core::Object implements self::B<core::num> {
  field dynamic x;
  synthetic constructor •() → void
    ;
  abstract get y() → dynamic;
  abstract set y(dynamic value) → dynamic;
}
abstract class D<T extends core::Object = dynamic> extends core::Object implements self::B<self::D::T> {
  field dynamic x;
  synthetic constructor •() → void
    ;
  abstract get y() → dynamic;
  abstract set y(dynamic value) → dynamic;
}
static method main() → dynamic
  ;
