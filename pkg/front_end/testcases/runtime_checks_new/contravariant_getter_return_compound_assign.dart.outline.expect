library test;
import self as self;
import "dart:core" as core;

typedef F<T extends core::Object = dynamic> = (T) → void;
class B<T extends core::Object = dynamic> extends core::Object {
  synthetic constructor •() → self::B<self::B::T>
    ;
  operator +(self::B<self::B::T> other) → self::B<self::B::T>
    ;
}
class C<T extends core::Object = dynamic> extends core::Object {
  synthetic constructor •() → self::C<self::C::T>
    ;
  get x() → self::B<(self::C::T) → void>
    ;
  set x(self::B<(self::C::T) → void> value) → void
    ;
}
static method test(self::C<core::num> c) → void
  ;
static method main() → dynamic
  ;
