library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/constructor_tearoffs/unnamed_constructor.dart:6:5: Error: This requires the 'constructor-tearoffs' language feature to be enabled.
// Try updating your pubspec.yaml to set the minimum SDK constraint to 2.14 or higher, and running 'pub get'.
//   A.new();
//     ^^^
//
// pkg/front_end/testcases/constructor_tearoffs/unnamed_constructor.dart:7:38: Error: This requires the 'constructor-tearoffs' language feature to be enabled.
// Try updating your pubspec.yaml to set the minimum SDK constraint to 2.14 or higher, and running 'pub get'.
//   factory A.redirectingFactory() = A.new;
//                                      ^^^
//
// pkg/front_end/testcases/constructor_tearoffs/unnamed_constructor.dart:8:43: Error: This requires the 'constructor-tearoffs' language feature to be enabled.
// Try updating your pubspec.yaml to set the minimum SDK constraint to 2.14 or higher, and running 'pub get'.
//   factory A.redirectingFactoryChild() = B.new;
//                                           ^^^
//
// pkg/front_end/testcases/constructor_tearoffs/unnamed_constructor.dart:9:26: Error: This requires the 'constructor-tearoffs' language feature to be enabled.
// Try updating your pubspec.yaml to set the minimum SDK constraint to 2.14 or higher, and running 'pub get'.
//   A.redirecting() : this.new();
//                          ^^^
//
// pkg/front_end/testcases/constructor_tearoffs/unnamed_constructor.dart:16:11: Error: This requires the 'constructor-tearoffs' language feature to be enabled.
// Try updating your pubspec.yaml to set the minimum SDK constraint to 2.14 or higher, and running 'pub get'.
//   const C.new(this.x);
//           ^^^
//
// pkg/front_end/testcases/constructor_tearoffs/unnamed_constructor.dart:19:9: Error: Expected 'extends' instead of this.
// class D extend C {
//         ^^^^^^
//
// pkg/front_end/testcases/constructor_tearoffs/unnamed_constructor.dart:20:20: Error: This requires the 'constructor-tearoffs' language feature to be enabled.
// Try updating your pubspec.yaml to set the minimum SDK constraint to 2.14 or higher, and running 'pub get'.
//   D(int x) : super.new(x * 2);
//                    ^^^
//
// pkg/front_end/testcases/constructor_tearoffs/unnamed_constructor.dart:8:41: Error: Redirection constructor target not found: 'B.new'
//   factory A.redirectingFactoryChild() = B.new;
//                                         ^
//
import self as self;
import "dart:core" as core;

class A extends core::Object {
  static final field dynamic _redirecting# = <dynamic>[self::A::redirectingFactory, self::A::redirectingFactoryChild]/*isLegacy*/;
  constructor new() → self::A
    ;
  constructor redirecting() → self::A
    ;
  static factory redirectingFactory() → self::A
    let dynamic #redirecting_factory = self::A::new in invalid-expression;
  static factory redirectingFactoryChild() → self::A
    let dynamic #redirecting_factory = "B.new" in invalid-expression;
}
class B extends self::A {
  synthetic constructor •() → self::B
    ;
}
class C extends core::Object /*hasConstConstructor*/  {
  final field core::int x;
  const constructor new(core::int x) → self::C
    : self::C::x = x, super core::Object::•()
    ;
}
class D extends core::Object {
  constructor •(core::int x) → self::D
    ;
}
static method test() → dynamic
  ;
static method main() → dynamic
  ;
