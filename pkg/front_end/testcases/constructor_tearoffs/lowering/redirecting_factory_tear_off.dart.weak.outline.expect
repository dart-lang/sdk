library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class Class1 extends core::Object {
  static final field dynamic _redirecting# = <dynamic>[self::Class1::•]/*isLegacy*/;
  constructor _() → self::Class1
    ;
  static method _#_#tearOff() → self::Class1
    return new self::Class1::_();
  static factory •() → self::Class1
    return new self::Class1::_();
  static method _#new#tearOff() → self::Class1
    return new self::Class1::_();
}
class Class2 extends core::Object {
  static final field dynamic _redirecting# = <dynamic>[self::Class2::named]/*isLegacy*/;
  constructor __() → self::Class2
    ;
  static method _#__#tearOff() → self::Class2
    return new self::Class2::__();
  static factory _() → self::Class2
    ;
  static method _#_#tearOff() → self::Class2
    return self::Class2::_();
  static factory named() → self::Class2
    return self::Class2::_();
  static method _#named#tearOff() → self::Class2
    return self::Class2::_();
}
class Class3 extends core::Object {
  final field core::int field;
  static final field dynamic _redirecting# = <dynamic>[self::Class3::•]/*isLegacy*/;
  constructor _(core::int field) → self::Class3
    ;
  static method _#_#tearOff(core::int field) → self::Class3
    return new self::Class3::_(field);
  static factory •(core::int field) → self::Class3
    return new self::Class3::_(field);
  static method _#new#tearOff(core::int field) → self::Class3
    return new self::Class3::_(field);
}
class Class4 extends core::Object {
  final field core::int? field;
  static final field dynamic _redirecting# = <dynamic>[self::Class4::•]/*isLegacy*/;
  constructor _([core::int? field]) → self::Class4
    ;
  static method _#_#tearOff([core::int? field]) → self::Class4
    return new self::Class4::_(field);
  static factory •([core::int? field]) → self::Class4
    return new self::Class4::_(field);
  static method _#new#tearOff([core::int? field]) → self::Class4
    return new self::Class4::_(field);
}
class Class5 extends core::Object {
  final field core::int field1;
  final field core::int? field2;
  static final field dynamic _redirecting# = <dynamic>[self::Class5::•]/*isLegacy*/;
  constructor _(core::int field1, [core::int? field2]) → self::Class5
    ;
  static method _#_#tearOff(core::int field1, [core::int? field2]) → self::Class5
    return new self::Class5::_(field1, field2);
  static factory •(core::int field1, [core::int? field2]) → self::Class5
    return new self::Class5::_(field1, field2);
  static method _#new#tearOff(core::int field1, [core::int? field2]) → self::Class5
    return new self::Class5::_(field1, field2);
}
class Class6 extends core::Object {
  final field core::int field1;
  final field core::int? field2;
  final field core::int field3;
  static final field dynamic _redirecting# = <dynamic>[self::Class6::•]/*isLegacy*/;
  constructor _(core::int field1, {core::int? field2, required core::int field3}) → self::Class6
    ;
  static method _#_#tearOff(core::int field1, {core::int? field2, required core::int field3}) → self::Class6
    return new self::Class6::_(field1, field2: field2, field3: field3);
  static factory •(core::int field1, {core::int? field2, required core::int field3}) → self::Class6
    return new self::Class6::_(field1, field2: field2, field3: field3);
  static method _#new#tearOff(core::int field1, {core::int? field2, required core::int field3}) → self::Class6
    return new self::Class6::_(field1, field2: field2, field3: field3);
}
class Class7a extends core::Object implements self::Class7b {
  constructor •() → self::Class7a
    ;
  static method _#new#tearOff() → self::Class7a
    return new self::Class7a::•();
}
class Class7b extends core::Object {
  static final field dynamic _redirecting# = <dynamic>[self::Class7b::•]/*isLegacy*/;
  static factory •() → self::Class7b
    return new self::Class7a::•();
  static method _#new#tearOff() → self::Class7b
    return new self::Class7a::•();
}
class Class8a<T extends core::Object? = dynamic> extends core::Object implements self::Class8b<self::Class8a::T%> {
  constructor •() → self::Class8a<self::Class8a::T%>
    ;
  static method _#new#tearOff<T extends core::Object? = dynamic>() → self::Class8a<self::Class8a::_#new#tearOff::T%>
    return new self::Class8a::•<self::Class8a::_#new#tearOff::T%>();
}
class Class8b<T extends core::Object? = dynamic> extends core::Object {
  static final field dynamic _redirecting# = <dynamic>[self::Class8b::•]/*isLegacy*/;
  static factory •<T extends core::Object? = dynamic>() → self::Class8b<self::Class8b::•::T%>
    return new self::Class8a::•<self::Class8b::•::T%>();
  static method _#new#tearOff<T extends core::Object? = dynamic>() → self::Class8b<self::Class8b::_#new#tearOff::T%>
    return new self::Class8a::•<self::Class8b::_#new#tearOff::T%>();
}
static final field core::bool inSoundMode;
static method main() → dynamic
  ;
static method testNoArgs() → dynamic
  ;
static method testArgs() → dynamic
  ;
static method expect(dynamic expected, dynamic actual) → dynamic
  ;
static method throws(() → dynamic f, {core::bool inSoundModeOnly}) → dynamic
  ;
