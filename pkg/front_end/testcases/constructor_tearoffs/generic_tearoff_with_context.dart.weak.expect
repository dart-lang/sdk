library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:11:34: Error: Getter not found: 'foo1'.
// A<X> Function<X>(X) test1() => A.foo1; // Ok.
//                                  ^^^^
//
// pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:12:34: Error: Getter not found: 'foo2'.
// A<X> Function<X>(X) test2() => A.foo2; // Error.
//                                  ^^^^
//
// pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:13:34: Error: Getter not found: 'new'.
// A<X> Function<X>(X) test3() => A.new; // Error.
//                                  ^^^
//
// pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:14:39: Error: Getter not found: 'new'.
// A<X> Function<X>(X) test4() => A<int>.new; // Error.
//                                       ^^^
//
// pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:15:47: Error: Getter not found: 'new'.
// A<X> Function<X>(X) test5() => A<int, String>.new; // Error.
//                                               ^^^
//
// pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:16:39: Error: Getter not found: 'foo1'.
// A<X> Function<X>(X) test6() => A<int>.foo1; // Error.
//                                       ^^^^
//
// pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:17:47: Error: Getter not found: 'foo1'.
// A<X> Function<X>(X) test7() => A<int, String>.foo1; // Error.
//                                               ^^^^
//
// pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:18:39: Error: Getter not found: 'foo2'.
// A<X> Function<X>(X) test8() => A<int>.foo2; // Error.
//                                       ^^^^
//
// pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:19:47: Error: Getter not found: 'foo2'.
// A<X> Function<X>(X) test9() => A<int, String>.foo2; // Error.
//                                               ^^^^
//
import self as self;
import "dart:core" as core;

class A<X extends core::Object? = dynamic> extends core::Object {
  constructor foo1(self::A::X% x) → self::A<self::A::X%>
    : super core::Object::•() {}
  constructor foo2(self::A::X% x, core::int y) → self::A<self::A::X%>
    : super core::Object::•() {}
  constructor •() → self::A<self::A::X%>
    : super core::Object::•()
    ;
}
static method test1() → <X extends core::Object? = dynamic>(X%) → self::A<X%>
  return invalid-expression "pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:11:34: Error: Getter not found: 'foo1'.
A<X> Function<X>(X) test1() => A.foo1; // Ok.
                                 ^^^^" as{TypeError,ForDynamic,ForNonNullableByDefault} <X extends core::Object? = dynamic>(X%) → self::A<X%>;
static method test2() → <X extends core::Object? = dynamic>(X%) → self::A<X%>
  return invalid-expression "pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:12:34: Error: Getter not found: 'foo2'.
A<X> Function<X>(X) test2() => A.foo2; // Error.
                                 ^^^^" as{TypeError,ForDynamic,ForNonNullableByDefault} <X extends core::Object? = dynamic>(X%) → self::A<X%>;
static method test3() → <X extends core::Object? = dynamic>(X%) → self::A<X%>
  return invalid-expression "pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:13:34: Error: Getter not found: 'new'.
A<X> Function<X>(X) test3() => A.new; // Error.
                                 ^^^" as{TypeError,ForDynamic,ForNonNullableByDefault} <X extends core::Object? = dynamic>(X%) → self::A<X%>;
static method test4() → <X extends core::Object? = dynamic>(X%) → self::A<X%>
  return invalid-expression "pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:14:39: Error: Getter not found: 'new'.
A<X> Function<X>(X) test4() => A<int>.new; // Error.
                                      ^^^" as{TypeError,ForDynamic,ForNonNullableByDefault} <X extends core::Object? = dynamic>(X%) → self::A<X%>;
static method test5() → <X extends core::Object? = dynamic>(X%) → self::A<X%>
  return invalid-expression "pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:15:47: Error: Getter not found: 'new'.
A<X> Function<X>(X) test5() => A<int, String>.new; // Error.
                                              ^^^" as{TypeError,ForDynamic,ForNonNullableByDefault} <X extends core::Object? = dynamic>(X%) → self::A<X%>;
static method test6() → <X extends core::Object? = dynamic>(X%) → self::A<X%>
  return invalid-expression "pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:16:39: Error: Getter not found: 'foo1'.
A<X> Function<X>(X) test6() => A<int>.foo1; // Error.
                                      ^^^^" as{TypeError,ForDynamic,ForNonNullableByDefault} <X extends core::Object? = dynamic>(X%) → self::A<X%>;
static method test7() → <X extends core::Object? = dynamic>(X%) → self::A<X%>
  return invalid-expression "pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:17:47: Error: Getter not found: 'foo1'.
A<X> Function<X>(X) test7() => A<int, String>.foo1; // Error.
                                              ^^^^" as{TypeError,ForDynamic,ForNonNullableByDefault} <X extends core::Object? = dynamic>(X%) → self::A<X%>;
static method test8() → <X extends core::Object? = dynamic>(X%) → self::A<X%>
  return invalid-expression "pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:18:39: Error: Getter not found: 'foo2'.
A<X> Function<X>(X) test8() => A<int>.foo2; // Error.
                                      ^^^^" as{TypeError,ForDynamic,ForNonNullableByDefault} <X extends core::Object? = dynamic>(X%) → self::A<X%>;
static method test9() → <X extends core::Object? = dynamic>(X%) → self::A<X%>
  return invalid-expression "pkg/front_end/testcases/constructor_tearoffs/generic_tearoff_with_context.dart:19:47: Error: Getter not found: 'foo2'.
A<X> Function<X>(X) test9() => A<int, String>.foo2; // Error.
                                              ^^^^" as{TypeError,ForDynamic,ForNonNullableByDefault} <X extends core::Object? = dynamic>(X%) → self::A<X%>;
static method main() → dynamic {}
