library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/regress/issue_41265.crash_dart:9:53: Error: Unexpected token '>'.
// class DND1 extends Object with M<dynamic> Function()> {
//                                                     ^
//
// pkg/front_end/testcases/regress/issue_41265.crash_dart:9:7: Error: The type '() -> M<dynamic>' can't be mixed in.
// class DND1 extends Object with M<dynamic> Function()> {
//       ^
//
// pkg/front_end/testcases/regress/issue_41265.crash_dart:12:7: Error: The type '() -> M<dynamic>' can't be mixed in.
// class DND2 extends Object with M<dynamic> Function() {
//       ^
//
// pkg/front_end/testcases/regress/issue_41265.crash_dart:9:7: Error: Can't use a function type as supertype.
// class DND1 extends Object with M<dynamic> Function()> {
//       ^
//
// pkg/front_end/testcases/regress/issue_41265.crash_dart:12:7: Error: Can't use a function type as supertype.
// class DND2 extends Object with M<dynamic> Function() {
//       ^
//
// pkg/front_end/testcases/regress/issue_41265.crash_dart:15:7: Error: Can't use a function type as supertype.
// class DND3 extends M<dynamic> Function() {
//       ^
//
// pkg/front_end/testcases/regress/issue_41265.crash_dart:18:7: Error: Can't use a function type as supertype.
// class DND4 implements M<dynamic> Function() {
//       ^
//
import self as self;
import "dart:core" as core;

class A<T extends core::Object? = dynamic> extends core::Object {
  synthetic constructor •() → self::A<self::A::T%>
    : super core::Object::•()
    ;
}
abstract class M<T extends core::Object? = dynamic> extends core::Object /*isMixinDeclaration*/  {
}
abstract class _DND1&Object extends core::Object /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_DND1&Object
    : super core::Object::•()
    ;
}
class DND1 extends self::_DND1&Object {
  synthetic constructor •() → self::DND1
    : super self::_DND1&Object::•()
    ;
}
abstract class _DND2&Object extends core::Object /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_DND2&Object
    : super core::Object::•()
    ;
}
class DND2 extends self::_DND2&Object {
  synthetic constructor •() → self::DND2
    : super self::_DND2&Object::•()
    ;
}
class DND3 extends core::Object {
  synthetic constructor •() → self::DND3
    : super core::Object::•()
    ;
}
class DND4 extends core::Object {
  synthetic constructor •() → self::DND4
    : super core::Object::•()
    ;
}
static method main() → dynamic {}
