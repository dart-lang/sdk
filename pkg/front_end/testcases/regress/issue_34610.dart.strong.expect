library;
//
// Problems in library:
//
// pkg/front_end/testcases/regress/issue_34610.dart:5:15: Error: A method declaration needs an explicit list of parameters.
// Try adding a parameter list to the method declaration.
// class A { get A.named => null; get bar => 1; }
//               ^
//
// pkg/front_end/testcases/regress/issue_34610.dart:5:11: Error: Constructors can't be a getter.
// Try removing 'get'.
// class A { get A.named => null; get bar => 1; }
//           ^^^
//
// pkg/front_end/testcases/regress/issue_34610.dart:7:11: Error: A method declaration needs an explicit list of parameters.
// Try adding a parameter list to the method declaration.
// class B { B.named : super(); get bar => 1; }
//           ^
//
// pkg/front_end/testcases/regress/issue_34610.dart:9:11: Error: A method declaration needs an explicit list of parameters.
// Try adding a parameter list to the method declaration.
// class C { C.named => null; get bar => 1; }
//           ^
//
// pkg/front_end/testcases/regress/issue_34610.dart:5:26: Error: Constructors can't have a return type.
// Try removing the return type.
// class A { get A.named => null; get bar => 1; }
//                          ^
//
// pkg/front_end/testcases/regress/issue_34610.dart:9:22: Error: Constructors can't have a return type.
// Try removing the return type.
// class C { C.named => null; get bar => 1; }
//                      ^
//
import self as self;
import "dart:core" as core;

class A extends core::Object {
  constructor named() → self::A*
    : super core::Object::•()
    invalid-expression "pkg/front_end/testcases/regress/issue_34610.dart:5:26: Error: Constructors can't have a return type.
Try removing the return type.
class A { get A.named => null; get bar => 1; }
                         ^";
  get bar() → dynamic
    return 1;
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
class B extends core::Object {
  constructor named() → self::B*
    : super core::Object::•()
    ;
  get bar() → dynamic
    return 1;
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
class C extends core::Object {
  constructor named() → self::C*
    : super core::Object::•()
    invalid-expression "pkg/front_end/testcases/regress/issue_34610.dart:9:22: Error: Constructors can't have a return type.
Try removing the return type.
class C { C.named => null; get bar => 1; }
                     ^";
  get bar() → dynamic
    return 1;
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
static method main() → dynamic {
  try {
    core::print(new self::A::named().{self::A::bar});
    throw "expected exception";
  }
  on dynamic catch(final dynamic e) {
  }
  core::print(new self::B::named().{self::B::bar});
  try {
    core::print(new self::C::named().{self::C::bar});
    throw "expected exception";
  }
  on dynamic catch(final dynamic e) {
  }
}
