library;
import self as self;
import "dart:core" as core;

abstract class B<T extends core::Object* = dynamic> extends core::Object {
  synthetic constructor •() → self::B<self::B::T*>*
    ;
}
abstract class C<T extends core::Object* = dynamic> extends core::Object {
  synthetic constructor •() → self::C<self::C::T*>*
    ;
}
class Base extends core::Object implements self::B<dynamic> {
  synthetic constructor •() → self::Base*
    ;
}
class Child1 extends self::Base implements self::C<core::int*> {
  synthetic constructor •() → self::Child1*
    ;
}
class Child2 extends self::Base implements self::C<core::double*> {
  synthetic constructor •() → self::Child2*
    ;
}
static method main() → dynamic
  ;
