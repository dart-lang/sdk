library;
import self as self;
import "dart:core" as core;

class A<T extends core::Object = dynamic> extends core::Object {
  synthetic constructor •() → void
    : super core::Object::•()
    ;
}
class M extends core::Object {
  synthetic constructor •() → void
    : super core::Object::•()
    ;
  method m() → dynamic
    return 42;
}
abstract class _C&A&M = self::A<self::A<dynamic>> with self::M {
}
class C extends self::_C&A&M {
  synthetic constructor •() → void
    : super self::A::•()
    ;
}
static method main() → dynamic {
  new self::C::•().m().+(1);
}
