main = <No Member>;
library from "org-dartlang-test:///lib1.dart" as lib1 {

  class Foo extends dart.core::Object {
    synthetic constructor •() → lib1::Foo*
      : super dart.core::Object::•()
      ;
    method fooMethod() → void {
      dart.core::print("fooMethod");
    }
    abstract member-signature get _identityHashCode() → dart.core::int*; -> dart.core::Object::_identityHashCode
    abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → dart.core::bool*; -> dart.core::Object::_instanceOf
    abstract member-signature method _simpleInstanceOf(dynamic type) → dart.core::bool*; -> dart.core::Object::_simpleInstanceOf
    abstract member-signature method _simpleInstanceOfTrue(dynamic type) → dart.core::bool*; -> dart.core::Object::_simpleInstanceOfTrue
    abstract member-signature method _simpleInstanceOfFalse(dynamic type) → dart.core::bool*; -> dart.core::Object::_simpleInstanceOfFalse
    abstract member-signature operator ==(dynamic other) → dart.core::bool*; -> dart.core::Object::==
    abstract member-signature get hashCode() → dart.core::int*; -> dart.core::Object::hashCode
    abstract member-signature method toString() → dart.core::String*; -> dart.core::Object::toString
    abstract member-signature method noSuchMethod(dart.core::Invocation* invocation) → dynamic; -> dart.core::Object::noSuchMethod
    abstract member-signature get runtimeType() → dart.core::Type*; -> dart.core::Object::runtimeType
  }
}
library from "org-dartlang-test:///lib2.dart" as lib2 {

  import "org-dartlang-test:///lib1.dart";

  class Bar extends lib1::Foo {
    synthetic constructor •() → lib2::Bar*
      : super lib1::Foo::•()
      ;
    method barMethod() → void {}
  }
}
library from "org-dartlang-test:///lib3.dart" as lib3 {

  import "org-dartlang-test:///lib1.dart";
  import "org-dartlang-test:///lib2.dart";

  static method lib3Method(lib1::Foo* foo) → void {
    lib1::Foo* bar = new lib2::Bar::•();
    dart.core::bool* equal = foo.{lib1::Foo::==}(bar);
    dart.core::print("foo == bar = ${equal}");
    dart.core::print("Done!");
  }
}
library from "org-dartlang-test:///main.dart" as main {

  import "org-dartlang-test:///lib1.dart";
  import "org-dartlang-test:///lib2.dart";
  import "org-dartlang-test:///lib3.dart";

  static method main() → dynamic {
    lib1::Foo* foo = new lib2::Bar::•();
    lib3::lib3Method(foo);
  }
}
