library;
import self as self;
import "dart:core" as core;

abstract class A<T extends core::Object> extends core::Object {
  synthetic constructor •() → void
    : super core::Object::•()
    ;
}
abstract class B<T extends core::Object> extends core::Object {
  constructor •() → void
    : super core::Object::•()
    ;
}
class C<T extends core::Object> extends core::Object {
  synthetic constructor •() → void
    : super core::Object::•()
    ;
}
static const field dynamic #errors = const <dynamic>["Error: The type variable 'T' can't be used as supertype.", "Error: The type variable 'T' can't be used as supertype.", "Error: The type variable 'T' can't be used as supertype."]/* from null */;
static method main() → dynamic {
  throw new core::AbstractClassInstantiationError::•("A");
  throw new core::AbstractClassInstantiationError::•("B");
  new self::C::•<dynamic>();
}
