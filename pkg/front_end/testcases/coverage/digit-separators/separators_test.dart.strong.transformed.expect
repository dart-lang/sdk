library;
import self as self;
import "dart:core" as core;

static const field core::int minNativeInt = #C1;
static const field core::int maxNativeInt = #C2;
static method asDouble(core::double x) → core::double
  return x;
static method foo() → void {
  self::equals(1000000000, 1000000000);
  self::equals(5558675309, 5558675309);
  self::equals(1000000.{core::int::unary-}(){() → core::int}, 1000000.{core::int::unary-}(){() → core::int});
  self::equals(100, 100);
  self::equals(99.{core::int::unary-}(){() → core::int}, 99.{core::int::unary-}(){() → core::int});
  self::equals(0, 0);
  self::equals(#C2, 9223372036854774784);
  self::equals(#C2, 9223372036854774784);
  core::print(576460752303424512);
  core::print(-2048);
  self::equals(#C1, -9223372036854775808.{core::int::unary-}(){() → core::int});
  self::equals(#C1, -9223372036854775808.{core::int::unary-}(){() → core::int});
  self::equals(#C1, -9223372036854775808);
  self::equals(3.141592653, 3.141592653);
  self::equals(19.739, 19.739);
  self::equals(1.618.{core::double::unary-}(){() → core::double}, 1.618.{core::double::unary-}(){() → core::double});
  self::equals(0.0, self::asDouble(0.0));
  self::equals(0.0.{core::double::unary-}(){() → core::double}, self::asDouble(-0.0));
  self::equals(1e+30, 1e+30);
  self::equals(12000.0, 12000.0);
  self::equals(123.4, 123.4);
  self::equals(0.0, 0.0);
  self::equals(0.0, 0.0);
  self::equals(0.0, 0.0);
  self::equals(1.7976931348623157e+308, self::asDouble(1.7976931348623157e+308));
  self::equals(1.7976931348623157e+308, 1.7976931348623157e+308);
  self::equals(1.7976931348623157e+308, 1.7976931348623157e+308);
  self::equals(1.7976931348623157e+308, 1.7976931348623157e+308);
  self::equals(1.7976931348623157e+308, 1.7976931348623157e+308);
  self::equals(#C3, Infinity);
  self::equals(#C3, Infinity);
  self::equals(#C3, Infinity);
  core::double a = 1000.0;
  self::equals(1000.0, a);
  const core::int b = #C4;
  self::equals(2000, #C4);
  const core::double c = #C5;
  self::equals(3000.3, #C5);
  const core::double d = #C6;
  self::equals(4000, #C6);
}
static method equals(dynamic a, dynamic b) → void {
  if(!(a =={core::Object::==}{(core::Object) → core::bool} b))
    throw "${a} != ${b}";
}

constants  {
  #C1 = -9223372036854775808
  #C2 = 9223372036854774784
  #C3 = Infinity
  #C4 = 2000
  #C5 = 3000.3
  #C6 = 4000.0
}

Extra constant evaluation status:
Evaluated: InstanceInvocation @ org-dartlang-testcase:///separators_test.dart:17:10 -> IntConstant(-1000000)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///separators_test.dart:17:20 -> IntConstant(-1000000)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///separators_test.dart:19:10 -> IntConstant(-99)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///separators_test.dart:19:15 -> IntConstant(-99)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///separators_test.dart:37:7 -> IntConstant(-9223372036854775808)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///separators_test.dart:39:9 -> IntConstant(-9223372036854775808)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///separators_test.dart:47:10 -> DoubleConstant(-1.618)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///separators_test.dart:47:18 -> DoubleConstant(-1.618)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///separators_test.dart:50:10 -> DoubleConstant(-0.0)
Extra constant evaluation: evaluated: 58, effectively constant: 9
