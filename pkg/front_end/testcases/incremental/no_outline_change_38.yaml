# Copyright (c) 2020, the Dart project authors. Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

# Reproduce a crash.

type: newworld
worlds:
  - entry: main.dart
    sources:
      main.dart: |
        import 'lib.dart';
        class X {}
        int? foo(X x) {
          return x is Y ? x.foo : null;
        }
      lib.dart: |
        import 'main.dart';
        class Y implements X {
          int get foo => 42;
        }
    expectedLibraryCount: 2

  - entry: main.dart
    worldType: updated
    expectInitializeFromDill: false
    invalidate:
      - main.dart
    expectedLibraryCount: 2
    advancedInvalidation: bodiesOnly

  - entry: main.dart
    worldType: updated
    expectInitializeFromDill: false
    invalidate:
      - lib.dart
    expectedLibraryCount: 2
    advancedInvalidation: bodiesOnly
