# Copyright (c) 2019, the Dart project authors. Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE.md file.

# Compile an application, change a file, but don't change the outline.
# Create a load library tearoff method.

type: newworld
worlds:
  - entry: main.dart
    experiments: alternative-invalidation-strategy
    sources:
      main.dart: |
        import "lib.dart" deferred as foo;
        main() {
          var f = foo.loadLibrary;
          f();
        }
      lib.dart: |
        foo() {
          print("foo!");
        }
    expectedLibraryCount: 2
  - entry: main.dart
    experiments: alternative-invalidation-strategy
    worldType: updated
    expectInitializeFromDill: false
    invalidate:
      - main.dart
    sources:
      main.dart: |
        import "lib.dart" deferred as foo;
        main() {
          var f = foo.loadLibrary;
          f();
          print("Done");
        }
    expectedLibraryCount: 2
    expectsRebuildBodiesOnly: true
