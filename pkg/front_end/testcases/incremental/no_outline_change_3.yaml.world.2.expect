main = main::main;
library from "org-dartlang-test:///libA.dart" as libA {

  static method whatever() → dynamic async /* emittedValueType= dynamic */ {
    await null /* runtimeCheckType= dart.async::Future<Null> */ ;
    return "hello";
  }
}
library from "org-dartlang-test:///main.dart" as main {

  import "org-dartlang-test:///libA.dart";

  class Foo extends dart.core::Object /*hasConstConstructor*/  {
    const constructor •() → main::Foo
      : super dart.core::Object::•()
      ;
    @#C1
    method toString() → dart.core::String
      return "Foo!";
  }
  static method main() → dynamic async /* emittedValueType= dynamic */ {
    await libA::whatever() /* runtimeCheckType= dart.async::Future<dynamic> */ ;
    dart.core::print(#C2);
    dart.core::print("Done");
  }
}
constants  {
  #C1 = dart.core::_Override {}
  #C2 = main::Foo {}
}


Constructor coverage from constants:
org-dartlang-test:///main.dart:
- Foo. (from org-dartlang-test:///main.dart:4:9)
- Object. (from org-dartlang-sdk:///sdk/lib/core/object.dart)

