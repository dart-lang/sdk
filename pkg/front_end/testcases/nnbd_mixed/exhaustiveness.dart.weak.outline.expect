library;
import self as self;

import "org-dartlang-testcase:///exhaustiveness_lib.dart";

static method main() → dynamic
  ;
static method expect(dynamic expected, dynamic actual) → dynamic
  ;
static method throws(() →* void f) → dynamic
  ;

library /*isNonNullableByDefault*/;
import self as self2;
import "dart:core" as core;

abstract sealed class A extends core::Object {
  synthetic constructor •() → self2::A
    ;
}
class A1 extends self2::A {
  synthetic constructor •() → self2::A1
    ;
}
class A2 extends self2::A {
  synthetic constructor •() → self2::A2
    ;
}
static method boolSwitchStatement(core::bool b) → core::bool
  ;
static method boolSwitchExpression(core::bool b) → core::bool
  ;
static method sealedSwitchStatement(self2::A a) → core::int
  ;
static method sealedSwitchExpression(self2::A a) → core::int
  ;
