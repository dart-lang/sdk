library /*isNonNullableByDefault*/;
import self as self;
import "mixin_from_opt_in_out_in_lib1.dart" as mix;
import "mixin_from_opt_in_out_in_lib2.dart" as mix2;
import "dart:core" as core;

import "org-dartlang-testcase:///mixin_from_opt_in_out_in_lib1.dart";
import "org-dartlang-testcase:///mixin_from_opt_in_out_in_lib2.dart";

class DiB0 extends mix::C0 implements mix2::B {
  synthetic constructor •() → self::DiB0
    : super mix::C0::•()
    ;
  abstract member-signature get a() → core::List<(core::int) → core::int>; -> mix2::B::a
  abstract member-signature set a(core::List<(core::int) → core::int> _) → void; -> mix2::B::a
  abstract member-signature method noSuchMethod(core::Invocation invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature method m((core::int) → core::int x) → (core::int) → core::int; -> mix2::B::m
  abstract member-signature get _identityHashCode() → core::int; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature get hashCode() → core::int; -> core::Object::hashCode
  abstract member-signature method toString() → core::String; -> core::Object::toString
  abstract member-signature get runtimeType() → core::Type; -> core::Object::runtimeType
}
class DiBq0 extends mix::C0 implements mix2::Bq {
  synthetic constructor •() → self::DiBq0
    : super mix::C0::•()
    ;
  abstract member-signature get a() → core::List<(core::int?) → core::int?>; -> mix2::B::a
  abstract member-signature set a(core::List<(core::int?) → core::int?> _) → void; -> mix2::B::a
  abstract member-signature method noSuchMethod(core::Invocation invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature method m((core::int?) → core::int? x) → (core::int?) → core::int?; -> mix2::B::m
  abstract member-signature get _identityHashCode() → core::int; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature get hashCode() → core::int; -> core::Object::hashCode
  abstract member-signature method toString() → core::String; -> core::Object::toString
  abstract member-signature get runtimeType() → core::Type; -> core::Object::runtimeType
}
abstract class _DwB0&C0&B = mix::C0 with mix2::B /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_DwB0&C0&B
    : super mix::C0::•()
    ;
  mixin-super-stub get a() → core::List<(core::int) → core::int>
    return super.{mix2::B::a};
  mixin-super-stub set a(core::List<(core::int) → core::int> _) → void
    return super.{mix2::B::a} = _;
  abstract member-signature method noSuchMethod(core::Invocation invocation) → dynamic; -> core::Object::noSuchMethod
  mixin-super-stub method m((core::int) → core::int x) → (core::int) → core::int
    return super.{mix2::B::m}(x);
  abstract member-signature get _identityHashCode() → core::int; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature get hashCode() → core::int; -> core::Object::hashCode
  abstract member-signature method toString() → core::String; -> core::Object::toString
  abstract member-signature get runtimeType() → core::Type; -> core::Object::runtimeType
}
class DwB0 extends self::_DwB0&C0&B {
  synthetic constructor •() → self::DwB0
    : super self::_DwB0&C0&B::•()
    ;
}
abstract class _DwBq0&C0&Bq = mix::C0 with mix2::Bq /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_DwBq0&C0&Bq
    : super mix::C0::•()
    ;
  mixin-super-stub get a() → core::List<(core::int?) → core::int?>
    return super.{mix2::Bq::a};
  mixin-super-stub set a(core::List<(core::int?) → core::int?> _) → void
    return super.{mix2::Bq::a} = _;
  abstract member-signature method noSuchMethod(core::Invocation invocation) → dynamic; -> core::Object::noSuchMethod
  mixin-super-stub method m((core::int?) → core::int? x) → (core::int?) → core::int?
    return super.{mix2::Bq::m}(x);
  abstract member-signature get _identityHashCode() → core::int; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature get hashCode() → core::int; -> core::Object::hashCode
  abstract member-signature method toString() → core::String; -> core::Object::toString
  abstract member-signature get runtimeType() → core::Type; -> core::Object::runtimeType
}
class DwBq0 extends self::_DwBq0&C0&Bq {
  synthetic constructor •() → self::DwBq0
    : super self::_DwBq0&C0&Bq::•()
    ;
}
class DiB3 extends mix::C3 implements mix2::B {
  synthetic constructor •() → self::DiB3
    : super mix::C3::•()
    ;
  abstract member-signature get a() → core::List<(core::int) → core::int>; -> mix2::Bq::a
  abstract member-signature set a(core::List<(core::int) → core::int> _) → void; -> mix2::Bq::a
  abstract member-signature method noSuchMethod(core::Invocation invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature method m((core::int) → core::int x) → (core::int) → core::int; -> mix2::Bq::m
  abstract member-signature get _identityHashCode() → core::int; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature get hashCode() → core::int; -> core::Object::hashCode
  abstract member-signature method toString() → core::String; -> core::Object::toString
  abstract member-signature get runtimeType() → core::Type; -> core::Object::runtimeType
}
class DiBq3 extends mix::C3 implements mix2::Bq {
  synthetic constructor •() → self::DiBq3
    : super mix::C3::•()
    ;
  abstract member-signature get a() → core::List<(core::int?) → core::int?>; -> mix2::Bq::a
  abstract member-signature set a(core::List<(core::int?) → core::int?> _) → void; -> mix2::Bq::a
  abstract member-signature method noSuchMethod(core::Invocation invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature method m((core::int?) → core::int? x) → (core::int?) → core::int?; -> mix2::Bq::m
  abstract member-signature get _identityHashCode() → core::int; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature get hashCode() → core::int; -> core::Object::hashCode
  abstract member-signature method toString() → core::String; -> core::Object::toString
  abstract member-signature get runtimeType() → core::Type; -> core::Object::runtimeType
}
abstract class _DwB3&C3&B = mix::C3 with mix2::B /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_DwB3&C3&B
    : super mix::C3::•()
    ;
  mixin-super-stub get a() → core::List<(core::int) → core::int>
    return super.{mix2::B::a};
  mixin-super-stub set a(core::List<(core::int) → core::int> _) → void
    return super.{mix2::B::a} = _;
  abstract member-signature method noSuchMethod(core::Invocation invocation) → dynamic; -> core::Object::noSuchMethod
  mixin-super-stub method m((core::int) → core::int x) → (core::int) → core::int
    return super.{mix2::B::m}(x);
  abstract member-signature get _identityHashCode() → core::int; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature get hashCode() → core::int; -> core::Object::hashCode
  abstract member-signature method toString() → core::String; -> core::Object::toString
  abstract member-signature get runtimeType() → core::Type; -> core::Object::runtimeType
}
class DwB3 extends self::_DwB3&C3&B {
  synthetic constructor •() → self::DwB3
    : super self::_DwB3&C3&B::•()
    ;
}
abstract class _DwBq3&C3&Bq = mix::C3 with mix2::Bq /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_DwBq3&C3&Bq
    : super mix::C3::•()
    ;
  mixin-super-stub get a() → core::List<(core::int?) → core::int?>
    return super.{mix2::Bq::a};
  mixin-super-stub set a(core::List<(core::int?) → core::int?> _) → void
    return super.{mix2::Bq::a} = _;
  abstract member-signature method noSuchMethod(core::Invocation invocation) → dynamic; -> core::Object::noSuchMethod
  mixin-super-stub method m((core::int?) → core::int? x) → (core::int?) → core::int?
    return super.{mix2::Bq::m}(x);
  abstract member-signature get _identityHashCode() → core::int; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature get hashCode() → core::int; -> core::Object::hashCode
  abstract member-signature method toString() → core::String; -> core::Object::toString
  abstract member-signature get runtimeType() → core::Type; -> core::Object::runtimeType
}
class DwBq3 extends self::_DwBq3&C3&Bq {
  synthetic constructor •() → self::DwBq3
    : super self::_DwBq3&C3&Bq::•()
    ;
}
static method main() → dynamic {}

library;
import self as mix;
import "mixin_from_opt_in_out_in_lib2.dart" as mix2;
import "dart:core" as core;

import "org-dartlang-testcase:///mixin_from_opt_in_out_in_lib2.dart";

class C0 extends mix2::B {
  synthetic constructor •() → mix::C0*
    : super mix2::B::•()
    ;
  abstract member-signature get a() → core::List<(core::int*) →* core::int*>*; -> mix2::B::a
  abstract member-signature set a(core::List<(core::int*) →* core::int*>* _) → void; -> mix2::B::a
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature method m((core::int*) →* core::int* x) → (core::int*) →* core::int*; -> mix2::B::m
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
class C3 extends mix2::Bq {
  synthetic constructor •() → mix::C3*
    : super mix2::Bq::•()
    ;
  abstract member-signature get a() → core::List<(core::int*) →* core::int*>*; -> mix2::Bq::a
  abstract member-signature set a(core::List<(core::int*) →* core::int*>* _) → void; -> mix2::Bq::a
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature method m((core::int*) →* core::int* x) → (core::int*) →* core::int*; -> mix2::Bq::m
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}

library /*isNonNullableByDefault*/;
import self as mix2;
import "dart:core" as core;

mixin class B extends core::Object {
  synthetic constructor •() → mix2::B
    : super core::Object::•()
    ;
  get a() → core::List<(core::int) → core::int>
    return <(core::int) → core::int>[];
  set a(core::List<(core::int) → core::int> _) → void {}
  method m((core::int) → core::int x) → (core::int) → core::int
    return x;
}
mixin class Bq extends core::Object {
  synthetic constructor •() → mix2::Bq
    : super core::Object::•()
    ;
  get a() → core::List<(core::int?) → core::int?>
    return <(core::int?) → core::int?>[];
  set a(core::List<(core::int?) → core::int?> _) → void {}
  method m((core::int?) → core::int? x) → (core::int?) → core::int?
    return x;
}
