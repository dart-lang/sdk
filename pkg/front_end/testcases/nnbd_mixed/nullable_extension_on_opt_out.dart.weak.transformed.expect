library /*isNonNullableByDefault*/;
import self as self;
import "nullable_extension_on_opt_out_lib.dart" as nul;
import "dart:core" as core;

import "org-dartlang-testcase:///nullable_extension_on_opt_out_lib.dart";

extension _extension#0 on nul::A? {
  get text = self::_extension#0|get#text;
}
static method _extension#0|get#text(final nul::A? #this) → core::String
  return "Lily was here";
static method main() → void {
  nul::A? a = null;
  self::expect("Lily was here", self::_extension#0|get#text(a));
}
static method expect(dynamic expected, dynamic actual) → dynamic {
  if(!expected.{core::Object::==}(actual))
    throw "Expected ${expected}, actual ${actual}";
}

library;
import self as nul;
import "dart:core" as core;

class A extends core::Object {
  field core::String* text = "";
  synthetic constructor •() → nul::A*
    : super core::Object::•()
    ;
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
