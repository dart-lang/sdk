library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:15:32: Error: Required named parameter 'j' must be provided.
//     i = super.nullabilityMethod(null); // ok
//                                ^
//
// pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:19:39: Error: The value 'null' can't be assigned to the parameter type 'int' because 'int' is not nullable.
//     i = super.optionalArgumentsMethod(null); // ok
//                                       ^
//
// pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:21:34: Error: Too many positional arguments: 1 allowed, but 2 found.
// Try removing the extra positional arguments.
//     super.optionalArgumentsMethod(null, null); // error
//                                  ^
//
// pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:29:31: Error: The value 'null' can't be assigned to a variable of type 'int' because 'int' is not nullable.
//     super.nullabilitySetter = null; // ok
//                               ^
//
// pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:40:15: Error: A value of type 'int?' can't be assigned to a variable of type 'int' because 'int?' is nullable and 'int' isn't.
//     i = super.nullabilityMethod(null); // ok
//               ^
//
// pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:44:15: Error: A value of type 'int?' can't be assigned to a variable of type 'int' because 'int?' is nullable and 'int' isn't.
//     i = super.optionalArgumentsMethod(null); // ok
//               ^
//
// pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:46:34: Error: Too many positional arguments: 1 allowed, but 2 found.
// Try removing the extra positional arguments.
//     super.optionalArgumentsMethod(null, null); // error
//                                  ^
//
// pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:50:15: Error: A value of type 'int?' can't be assigned to a variable of type 'int' because 'int?' is nullable and 'int' isn't.
//     i = super.nullabilityGetter; // ok
//               ^
//
// pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:52:25: Error: The value 'null' can't be assigned to a variable of type 'int' because 'int' is not nullable.
//     nullabilitySetter = null; // error
//                         ^
//
// pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:71:34: Error: Too many positional arguments: 1 allowed, but 2 found.
// Try removing the extra positional arguments.
//     super.optionalArgumentsMethod(null, null); // error
//                                  ^
//
// pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:96:34: Error: Too many positional arguments: 1 allowed, but 2 found.
// Try removing the extra positional arguments.
//     super.optionalArgumentsMethod(null, null); // error
//                                  ^
//
// pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:102:25: Error: The value 'null' can't be assigned to a variable of type 'int' because 'int' is not nullable.
//     nullabilitySetter = null; // error
//                         ^
//
import self as self;
import "in_out_in_lib2.dart" as in_;
import "in_out_in_lib1.dart" as in_2;
import "dart:core" as core;

import "org-dartlang-testcase:///in_out_in_lib1.dart";
import "org-dartlang-testcase:///in_out_in_lib2.dart";

class Class extends in_::LegacyClass implements in_2::SuperQ {
  synthetic constructor •() → self::Class
    : super in_::LegacyClass::•()
    ;
  method test() → dynamic {
    core::int i;
    core::int? v1 = this.{self::Class::nullabilityMethod}(null);
    i = let final<BottomType> #t1 = invalid-expression "pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:15:32: Error: Required named parameter 'j' must be provided.
    i = super.nullabilityMethod(null); // ok
                               ^" in super.{in_2::Super::nullabilityMethod}(null);
    i = this.{in_::LegacyClass::optionalArgumentsMethod}(null, null);
    i = super.{in_2::Super::optionalArgumentsMethod}(let final<BottomType> #t2 = invalid-expression "pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:19:39: Error: The value 'null' can't be assigned to the parameter type 'int' because 'int' is not nullable.
    i = super.optionalArgumentsMethod(null); // ok
                                      ^" in null as{TypeError,ForNonNullableByDefault} core::int);
    let final<BottomType> #t3 = invalid-expression "pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:21:34: Error: Too many positional arguments: 1 allowed, but 2 found.
Try removing the extra positional arguments.
    super.optionalArgumentsMethod(null, null); // error
                                 ^" in super.{in_2::Super::optionalArgumentsMethod}(null, null);
    core::int? v2 = this.{self::Class::nullabilityGetter};
    i = super.{in_2::Super::nullabilityGetter};
    this.{self::Class::nullabilitySetter} = null;
    super.{in_2::Super::nullabilitySetter} = let final<BottomType> #t4 = invalid-expression "pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:29:31: Error: The value 'null' can't be assigned to a variable of type 'int' because 'int' is not nullable.
    super.nullabilitySetter = null; // ok
                              ^" in null as{TypeError,ForNonNullableByDefault} core::int;
  }
  abstract member-signature method nullabilityMethod(core::int? i, {core::int? j}) → core::int?; -> in_2::Super::nullabilityMethod
  abstract member-signature get nullabilityGetter() → core::int?; -> in_2::Super::nullabilityGetter
  abstract member-signature get _identityHashCode() → core::int; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature get hashCode() → core::int; -> core::Object::hashCode
  abstract member-signature method toString() → core::String; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type; -> core::Object::runtimeType
  abstract member-signature set nullabilitySetter(core::int? value) → void; -> in_2::Super::nullabilitySetter
}
class ClassQ extends in_::LegacyClassQ implements in_2::Super {
  synthetic constructor •() → self::ClassQ
    : super in_::LegacyClassQ::•()
    ;
  method test() → dynamic {
    core::int i;
    this.{in_::LegacyClassQ::nullabilityMethod}(null);
    i = let final<BottomType> #t5 = invalid-expression "pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:40:15: Error: A value of type 'int?' can't be assigned to a variable of type 'int' because 'int?' is nullable and 'int' isn't.
    i = super.nullabilityMethod(null); // ok
              ^" in super.{in_2::SuperQ::nullabilityMethod}(null) as{TypeError,ForNonNullableByDefault} core::int;
    i = this.{in_::LegacyClassQ::optionalArgumentsMethod}(null, null);
    i = let final<BottomType> #t6 = invalid-expression "pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:44:15: Error: A value of type 'int?' can't be assigned to a variable of type 'int' because 'int?' is nullable and 'int' isn't.
    i = super.optionalArgumentsMethod(null); // ok
              ^" in super.{in_2::SuperQ::optionalArgumentsMethod}(null) as{TypeError,ForNonNullableByDefault} core::int;
    let final<BottomType> #t7 = invalid-expression "pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:46:34: Error: Too many positional arguments: 1 allowed, but 2 found.
Try removing the extra positional arguments.
    super.optionalArgumentsMethod(null, null); // error
                                 ^" in super.{in_2::SuperQ::optionalArgumentsMethod}(null, null);
    i = this.{self::ClassQ::nullabilityGetter};
    i = let final<BottomType> #t8 = invalid-expression "pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:50:15: Error: A value of type 'int?' can't be assigned to a variable of type 'int' because 'int?' is nullable and 'int' isn't.
    i = super.nullabilityGetter; // ok
              ^" in super.{in_2::SuperQ::nullabilityGetter} as{TypeError,ForNonNullableByDefault} core::int;
    this.{self::ClassQ::nullabilitySetter} = let final<BottomType> #t9 = invalid-expression "pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:52:25: Error: The value 'null' can't be assigned to a variable of type 'int' because 'int' is not nullable.
    nullabilitySetter = null; // error
                        ^" in null as{TypeError,ForNonNullableByDefault} core::int;
    super.{in_2::SuperQ::nullabilitySetter} = null;
  }
  abstract member-signature get nullabilityGetter() → core::int; -> in_2::SuperQ::nullabilityGetter
  abstract member-signature get _identityHashCode() → core::int; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature get hashCode() → core::int; -> core::Object::hashCode
  abstract member-signature method toString() → core::String; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type; -> core::Object::runtimeType
  abstract member-signature set nullabilitySetter(core::int value) → void; -> in_2::SuperQ::nullabilitySetter
}
class ClassMixedIn extends in_::LegacyMixedIn implements in_2::SuperQ {
  synthetic constructor •() → self::ClassMixedIn
    : super in_::LegacyMixedIn::•()
    ;
  method test() → dynamic {
    core::int i;
    core::int? v1 = this.{self::ClassMixedIn::nullabilityMethod}(null);
    i = super.{in_::_LegacyMixedIn&Object&Super::nullabilityMethod}(null);
    i = this.{in_::LegacyMixedIn::optionalArgumentsMethod}(null, null);
    i = super.{in_::_LegacyMixedIn&Object&Super::optionalArgumentsMethod}(null);
    let final<BottomType> #t10 = invalid-expression "pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:71:34: Error: Too many positional arguments: 1 allowed, but 2 found.
Try removing the extra positional arguments.
    super.optionalArgumentsMethod(null, null); // error
                                 ^" in super.{in_::_LegacyMixedIn&Object&Super::optionalArgumentsMethod}(null, null);
    core::int? v2 = this.{self::ClassMixedIn::nullabilityGetter};
    i = super.{in_::_LegacyMixedIn&Object&Super::nullabilityGetter};
    this.{self::ClassMixedIn::nullabilitySetter} = null;
    super.{in_::_LegacyMixedIn&Object&Super::nullabilitySetter} = null;
  }
  abstract member-signature method nullabilityMethod(core::int? i, {core::int? j}) → core::int?; -> in_::_LegacyMixedIn&Object&Super::nullabilityMethod
  abstract member-signature get nullabilityGetter() → core::int?; -> in_::_LegacyMixedIn&Object&Super::nullabilityGetter
  abstract member-signature get _identityHashCode() → core::int; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature get hashCode() → core::int; -> core::Object::hashCode
  abstract member-signature method toString() → core::String; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type; -> core::Object::runtimeType
  abstract member-signature set nullabilitySetter(core::int? value) → void; -> in_::_LegacyMixedIn&Object&Super::nullabilitySetter
}
class ClassMixedInQ extends in_::LegacyMixedInQ implements in_2::Super {
  synthetic constructor •() → self::ClassMixedInQ
    : super in_::LegacyMixedInQ::•()
    ;
  method test() → dynamic {
    core::int i;
    this.{in_::_LegacyMixedInQ&Object&SuperQ::nullabilityMethod}(null);
    i = super.{in_::_LegacyMixedInQ&Object&SuperQ::nullabilityMethod}(null);
    i = this.{in_::LegacyMixedInQ::optionalArgumentsMethod}(null, null);
    i = super.{in_::_LegacyMixedInQ&Object&SuperQ::optionalArgumentsMethod}(null);
    let final<BottomType> #t11 = invalid-expression "pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:96:34: Error: Too many positional arguments: 1 allowed, but 2 found.
Try removing the extra positional arguments.
    super.optionalArgumentsMethod(null, null); // error
                                 ^" in super.{in_::_LegacyMixedInQ&Object&SuperQ::optionalArgumentsMethod}(null, null);
    i = this.{self::ClassMixedInQ::nullabilityGetter};
    i = super.{in_::_LegacyMixedInQ&Object&SuperQ::nullabilityGetter};
    this.{self::ClassMixedInQ::nullabilitySetter} = let final<BottomType> #t12 = invalid-expression "pkg/front_end/testcases/nnbd_mixed/hierarchy/in_out_dill_in/in_out_in.dart:102:25: Error: The value 'null' can't be assigned to a variable of type 'int' because 'int' is not nullable.
    nullabilitySetter = null; // error
                        ^" in null as{TypeError,ForNonNullableByDefault} core::int;
    super.{in_::_LegacyMixedInQ&Object&SuperQ::nullabilitySetter} = null;
  }
  abstract member-signature get nullabilityGetter() → core::int; -> in_::_LegacyMixedInQ&Object&SuperQ::nullabilityGetter
  abstract member-signature get _identityHashCode() → core::int; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature get hashCode() → core::int; -> core::Object::hashCode
  abstract member-signature method toString() → core::String; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type; -> core::Object::runtimeType
  abstract member-signature set nullabilitySetter(core::int value) → void; -> in_::_LegacyMixedInQ&Object&SuperQ::nullabilitySetter
}
static method main() → dynamic {}

library;
import self as in_;
import "in_out_in_lib1.dart" as in_2;
import "dart:core" as core;

import "org-dartlang-testcase:///in_out_in_lib1.dart";

abstract class LegacyClass extends in_2::Super implements in_2::SuperExtra {
  synthetic constructor •() → in_::LegacyClass*
    : super in_2::Super::•()
    ;
  abstract member-signature method nullabilityMethod(core::int* i, {core::int* j = #C1}) → core::int*; -> in_2::Super::nullabilityMethod
  abstract member-signature get nullabilityGetter() → core::int*; -> in_2::Super::nullabilityGetter
  abstract member-signature method optionalArgumentsMethod(core::int* i, [core::int* j = #C1]) → core::int*; -> in_2::SuperExtra::optionalArgumentsMethod
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
  abstract member-signature set nullabilitySetter(core::int* value) → void; -> in_2::Super::nullabilitySetter
}
abstract class LegacyClassQ extends in_2::SuperQ implements in_2::SuperExtra {
  synthetic constructor •() → in_::LegacyClassQ*
    : super in_2::SuperQ::•()
    ;
  abstract member-signature method nullabilityMethod(core::int* i, {core::int* j = #C1}) → core::int*; -> in_2::SuperQ::nullabilityMethod
  abstract member-signature get nullabilityGetter() → core::int*; -> in_2::SuperQ::nullabilityGetter
  abstract member-signature method optionalArgumentsMethod(core::int* i, [core::int* j = #C1]) → core::int*; -> in_2::SuperExtra::optionalArgumentsMethod
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
  abstract member-signature set nullabilitySetter(core::int* value) → void; -> in_2::SuperQ::nullabilitySetter
}
abstract class _LegacyMixedIn&Object&Super = core::Object with in_2::Super /*isAnonymousMixin,hasConstConstructor*/  {
  const synthetic constructor •() → in_::_LegacyMixedIn&Object&Super*
    : super core::Object::•()
    ;
  mixin-super-stub method nullabilityMethod(core::int* i, {core::int* j = #C1}) → core::int*
    return super.{in_2::Super::nullabilityMethod}(i, j: j);
  mixin-super-stub get nullabilityGetter() → core::int*
    return super.{in_2::Super::nullabilityGetter};
  mixin-super-stub method optionalArgumentsMethod(core::int* i) → core::int*
    return super.{in_2::Super::optionalArgumentsMethod}(i);
  mixin-super-stub set nullabilitySetter(core::int* value) → void
    return super.{in_2::Super::nullabilitySetter} = value;
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
abstract class LegacyMixedIn extends in_::_LegacyMixedIn&Object&Super implements in_2::SuperExtra {
  synthetic constructor •() → in_::LegacyMixedIn*
    : super in_::_LegacyMixedIn&Object&Super::•()
    ;
  abstract member-signature method optionalArgumentsMethod(core::int* i, [core::int* j = #C1]) → core::int*; -> in_2::SuperExtra::optionalArgumentsMethod
}
abstract class _LegacyMixedInQ&Object&SuperQ = core::Object with in_2::SuperQ /*isAnonymousMixin,hasConstConstructor*/  {
  const synthetic constructor •() → in_::_LegacyMixedInQ&Object&SuperQ*
    : super core::Object::•()
    ;
  mixin-super-stub method nullabilityMethod(core::int* i, {core::int* j = #C1}) → core::int*
    return super.{in_2::SuperQ::nullabilityMethod}(i, j: j);
  mixin-super-stub get nullabilityGetter() → core::int*
    return super.{in_2::SuperQ::nullabilityGetter};
  mixin-super-stub method optionalArgumentsMethod(core::int* i) → core::int*
    return super.{in_2::SuperQ::optionalArgumentsMethod}(i);
  mixin-super-stub set nullabilitySetter(core::int* value) → void
    return super.{in_2::SuperQ::nullabilitySetter} = value;
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
abstract class LegacyMixedInQ extends in_::_LegacyMixedInQ&Object&SuperQ implements in_2::SuperExtra {
  synthetic constructor •() → in_::LegacyMixedInQ*
    : super in_::_LegacyMixedInQ&Object&SuperQ::•()
    ;
  abstract member-signature method optionalArgumentsMethod(core::int* i, [core::int* j = #C1]) → core::int*; -> in_2::SuperExtra::optionalArgumentsMethod
}

library /*isNonNullableByDefault*/;
import self as in_2;
import "dart:core" as core;

class Super extends core::Object {
  synthetic constructor •() → in_2::Super
    : super core::Object::•()
    ;
  method nullabilityMethod(core::int i, {required core::int j = #C1}) → core::int
    return i;
  get nullabilityGetter() → core::int
    return 0;
  set nullabilitySetter(core::int value) → void {}
  method optionalArgumentsMethod(core::int i) → core::int
    return i;
}
abstract class SuperExtra extends core::Object {
  synthetic constructor •() → in_2::SuperExtra
    : super core::Object::•()
    ;
  method optionalArgumentsMethod(core::int i, [core::int? j = #C1]) → core::int
    return i;
}
abstract class SuperQ extends core::Object {
  synthetic constructor •() → in_2::SuperQ
    : super core::Object::•()
    ;
  method nullabilityMethod(core::int? i, {core::int? j = #C1}) → core::int?
    return i;
  get nullabilityGetter() → core::int?
    return null;
  set nullabilitySetter(core::int? value) → void {}
  method optionalArgumentsMethod(core::int? i) → core::int?
    return i;
}

constants  {
  #C1 = null
}
