library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

abstract class Interface extends core::Object {
  synthetic constructor •() → self::Interface
    : super core::Object::•()
    ;
  get implementedConcreteGetter() → core::int
    return 0;
  abstract get implementedAbstractGetter() → core::int;
  get declaredConcreteImplementsConcreteGetter() → core::int
    return 0;
  get declaredAbstractImplementsConcreteGetter() → core::int
    return 0;
  abstract get declaredConcreteImplementsAbstractGetter() → core::int;
  abstract get declaredAbstractImplementsAbstractGetter() → core::int;
}
abstract class AbstractClass extends core::Object implements self::Interface {
  synthetic constructor •() → self::AbstractClass
    : super core::Object::•()
    ;
  get declaredConcreteGetter() → core::int
    return 0;
  abstract get declaredAbstractGetter() → core::int;
  get declaredConcreteImplementsConcreteGetter() → core::int
    return 0;
  abstract get declaredAbstractImplementsConcreteGetter() → core::int;
  get declaredConcreteImplementsAbstractGetter() → core::int
    return 0;
  abstract get declaredAbstractImplementsAbstractGetter() → core::int;
}
static method main() → dynamic {}
