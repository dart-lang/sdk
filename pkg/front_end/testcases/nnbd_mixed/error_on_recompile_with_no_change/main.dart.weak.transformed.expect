library;
import self as self;
import "object_lib.dart" as obj;
import "main_lib1.dart" as mai;
import "dart:core" as core;

import "org-dartlang-testcase:///object_lib.dart";
import "org-dartlang-testcase:///main_lib1.dart";

class AdaptorElement extends obj::RenderObject {
  synthetic constructor •() → self::AdaptorElement*
    : super obj::RenderObject::•()
    ;
  get renderObject() → mai::Adaptor*
    return super.{obj::RenderObject::renderObject} as{TypeError} mai::Adaptor*;
  method foo() → void {
    core::print(this.{self::AdaptorElement::renderObject}{mai::Adaptor*}.{mai::_Adaptor&RenderFoo&LibMixin::constraints}{obj::FooConstraints*}.{obj::FooConstraints::axis}{core::String*});
  }
  abstract member-signature get constraints() → obj::Constraints*; -> obj::RenderObject::constraints
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
static method main() → dynamic {}

library /*isNonNullableByDefault*/;
import self as obj;
import "dart:core" as core;

class RenderFoo extends obj::RenderObject {
  synthetic constructor •() → obj::RenderFoo
    : super obj::RenderObject::•()
    ;
  get constraints() → obj::FooConstraints
    return super.{obj::RenderObject::constraints} as{ForNonNullableByDefault} obj::FooConstraints;
}
class FooConstraints extends obj::Constraints {
  synthetic constructor •() → obj::FooConstraints
    : super obj::Constraints::•()
    ;
  get axis() → core::String
    return "hello";
}
class Constraints extends core::Object {
  synthetic constructor •() → obj::Constraints
    : super core::Object::•()
    ;
}
class RenderObject extends core::Object {
  synthetic constructor •() → obj::RenderObject
    : super core::Object::•()
    ;
  get constraints() → obj::Constraints
    return new obj::Constraints::•();
  get renderObject() → obj::RenderObject
    return this;
}

library;
import self as mai;
import "object_lib.dart" as obj;
import "main_lib2.dart" as mai2;
import "dart:core" as core;

import "org-dartlang-testcase:///object_lib.dart";
import "org-dartlang-testcase:///main_lib2.dart";

abstract class _Adaptor&RenderFoo&LibMixin extends obj::RenderFoo implements mai2::LibMixin /*isAnonymousMixin,isEliminatedMixin*/  {
  synthetic constructor •() → mai::_Adaptor&RenderFoo&LibMixin*
    : super obj::RenderFoo::•()
    ;
  abstract member-signature get constraints() → obj::FooConstraints*; -> obj::RenderFoo::constraints
  abstract member-signature get renderObject() → obj::RenderObject*; -> obj::RenderObject::renderObject
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
abstract class Adaptor extends mai::_Adaptor&RenderFoo&LibMixin {
  synthetic constructor •() → mai::Adaptor*
    : super mai::_Adaptor&RenderFoo&LibMixin::•()
    ;
}

library;
import self as mai2;
import "object_lib.dart" as obj;
import "dart:core" as core;

import "org-dartlang-testcase:///object_lib.dart";

abstract class LibMixin extends obj::RenderObject /*isMixinDeclaration*/  {
  abstract member-signature get constraints() → obj::Constraints*; -> obj::RenderObject::constraints
  abstract member-signature get renderObject() → obj::RenderObject*; -> obj::RenderObject::renderObject
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
