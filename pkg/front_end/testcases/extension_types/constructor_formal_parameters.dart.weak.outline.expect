library;
import self as self;
import "dart:core" as core;

extension type I(core::int it) {
  abstract extension-type-member representation-field get it() → core::int;
  method m = self::I|m;
  method tearoff m = self::I|get#m;
  constructor _ = self::I|constructor#_;
  constructor tearoff _ = self::I|constructor#_#_#tearOff;
  constructor • = self::I|constructor#;
  constructor tearoff • = self::I|constructor#_#new#tearOff;
}
extension type I2(core::int it) {
  abstract extension-type-member representation-field get it() → core::int;
  method m = self::I2|m;
  method tearoff m = self::I2|get#m;
  constructor _ = self::I2|constructor#_;
  constructor tearoff _ = self::I2|constructor#_#_#tearOff;
  constructor • = self::I2|constructor#;
  constructor tearoff • = self::I2|constructor#_#new#tearOff;
}
static extension-type-member method I|constructor#_(core::int it) → self::I /* = core::int */
  ;
static extension-type-member method I|constructor#_#_#tearOff(core::int it) → self::I /* = core::int */
  return self::I|constructor#_(it);
static extension-type-member method I|constructor#(core::int x, [core::int? y = null]) → self::I /* = core::int */
  ;
static extension-type-member method I|constructor#_#new#tearOff(core::int x, [core::int? y]) → self::I /* = core::int */
  return self::I|constructor#(x, y);
static extension-type-member method I|m(lowered final self::I /* = core::int */ #this, core::String s, [has-declared-initializer core::int i]) → void
  ;
static extension-type-member method I|get#m(lowered final self::I /* = core::int */ #this) → (core::String, [core::int]) → void
  return (core::String s, [core::int i]) → void => self::I|m(#this, s, i);
static extension-type-member method I2|constructor#_(core::int it) → self::I2 /* = core::int */
  ;
static extension-type-member method I2|constructor#_#_#tearOff(core::int it) → self::I2 /* = core::int */
  return self::I2|constructor#_(it);
static extension-type-member method I2|constructor#(core::int x, {core::int? y = null}) → self::I2 /* = core::int */
  ;
static extension-type-member method I2|constructor#_#new#tearOff(core::int x, {core::int? y}) → self::I2 /* = core::int */
  return self::I2|constructor#(x, y: y);
static extension-type-member method I2|m(lowered final self::I2 /* = core::int */ #this, core::String s, {has-declared-initializer core::int i}) → void
  ;
static extension-type-member method I2|get#m(lowered final self::I2 /* = core::int */ #this) → (core::String, {i: core::int}) → void
  return (core::String s, {core::int i}) → void => self::I2|m(#this, s, i: i);
static method main() → dynamic
  ;
static method expect(dynamic expected, dynamic actual) → dynamic
  ;
