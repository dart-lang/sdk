library;
import self as self;
import "dart:core" as core;

extension type Id(core::int id) {
  abstract extension-type-member representation-field get id() → core::int;
  constructor • = self::Id|constructor#;
  constructor tearoff • = self::Id|constructor#_#new#tearOff;
}
static extension-type-member method Id|constructor#(core::int id) → self::Id /* = core::int */
  ;
static extension-type-member method Id|constructor#_#new#tearOff(core::int id) → self::Id /* = core::int */
  return self::Id|constructor#(id);
static method test() → dynamic
  ;
static method main() → dynamic
  ;
static method expect(dynamic expected, dynamic actual) → dynamic
  ;
