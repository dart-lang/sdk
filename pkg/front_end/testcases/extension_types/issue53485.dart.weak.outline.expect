library;
import self as self;
import "dart:core" as core;

extension type I(core::int id) {
  abstract extension-type-member representation-field get id() → core::int;
  set id = self::I|set#id;
  constructor • = self::I|constructor#;
  constructor tearoff • = self::I|constructor#_#new#tearOff;
}
extension type ET1(core::int id) {
  abstract extension-type-member representation-field get id() → core::int;
  set id = self::ET1|set#id;
  constructor • = self::ET1|constructor#;
  constructor tearoff • = self::ET1|constructor#_#new#tearOff;
}
extension type ET2(core::int id) implements self::I /* = core::int */ {
  abstract extension-type-member representation-field get id() → core::int;
  constructor • = self::ET2|constructor#;
  constructor tearoff • = self::ET2|constructor#_#new#tearOff;
}
static extension-type-member method I|constructor#(core::int id) → self::I /* = core::int */
  ;
static extension-type-member method I|constructor#_#new#tearOff(core::int id) → self::I /* = core::int */
  return self::I|constructor#(id);
static extension-type-member method I|set#id(lowered final self::I /* = core::int */ #this, core::int i) → void
  ;
static extension-type-member method ET1|constructor#(core::int id) → self::ET1 /* = core::int */
  ;
static extension-type-member method ET1|constructor#_#new#tearOff(core::int id) → self::ET1 /* = core::int */
  return self::ET1|constructor#(id);
static extension-type-member method ET1|set#id(lowered final self::ET1 /* = core::int */ #this, core::int i) → void
  ;
static extension-type-member method ET2|constructor#(core::int id) → self::ET2 /* = core::int */
  ;
static extension-type-member method ET2|constructor#_#new#tearOff(core::int id) → self::ET2 /* = core::int */
  return self::ET2|constructor#(id);
static method main() → dynamic
  ;
