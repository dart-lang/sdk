library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:5:17: Error: A extension declaration must have a body, even if it is empty.
// Try adding an empty body.
// extension E1 on int show num {
//                 ^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:5:26: Error: A function declaration needs an explicit list of parameters.
// Try adding a parameter list to the function declaration.
// extension E1 on int show num {
//                          ^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:9:17: Error: A extension declaration must have a body, even if it is empty.
// Try adding an empty body.
// extension E2 on int show num hide ceil {
//                 ^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:9:26: Error: Expected ';' after this.
// extension E2 on int show num hide ceil {
//                          ^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:9:26: Error: 'num' is already declared in this scope.
// extension E2 on int show num hide ceil {
//                          ^^^
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:5:26: Context: Previous declaration of 'num'.
// extension E1 on int show num {
//                          ^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:9:35: Error: A function declaration needs an explicit list of parameters.
// Try adding a parameter list to the function declaration.
// extension E2 on int show num hide ceil {
//                                   ^^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:14:17: Error: A extension declaration must have a body, even if it is empty.
// Try adding an empty body.
// extension E3 on int hide isEven {
//                 ^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:14:26: Error: A function declaration needs an explicit list of parameters.
// Try adding a parameter list to the function declaration.
// extension E3 on int hide isEven {
//                          ^^^^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:5:21: Error: Type 'show' not found.
// extension E1 on int show num {
//                     ^^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:9:21: Error: Type 'show' not found.
// extension E2 on int show num hide ceil {
//                     ^^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:9:30: Error: Type 'hide' not found.
// extension E2 on int show num hide ceil {
//                              ^^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:14:21: Error: Type 'hide' not found.
// extension E3 on int hide isEven {
//                     ^^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:6:3: Error: A non-null value must be returned since the return type 'int' doesn't allow null.
//   int ceil() {} // Error.
//   ^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:9:21: Error: 'show' isn't a type.
// extension E2 on int show num hide ceil {
//                     ^^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:10:3: Error: A non-null value must be returned since the return type 'int' doesn't allow null.
//   int ceil() {} // Ok.
//   ^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:11:3: Error: A non-null value must be returned since the return type 'int' doesn't allow null.
//   int floor() {} // Error.
//   ^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:16:8: Error: Expected ';' after this.
//   bool get isOdd => throw 42; // Error.
//        ^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:16:18: Error: A function declaration needs an explicit list of parameters.
// Try adding a parameter list to the function declaration.
//   bool get isOdd => throw 42; // Error.
//                  ^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:17:8: Error: 'get' is already declared in this scope.
//   bool get isEven => throw 42; // Ok.
//        ^^^
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:16:8: Context: Previous declaration of 'get'.
//   bool get isOdd => throw 42; // Error.
//        ^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:17:8: Error: Expected ';' after this.
//   bool get isEven => throw 42; // Ok.
//        ^^^
//
// pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:17:19: Error: A function declaration needs an explicit list of parameters.
// Try adding a parameter list to the function declaration.
//   bool get isEven => throw 42; // Ok.
//                   ^^
//
import self as self;
import "dart:core" as core;

extension E1 on core::int {
}
extension E2 on core::int {
}
extension E3 on core::int {
}
static method num() → invalid-type {
  function ceil() → core::int {
    return invalid-expression "pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:6:3: Error: A non-null value must be returned since the return type 'int' doesn't allow null.
  int ceil() {} // Error.
  ^" in null;
  }
}
static method ceil() → invalid-type {
  function ceil() → core::int {
    return invalid-expression "pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:10:3: Error: A non-null value must be returned since the return type 'int' doesn't allow null.
  int ceil() {} // Ok.
  ^" in null;
  }
  function floor() → core::int {
    return invalid-expression "pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:11:3: Error: A non-null value must be returned since the return type 'int' doesn't allow null.
  int floor() {} // Error.
  ^" in null;
  }
}
static method isEven() → invalid-type {
  core::bool get;
  function isOdd() → Never
    return throw 42;
  core::bool get = invalid-expression "pkg/front_end/testcases/extension_types/simple_show_hide_conflicts.dart:17:8: Error: 'get' is already declared in this scope.
  bool get isEven => throw 42; // Ok.
       ^^^";
  function isEven() → Never
    return throw 42;
}
static method main() → dynamic {}
