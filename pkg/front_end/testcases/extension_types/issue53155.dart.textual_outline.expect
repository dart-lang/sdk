extension type V<X1 extends num, X2 extends Object>(X1 id) {}

typedef V<int, int> Foo<T extends V<num, Object>>(V<int, int> v);

typedef IntNumV = V<int, num>;

V<int, int> foo<T extends V<num, Object>>(T t) => t as V<int, int>;

class C<T extends V<num, Object>> {
  Foo<T> f = foo<V<int, int>>;
}

main() {}

expect(expected, actual) {}
