const ex3 = ExInt(3);

const ex4 = ExInt(4);

const l3 = [ex3];

const l34i = [ex3 as int, ...l4 as List<int>];

const l3s4 = [ex3, ...l4];

const l4 = [ex4];

const l43 = [ex4, ex3];

const ls3s4 = [...l3, ...l4];

const ls43 = [...l4, ex3];

const m3 = {ex3: ex3};

const m34i = {ex3 as int: ex3 as int, ...m4 as Map<int, int>};

const m3s4 = {ex3: ex3, ...m4};

const m4 = {ex4: ex4};

const m43 = {ex4: ex4, ex3: ex3};

const ms3s4 = {...m3, ...m4};

const ms43 = {...m4, ex3: ex3};

const s3 = {ex3};

const s34i = {ex3 as int, ...s4 as Set<int>};

const s3s4 = {ex3, ...s4};

const s4 = {ex4};

const s43 = {ex4, ex3};

const ss3s4 = {...s3, ...s4};

const ss43 = {...s4, ex3};

extension type const ExInt(int _) implements int {}
