import 'dart:async';

class A {}

mixin M on A {}

enum En { element; }

extension type E1(num it) implements Object {}

extension type E2(E1 it) implements Object {}

extension type E3(String? it) implements Object {}

extension type E4(E3 it) implements Object {}

extension type E5(Null it) implements void {}

extension type E6(Null it) implements dynamic {}

extension type E7(Null it) implements double? {}

extension type E8(bool it) implements FutureOr<bool> {}

extension type E9<X>(X it) implements FutureOr<X> {}

extension type E10(void Function(int) it) implements Function {}

extension type E11(String Function() it) implements String Function() {}

extension type E12((int, Object?) it) implements Record {}

extension type E13((Null, num) it) implements (Null, num) {}

extension type E14(Null it) implements Null {}

extension type E15<X>(X it) implements Never {}

extension type E16(Null it) implements Never {}

extension type E17(A a) implements A {}

extension type E18(M m) implements M {}

extension type E19(En en) implements En {}
