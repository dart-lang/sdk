library;
import self as self;
import "dart:core" as core;

extension type ExtensionType(core::int it) {
  abstract extension-type-member representation-field get it() → core::int;
  method constructorAndMethod = self::ExtensionType|constructorAndMethod;
  method tearoff constructorAndMethod = self::ExtensionType|get#constructorAndMethod;
  method factoryAndMethod = self::ExtensionType|factoryAndMethod;
  method tearoff factoryAndMethod = self::ExtensionType|get#factoryAndMethod;
  method redirectingFactoryAndMethod = self::ExtensionType|redirectingFactoryAndMethod;
  method tearoff redirectingFactoryAndMethod = self::ExtensionType|get#redirectingFactoryAndMethod;
  get constructorAndGetter = self::ExtensionType|get#constructorAndGetter;
  get factoryAndGetter = self::ExtensionType|get#factoryAndGetter;
  get redirectingFactoryAndGetter = self::ExtensionType|get#redirectingFactoryAndGetter;
  set constructorAndSetter = self::ExtensionType|set#constructorAndSetter;
  set factoryAndSetter = self::ExtensionType|set#factoryAndSetter;
  set redirectingFactoryAndSetter = self::ExtensionType|set#redirectingFactoryAndSetter;
  constructor • = self::ExtensionType|constructor#;
  constructor tearoff • = self::ExtensionType|constructor#_#new#tearOff;
  constructor constructorAndMethod = self::ExtensionType|constructor#constructorAndMethod;
  constructor tearoff constructorAndMethod = self::ExtensionType|constructor#_#constructorAndMethod#tearOff;
  static factory factoryAndMethod = self::ExtensionType|constructor#factoryAndMethod;
  static factory tearoff factoryAndMethod = self::ExtensionType|constructor#_#factoryAndMethod#tearOff;
  static redirecting-factory redirectingFactoryAndMethod = self::ExtensionType|constructor#redirectingFactoryAndMethod;
  static redirecting-factory tearoff redirectingFactoryAndMethod = self::ExtensionType|constructor#_#redirectingFactoryAndMethod#tearOff;
  constructor constructorAndGetter = self::ExtensionType|constructor#constructorAndGetter;
  constructor tearoff constructorAndGetter = self::ExtensionType|constructor#_#constructorAndGetter#tearOff;
  static factory factoryAndGetter = self::ExtensionType|constructor#factoryAndGetter;
  static factory tearoff factoryAndGetter = self::ExtensionType|constructor#_#factoryAndGetter#tearOff;
  static redirecting-factory redirectingFactoryAndGetter = self::ExtensionType|constructor#redirectingFactoryAndGetter;
  static redirecting-factory tearoff redirectingFactoryAndGetter = self::ExtensionType|constructor#_#redirectingFactoryAndGetter#tearOff;
  constructor constructorAndSetter = self::ExtensionType|constructor#constructorAndSetter;
  constructor tearoff constructorAndSetter = self::ExtensionType|constructor#_#constructorAndSetter#tearOff;
  static factory factoryAndSetter = self::ExtensionType|constructor#factoryAndSetter;
  static factory tearoff factoryAndSetter = self::ExtensionType|constructor#_#factoryAndSetter#tearOff;
  static redirecting-factory redirectingFactoryAndSetter = self::ExtensionType|constructor#redirectingFactoryAndSetter;
  static redirecting-factory tearoff redirectingFactoryAndSetter = self::ExtensionType|constructor#_#redirectingFactoryAndSetter#tearOff;
}
static extension-type-member method ExtensionType|constructor#(core::int it) → self::ExtensionType /* = core::int */
  ;
static extension-type-member method ExtensionType|constructor#_#new#tearOff(core::int it) → self::ExtensionType /* = core::int */
  return self::ExtensionType|constructor#(it);
static extension-type-member method ExtensionType|constructor#constructorAndMethod() → self::ExtensionType /* = core::int */
  ;
static extension-type-member method ExtensionType|constructor#_#constructorAndMethod#tearOff() → self::ExtensionType /* = core::int */
  return self::ExtensionType|constructor#constructorAndMethod();
static extension-type-member method ExtensionType|constructorAndMethod(lowered final self::ExtensionType /* = core::int */ #this) → void
  ;
static extension-type-member method ExtensionType|get#constructorAndMethod(lowered final self::ExtensionType /* = core::int */ #this) → () → void
  return () → void => self::ExtensionType|constructorAndMethod(#this);
static extension-type-member method ExtensionType|constructor#factoryAndMethod() → self::ExtensionType /* = core::int */
  ;
static extension-type-member method ExtensionType|constructor#_#factoryAndMethod#tearOff() → self::ExtensionType /* = core::int */
  return self::ExtensionType|constructor#factoryAndMethod();
static extension-type-member method ExtensionType|factoryAndMethod(lowered final self::ExtensionType /* = core::int */ #this) → void
  ;
static extension-type-member method ExtensionType|get#factoryAndMethod(lowered final self::ExtensionType /* = core::int */ #this) → () → void
  return () → void => self::ExtensionType|factoryAndMethod(#this);
static extension-type-member method ExtensionType|constructor#redirectingFactoryAndMethod() → self::ExtensionType /* = core::int */ /* redirection-target: self::ExtensionType|constructor#constructorAndMethod */
  return self::ExtensionType|constructor#constructorAndMethod();
static extension-type-member method ExtensionType|constructor#_#redirectingFactoryAndMethod#tearOff() → self::ExtensionType /* = core::int */
  return self::ExtensionType|constructor#constructorAndMethod();
static extension-type-member method ExtensionType|redirectingFactoryAndMethod(lowered final self::ExtensionType /* = core::int */ #this) → void
  ;
static extension-type-member method ExtensionType|get#redirectingFactoryAndMethod(lowered final self::ExtensionType /* = core::int */ #this) → () → void
  return () → void => self::ExtensionType|redirectingFactoryAndMethod(#this);
static extension-type-member method ExtensionType|constructor#constructorAndGetter() → self::ExtensionType /* = core::int */
  ;
static extension-type-member method ExtensionType|constructor#_#constructorAndGetter#tearOff() → self::ExtensionType /* = core::int */
  return self::ExtensionType|constructor#constructorAndGetter();
static extension-type-member method ExtensionType|get#constructorAndGetter(lowered final self::ExtensionType /* = core::int */ #this) → dynamic
  ;
static extension-type-member method ExtensionType|constructor#factoryAndGetter() → self::ExtensionType /* = core::int */
  ;
static extension-type-member method ExtensionType|constructor#_#factoryAndGetter#tearOff() → self::ExtensionType /* = core::int */
  return self::ExtensionType|constructor#factoryAndGetter();
static extension-type-member method ExtensionType|get#factoryAndGetter(lowered final self::ExtensionType /* = core::int */ #this) → dynamic
  ;
static extension-type-member method ExtensionType|constructor#redirectingFactoryAndGetter() → self::ExtensionType /* = core::int */ /* redirection-target: self::ExtensionType|constructor#constructorAndGetter */
  return self::ExtensionType|constructor#constructorAndGetter();
static extension-type-member method ExtensionType|constructor#_#redirectingFactoryAndGetter#tearOff() → self::ExtensionType /* = core::int */
  return self::ExtensionType|constructor#constructorAndGetter();
static extension-type-member method ExtensionType|get#redirectingFactoryAndGetter(lowered final self::ExtensionType /* = core::int */ #this) → dynamic
  ;
static extension-type-member method ExtensionType|constructor#constructorAndSetter() → self::ExtensionType /* = core::int */
  ;
static extension-type-member method ExtensionType|constructor#_#constructorAndSetter#tearOff() → self::ExtensionType /* = core::int */
  return self::ExtensionType|constructor#constructorAndSetter();
static extension-type-member method ExtensionType|set#constructorAndSetter(lowered final self::ExtensionType /* = core::int */ #this, dynamic value) → void
  ;
static extension-type-member method ExtensionType|constructor#factoryAndSetter() → self::ExtensionType /* = core::int */
  ;
static extension-type-member method ExtensionType|constructor#_#factoryAndSetter#tearOff() → self::ExtensionType /* = core::int */
  return self::ExtensionType|constructor#factoryAndSetter();
static extension-type-member method ExtensionType|set#factoryAndSetter(lowered final self::ExtensionType /* = core::int */ #this, dynamic value) → void
  ;
static extension-type-member method ExtensionType|constructor#redirectingFactoryAndSetter() → self::ExtensionType /* = core::int */ /* redirection-target: self::ExtensionType|constructor#constructorAndSetter */
  return self::ExtensionType|constructor#constructorAndSetter();
static extension-type-member method ExtensionType|constructor#_#redirectingFactoryAndSetter#tearOff() → self::ExtensionType /* = core::int */
  return self::ExtensionType|constructor#constructorAndSetter();
static extension-type-member method ExtensionType|set#redirectingFactoryAndSetter(lowered final self::ExtensionType /* = core::int */ #this, dynamic value) → void
  ;
