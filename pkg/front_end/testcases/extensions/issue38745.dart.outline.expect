library;
//
// Problems in library:
//
// pkg/front_end/testcases/extensions/issue38745.dart:9:7: Error: Extensions can't declare instance fields
// Try removing the field declaration or making it a static field
//   int field;
//       ^^^^^
//
// pkg/front_end/testcases/extensions/issue38745.dart:11:13: Error: Extensions can't declare instance fields
// Try removing the field declaration or making it a static field
//   final int property = 42;
//             ^^^^^^^^
//
// pkg/front_end/testcases/extensions/issue38745.dart:15:13: Error: Extensions can't declare instance fields
// Try removing the field declaration or making it a static field
//   final int property2 = 42;
//             ^^^^^^^^^
//
// pkg/front_end/testcases/extensions/issue38745.dart:17:19: Error: Conflicts with member 'property2'.
//   static void set property2(int value) {}
//                   ^
//
// pkg/front_end/testcases/extensions/issue38745.dart:15:13: Error: Conflicts with setter 'property2'.
//   final int property2 = 42;
//             ^
//
import self as self;
import "dart:core" as core;

class C<T extends core::Object* = dynamic> extends core::Object {
  synthetic constructor •() → self::C<self::C::T*>*
    ;
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
extension ext<T extends core::Object* = dynamic> on self::C<T*>* {
  field field = self::ext|field;
  field property = self::ext|property;
  field property2 = self::ext|property2;
  method method = self::ext|method;
  tearoff method = self::ext|get#method;
  set property = self::ext|set#property;
  static set property2 = set self::ext|property2;
}
static field core::int* ext|field;
static final field core::int* ext|property;
static final field core::int* ext|property2;
static method ext|set#property<T extends core::Object* = dynamic>(final self::C<self::ext|set#property::T*>* #this, core::int* value) → void
  ;
static set ext|property2(core::int* value) → void
  ;
static method ext|method<T extends core::Object* = dynamic>(final self::C<self::ext|method::T*>* #this) → dynamic
  ;
static method ext|get#method<T extends core::Object* = dynamic>(final self::C<self::ext|get#method::T*>* #this) → () →* dynamic
  return () → dynamic => self::ext|method<self::ext|get#method::T*>(#this);
static method main() → dynamic
  ;
static method errors() → dynamic
  ;
