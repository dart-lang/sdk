library;
import self as self;
import "dart:core" as core;

class A extends core::Object {
  synthetic constructor •() → self::A*
    ;
  get call() → core::String*
    ;
}
class B extends core::Object {
  synthetic constructor •() → self::B*
    ;
  get call() → () →* core::String*
    ;
}
extension _extension#0 on core::int* {
  get call = self::_extension#0|get#call;
}
extension _extension#1 on core::num* {
  get call = self::_extension#1|get#call;
}
extension _extension#2 on core::String* {
  get call = self::_extension#2|get#call;
}
static method _extension#0|get#call(final core::int* #this) → core::String*
  ;
static method _extension#1|get#call(final core::num* #this) → core::String*
  ;
static method _extension#2|get#call(final core::String* #this) → () →* core::String*
  ;
static method main() → dynamic
  ;
static method errors() → dynamic
  ;
