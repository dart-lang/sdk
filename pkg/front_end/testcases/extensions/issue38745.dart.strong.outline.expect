library;
//
// Problems in library:
//
// pkg/front_end/testcases/extensions/issue38745.dart:9:7: Error: Extensions can't declare instance fields
// Try removing the field declaration or making it a static field
//   int field;
//       ^^^^^
//
// pkg/front_end/testcases/extensions/issue38745.dart:11:13: Error: Extensions can't declare instance fields
// Try removing the field declaration or making it a static field
//   final int property = 42;
//             ^^^^^^^^
//
// pkg/front_end/testcases/extensions/issue38745.dart:15:13: Error: Extensions can't declare instance fields
// Try removing the field declaration or making it a static field
//   final int property2 = 42;
//             ^^^^^^^^^
//
// pkg/front_end/testcases/extensions/issue38745.dart:17:19: Error: Static property 'property2' conflicts with instance property of the same name.
//   static void set property2(int value) {}
//                   ^^^^^^^^^
// pkg/front_end/testcases/extensions/issue38745.dart:15:13: Context: Conflicting instance property 'property2'.
//   final int property2 = 42;
//             ^^^^^^^^^
//
import self as self;
import "dart:core" as core;

class C<T extends core::Object? = dynamic> extends core::Object {
  synthetic constructor •() → self::C<self::C::T%>
    ;
}
extension ext<T extends core::Object? = dynamic> on self::C<T%> {
  get field = self::ext|get#field;
  set field = self::ext|set#field;
  get property = self::ext|get#property;
  set property = self::ext|set#property;
  get property2 = self::ext|get#property2;
  method method = self::ext|method;
  method tearoff method = self::ext|get#method;
}
static abstract extension-member method ext|get#field<T extends core::Object? = dynamic>(lowered self::C<self::ext|get#field::T%> #this) → core::int;
static abstract extension-member method ext|set#field<T extends core::Object? = dynamic>(lowered self::C<self::ext|set#field::T%> #this, synthesized core::int #externalFieldValue) → void;
static abstract extension-member method ext|get#property<T extends core::Object? = dynamic>(lowered self::C<self::ext|get#property::T%> #this) → core::int;
static extension-member method ext|set#property<T extends core::Object? = dynamic>(lowered final self::C<self::ext|set#property::T%> #this, core::int value) → void
  ;
static abstract extension-member method ext|get#property2<T extends core::Object? = dynamic>(lowered self::C<self::ext|get#property2::T%> #this) → core::int;
static extension-member method ext|method<T extends core::Object? = dynamic>(lowered final self::C<self::ext|method::T%> #this) → dynamic
  ;
static extension-member method ext|get#method<T extends core::Object? = dynamic>(lowered final self::C<self::ext|get#method::T%> #this) → () → dynamic
  return () → dynamic => self::ext|method<self::ext|get#method::T%>(#this);
static method main() → dynamic
  ;
static method errors() → dynamic
  ;
