# Copyright (c) 2025, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

# Definition, offset, method etc extracted by starting the VM with
# `-DDFE_VERBOSE=true`, e.g.
# ```
# out/ReleaseX64/dart -DDFE_VERBOSE=true --enable-vm-service \
# --disable-service-auth-codes --pause_isolates_on_start inputFile.dart
# ```
# and then issuing the expression compilation.
#
# Paused inside a function declaration inside an extension.
# For this code the VM sends it in a weird order.

sources: |
  import 'dart:developer';

  extension on String {
    List<String> get foo {
      List<String> result = [];
      int offset = indexOf(':') + 1;
      void bar() {
        debugger();
        while (offset < length) {
          if (codeUnitAt(offset) != 32) {
            return;
          }
          offset++;
        }
      }

      bar();
      result.add("$offset");
      offset++;
      return result;
    }
  }

  void main(List<String> args) {
    print(args[0].foo);
  }

definitions: ["offset", "#this"]
definition_types: ["dart:core", "_Smi", "1", "0", "dart:core", "_OneByteString", "1", "0"]
type_definitions: []
type_bounds: []
type_defaults: []
method: "bar"
static: true
offset: 161
scriptUri: main.dart
expression: "offset + this.length"
