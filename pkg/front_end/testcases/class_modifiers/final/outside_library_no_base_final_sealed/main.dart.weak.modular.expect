library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/class_modifiers/final/outside_library_no_base_final_sealed/main.dart:7:33: Error: The class 'A' can't be extended outside of its library because it's a final class.
// class ExtendsFinalClass extends A {} /* Error */
//                                 ^
//
// pkg/front_end/testcases/class_modifiers/final/outside_library_no_base_final_sealed/main.dart:9:39: Error: The class 'A' can't be implemented outside of its library because it's a final class.
// class ImplementsFinalClass implements A {} /* Error */
//                                       ^
//
// pkg/front_end/testcases/class_modifiers/final/outside_library_no_base_final_sealed/main.dart:14:19: Error: The class 'A' can't be used as a mixin superclass constraint outside of its library because it's a final class.
// mixin MixinOnA on A {} /* Error */
//                   ^
//
// pkg/front_end/testcases/class_modifiers/final/outside_library_no_base_final_sealed/main.dart:16:20: Error: The class 'A' can't be used as a mixin superclass constraint outside of its library because it's a final class.
// mixin MixinOnAB on A, B {} /* Error */
//                    ^
//
// pkg/front_end/testcases/class_modifiers/final/outside_library_no_base_final_sealed/main.dart:16:23: Error: The class 'B' can't be used as a mixin superclass constraint outside of its library because it's a final class.
// mixin MixinOnAB on A, B {} /* Error */
//                       ^
//
import self as self;
import "main_lib.dart" as mai;
import "dart:core" as core;

import "org-dartlang-testcase:///main_lib.dart";

class ExtendsFinalClass extends mai::A {
  synthetic constructor •() → self::ExtendsFinalClass
    : super mai::A::•()
    ;
}
class ImplementsFinalClass extends core::Object implements mai::A {
  synthetic constructor •() → self::ImplementsFinalClass
    : super core::Object::•()
    ;
}
abstract class MixinOnA extends mai::A /*isMixinDeclaration*/  {
}
abstract class _MixinOnAB&A&B extends core::Object implements mai::A, mai::B /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_MixinOnAB&A&B
    : super core::Object::•()
    ;
}
abstract class MixinOnAB extends self::_MixinOnAB&A&B /*isMixinDeclaration*/  {
}
