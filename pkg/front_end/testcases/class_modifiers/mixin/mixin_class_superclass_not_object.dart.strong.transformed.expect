library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/class_modifiers/mixin/mixin_class_superclass_not_object.dart:9:13: Error: The class 'A' can't be used as a mixin because it extends a class other than 'Object'.
// mixin class A extends NotObject {}
//             ^
//
// pkg/front_end/testcases/class_modifiers/mixin/mixin_class_superclass_not_object.dart:11:13: Error: The class 'B' can't be used as a mixin because it extends a class other than 'Object'.
// mixin class B extends Object with NotObject {}
//             ^
//
// pkg/front_end/testcases/class_modifiers/mixin/mixin_class_superclass_not_object.dart:15:13: Error: The class 'D' can't be used as a mixin because it extends a class other than 'Object'.
// mixin class D = Object with AlsoNotObject, NotObject;
//             ^
//
import self as self;
import "dart:core" as core;

class NotObject extends core::Object {
  synthetic constructor •() → self::NotObject
    : super core::Object::•()
    ;
}
class AlsoNotObject extends core::Object {
  synthetic constructor •() → self::AlsoNotObject
    : super core::Object::•()
    ;
}
mixin class A extends self::NotObject {
  synthetic constructor •() → self::A
    : super self::NotObject::•()
    ;
}
abstract class _B&Object&NotObject extends core::Object implements self::NotObject /*isAnonymousMixin,isEliminatedMixin,hasConstConstructor*/  {
  const synthetic constructor •() → self::_B&Object&NotObject
    : super core::Object::•()
    ;
}
mixin class B extends self::_B&Object&NotObject {
  synthetic constructor •() → self::B
    : super self::_B&Object&NotObject::•()
    ;
}
mixin class C extends core::Object implements self::NotObject /*isEliminatedMixin,hasConstConstructor*/  {
  const synthetic constructor •() → self::C
    : super core::Object::•()
    ;
}
abstract class _D&Object&AlsoNotObject extends core::Object implements self::AlsoNotObject /*isAnonymousMixin,isEliminatedMixin,hasConstConstructor*/  {
  const synthetic constructor •() → self::_D&Object&AlsoNotObject
    : super core::Object::•()
    ;
}
mixin class D extends self::_D&Object&AlsoNotObject implements self::NotObject /*isEliminatedMixin,hasConstConstructor*/  {
  const synthetic constructor •() → self::D
    : super self::_D&Object&AlsoNotObject::•()
    ;
}
