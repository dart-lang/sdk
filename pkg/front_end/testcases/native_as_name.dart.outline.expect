library;
import self as self;
import "dart:core" as core;

class W extends core::Object {
  field core::String native;
  constructor •() → void
    ;
}
class X extends core::Object {
  synthetic constructor •() → void
    ;
  method native() → core::String
    ;
}
abstract class Y1 extends core::Object {
  synthetic constructor •() → void
    ;
  abstract get native() → core::String;
}
class Y2 extends self::Y1 {
  synthetic constructor •() → void
    ;
  get native() → core::String
    ;
}
class Z extends core::Object {
  field core::String f;
  synthetic constructor •() → void
    ;
  set native(core::String s) → dynamic
    ;
}
static method main() → dynamic
  ;
