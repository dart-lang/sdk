library test;
import self as self;
import "dart:core" as core;

class A extends core::Object {
  synthetic constructor •() → self::A
    ;
}
class B extends self::A {
  synthetic constructor •() → self::B
    ;
}
class C extends self::B {
  synthetic constructor •() → self::C
    ;
}
abstract class D extends core::Object {
  synthetic constructor •() → self::D
    ;
  abstract method foo() → self::A;
}
abstract class E extends core::Object {
  synthetic constructor •() → self::E
    ;
  abstract method foo() → self::B;
}
abstract class F extends core::Object {
  synthetic constructor •() → self::F
    ;
  abstract method foo() → core::Object;
}
abstract class G extends core::Object implements self::D, self::E, self::F {
  synthetic constructor •() → self::G
    ;
}
class H extends self::G {
  synthetic constructor •() → self::H
    ;
  method foo() → self::C
    ;
}
static field dynamic x;
static method bar() → self::G
  ;
static method main() → dynamic
  ;
