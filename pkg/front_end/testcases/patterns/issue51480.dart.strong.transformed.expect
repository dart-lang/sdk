library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

static method staticTypeOf<T extends core::Object? = dynamic>(self::staticTypeOf::T% x) → dynamic
  return self::staticTypeOf::T%;
static method main() → dynamic {
  hoisted has-declared-initializer core::int v;
  {
    final synthesized dynamic #0#0 = <core::String, core::int>{"key": 42};
    function ##0#3#initializer() → core::int?
      return #0#0{core::Map<core::String, core::int>}.{core::Map::[]}(#C1){(core::Object?) → core::int?};
    late final synthesized core::int? #0#3 = ##0#3#initializer(){() → core::int?};
    if(!((!(#0#3 == null) || null is{ForNonNullableByDefault} core::int && #0#0{core::Map<core::String, core::int>}.{core::Map::containsKey}(#C1){(core::Object?) → core::bool}) && (let final core::int #t1 = v = #0#3{core::int} in true)))
      throw new core::StateError::•("Pattern matching error");
  }
  core::print(self::staticTypeOf<core::int>(v));
}

constants  {
  #C1 = "key"
}

Extra constant evaluation status:
Evaluated: LogicalExpression @ org-dartlang-testcase:///issue51480.dart:8:13 -> BoolConstant(false)
Extra constant evaluation: evaluated: 20, effectively constant: 1
