library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

static method test(dynamic x) → dynamic {
  #L1:
  {
    final synthesized dynamic #0#0 = x;
    late final synthesized core::Object? #0#2 = #0#0{(core::Object?, {n: core::Object?})}.n{core::Object?};
    {
      if(#0#0 is{ForNonNullableByDefault} (core::Object?, {n: core::Object?}) && (!(#0#2 == null) ?{core::bool} #C1 =={core::num::==}{(core::Object) → core::bool} #0#2 : false) && #C2 =={core::num::==}{(core::Object) → core::bool} #0#0{(core::Object?, {n: core::Object?})}.$1{core::Object?}) {
        {
          break #L1;
        }
      }
    }
  }
}

constants  {
  #C1 = 1
  #C2 = 2
}
