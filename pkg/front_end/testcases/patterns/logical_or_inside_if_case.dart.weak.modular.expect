library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

static method test1(dynamic x) → dynamic {
  final dynamic #t1 = x;
  final dynamic #t2 = #t1;
  core::bool #t3 = false;
  core::bool #t4 = false;
  if(#t2 is core::int?) {
    #t3 = true;
  }
  if(!#t3 && #t2 is core::double?) {
    #t4 = true;
  }
  if(#t3 || #t4) {
  }
}
static method test2(dynamic x) → dynamic {
  final dynamic #t5 = x;
  core::bool #t6 = true;
  final dynamic #t7 = #t5;
  core::bool #t8 = false;
  core::bool #t9 = false;
  dynamic #t10;
  dynamic #t11;
  final dynamic #t12 = #t7;
  if(#t12 is core::List<dynamic> && #t12{core::List<dynamic>}.{core::List::length}{core::int} =={core::num::==}{(core::Object) → core::bool} 2) {
    final dynamic #t13 = #t12{core::List<dynamic>}.{core::List::[]}(0){(core::int) → dynamic};
    final dynamic #t14 = #t13;
    if(#t14 is core::int) {
      #t8 = true;
      #t10 = #t14{core::int};
    }
  }
  if(!#t8) {
    final dynamic #t15 = #t7;
    if(#t15 is core::List<dynamic> && #t15{core::List<dynamic>}.{core::List::length}{core::int} =={core::num::==}{(core::Object) → core::bool} 2) {
      final dynamic #t16 = #t15{core::List<dynamic>}.{core::List::[]}(1){(core::int) → dynamic};
      final dynamic #t17 = #t16;
      if(#t17 is core::String) {
        #t9 = true;
        #t11 = #t17{core::String};
      }
    }
  }
  if(#t8 || #t9) {
    dynamic y = #t8 ?{core::Object} #t10{core::int} : #t11{core::String};
    #t6 = false;
    {
      return y;
    }
  }
  if(#t6) {
    return null;
  }
}
static method test3(dynamic x) → dynamic {
  final dynamic #t18 = x;
  core::bool #t19 = true;
  final dynamic #t20 = #t18;
  core::bool #t21 = false;
  core::bool #t22 = false;
  final dynamic #t23 = #t20;
  core::bool #t24 = false;
  core::bool #t25 = false;
  if(#t23 =={core::Object::==}{(core::Object) → core::bool} 1) {
    #t24 = true;
  }
  if(!#t24 && #t23 =={core::Object::==}{(core::Object) → core::bool} 2) {
    #t25 = true;
  }
  if(#t24 || #t25) {
    #t21 = true;
  }
  if(!#t21 && #t20 =={core::Object::==}{(core::Object) → core::bool} 3) {
    #t22 = true;
  }
  if(#t21 || #t22) {
    #t19 = false;
    {
      return 0;
    }
  }
  if(#t19) {
    return 1;
  }
}
