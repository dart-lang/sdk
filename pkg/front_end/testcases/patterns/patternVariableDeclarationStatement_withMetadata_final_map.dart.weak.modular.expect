library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

static const field core::int annotation = #C1;
static method f(dynamic x) → dynamic {
  final dynamic a;
  {
    final synthesized dynamic #0#0 = x;
    if(!(#0#0 is{ForNonNullableByDefault} core::Map<dynamic, dynamic> && #0#0{core::Map<dynamic, dynamic>}.{core::Map::length}{core::int} =={core::num::==}{(core::Object) → core::bool} #C2 && #0#0{core::Map<dynamic, dynamic>}.{core::Map::containsKey}(#C3){(core::Object?) → core::bool} && (let final dynamic #t1 = a = #0#0{core::Map<dynamic, dynamic>}.{core::Map::[]}(#C3){(core::Object?) → dynamic} in true)))
      throw new core::StateError::•("Pattern matching error");
  }
}

constants  {
  #C1 = 0
  #C2 = 1
  #C3 = "a"
}
