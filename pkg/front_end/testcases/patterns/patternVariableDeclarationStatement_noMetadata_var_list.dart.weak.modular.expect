library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;
import "dart:_internal" as _in;

static method f(dynamic x) → dynamic {
  dynamic a;
  {
    final dynamic #0#0 = x;
    if(!(#0#0 is{ForNonNullableByDefault} core::List<dynamic> && #0#0{core::List<dynamic>}.{core::List::length}{core::int} =={core::num::==}{(core::Object) → core::bool} #C1 && (let final dynamic #t1 = a = #0#0{core::List<dynamic>}.{core::List::[]}(0){(core::int) → dynamic} as{ForNonNullableByDefault} dynamic in true)))
      throw new _in::ReachabilityError::•();
  }
}

constants  {
  #C1 = 1
}
