library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/patterns/typed_variable_named_as_inside_extractor_pattern_implicitly_named.dart:10:10: Error: The getter 'as' isn't defined for the class 'C'.
//  - 'C' is from 'pkg/front_end/testcases/patterns/typed_variable_named_as_inside_extractor_pattern_implicitly_named.dart'.
// Try correcting the name to the name of an existing getter, or defining a getter or field named 'as'.
//     case C(: int as):
//          ^^
//
import self as self;
import "dart:core" as core;

class C extends core::Object {
  field core::int? f = null;
  synthetic constructor •() → self::C
    : super core::Object::•()
    ;
}
static method test(dynamic x) → dynamic {
  #L1:
  {
    core::int #t1 = -1;
    core::int as;
    final dynamic #0#0 = x;
    late final dynamic #0#1 = invalid-expression "pkg/front_end/testcases/patterns/typed_variable_named_as_inside_extractor_pattern_implicitly_named.dart:10:10: Error: The getter 'as' isn't defined for the class 'C'.
 - 'C' is from 'pkg/front_end/testcases/patterns/typed_variable_named_as_inside_extractor_pattern_implicitly_named.dart'.
Try correcting the name to the name of an existing getter, or defining a getter or field named 'as'.
    case C(: int as):
         ^^" in #0#0{self::C}{<unresolved>}.as;
    dynamic #t2;
    if(#0#0 is{ForNonNullableByDefault} self::C && (#0#1 is{ForNonNullableByDefault} core::int && (let final dynamic #t3 = as = #0#1{core::int} in true))) {
      #t1 = 0;
      #t2 = as;
    }
    switch(#t1) {
      #L2:
      case #C1:
        {
          core::int as = #t2{core::int};
          {
            break #L1;
          }
        }
    }
  }
}

constants  {
  #C1 = 0
}
