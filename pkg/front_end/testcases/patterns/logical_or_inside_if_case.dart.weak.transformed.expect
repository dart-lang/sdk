library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

static method test1(dynamic x) → dynamic {
  {
    final dynamic #0#0 = x;
    if(#0#0 is{ForNonNullableByDefault} core::int? || #0#0 is{ForNonNullableByDefault} core::double?) {
    }
  }
}
static method test2(dynamic x) → dynamic {
  {
    dynamic y;
    final dynamic #0#0 = x;
    function ##0#3#initializer() → core::bool
      return #0#0{core::List<dynamic>}.{core::List::length}{core::int} =={core::num::==}{(core::Object) → core::bool} #C1;
    late final core::bool #0#3 = ##0#3#initializer(){() → core::bool};
    function ##0#6#initializer() → dynamic
      return #0#0{core::List<dynamic>}.{core::List::[]}(0){(core::int) → dynamic};
    late final dynamic #0#6 = ##0#6#initializer(){() → dynamic};
    function ##0#7#initializer() → dynamic
      return #0#0{core::List<dynamic>}.{core::List::[]}(1){(core::int) → dynamic};
    late final dynamic #0#7 = ##0#7#initializer(){() → dynamic};
    if(#0#0 is{ForNonNullableByDefault} core::List<dynamic> && #0#3 && (#0#6 is{ForNonNullableByDefault} core::int && (let final dynamic #t1 = y = #0#6{dynamic} in true)) && (let final dynamic #t2 = #0#7 in true) || #0#0 is{ForNonNullableByDefault} core::List<dynamic> && #0#3 && (let final dynamic #t3 = #0#6 in true) && (#0#7 is{ForNonNullableByDefault} core::String && (let final dynamic #t4 = y = #0#7{dynamic} in true))) {
      return y;
    }
    else {
      return null;
    }
  }
}
static method test3(dynamic x) → dynamic {
  {
    final dynamic #0#0 = x;
    if(#0#0{dynamic} =={core::Object::==}{(core::Object) → core::bool} #C2 || #0#0{dynamic} =={core::Object::==}{(core::Object) → core::bool} #C1 || #0#0{dynamic} =={core::Object::==}{(core::Object) → core::bool} #C3) {
      return 0;
    }
    else {
      return 1;
    }
  }
}
static method test4(dynamic x) → dynamic {
  {
    dynamic y;
    final dynamic #0#0 = x;
    function ##0#3#initializer() → core::bool
      return #0#0{core::List<dynamic>}.{core::List::length}{core::int} =={core::num::==}{(core::Object) → core::bool} #C3;
    late final core::bool #0#3 = ##0#3#initializer(){() → core::bool};
    function ##0#6#initializer() → dynamic
      return #0#0{core::List<dynamic>}.{core::List::[]}(0){(core::int) → dynamic};
    late final dynamic #0#6 = ##0#6#initializer(){() → dynamic};
    function ##0#7#initializer() → dynamic
      return #0#0{core::List<dynamic>}.{core::List::[]}(1){(core::int) → dynamic};
    late final dynamic #0#7 = ##0#7#initializer(){() → dynamic};
    function ##0#8#initializer() → dynamic
      return #0#0{core::List<dynamic>}.{core::List::[]}(2){(core::int) → dynamic};
    late final dynamic #0#8 = ##0#8#initializer(){() → dynamic};
    if(#0#0 is{ForNonNullableByDefault} core::List<dynamic> && #0#3 && (#0#6 is{ForNonNullableByDefault} core::int && (let final dynamic #t5 = y = #0#6{dynamic} in true)) && (let final dynamic #t6 = #0#7 in true) && (let final dynamic #t7 = #0#8 in true) || #0#0 is{ForNonNullableByDefault} core::List<dynamic> && #0#3 && (let final dynamic #t8 = #0#6 in true) && (#0#7 is{ForNonNullableByDefault} core::String && (let final dynamic #t9 = y = #0#7{dynamic} in true)) && (let final dynamic #t10 = #0#8 in true) || #0#0 is{ForNonNullableByDefault} core::List<dynamic> && #0#3 && (let final dynamic #t11 = #0#6 in true) && (#0#7 is{ForNonNullableByDefault} core::bool && (let final dynamic #t12 = y = #0#7{dynamic} in true)) && (let final dynamic #t13 = #0#8 in true)) {
      return y;
    }
    else {
      return null;
    }
  }
}

constants  {
  #C1 = 2
  #C2 = 1
  #C3 = 3
}
