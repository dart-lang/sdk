library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;
import "main_lib1.dart" as mai;
import "main_lib2.dart" as mai2;
import "dart:_internal" as _in;

import "org-dartlang-testcase:///main_lib1.dart";
import "org-dartlang-testcase:///main_lib2.dart";

class Main1 extends core::_Enum /*isEnum*/  {
  static const field core::List<self::Main1> values = #C7;
  enum-element static const field self::Main1 a = #C3;
  enum-element static const field self::Main1 b = #C6;
  const constructor •(core::int #index, core::String #name) → self::Main1
    : super core::_Enum::•(#index, #name)
    ;
  method _enumToString() → core::String
    return "Main1.${this.{core::_Enum::_name}{core::String}}";
}
class Main2 extends core::_Enum /*isEnum*/  {
  static const field core::List<self::Main2> values = #C10;
  enum-element static const field self::Main2 a = #C8;
  enum-element static const field self::Main2 b = #C9;
  const constructor •(core::int #index, core::String #name) → self::Main2
    : super core::_Enum::•(#index, #name)
    ;
  method _enumToString() → core::String
    return "Main2.${this.{core::_Enum::_name}{core::String}}";
}
static method method1(self::Main1 main1, self::Main2 main2, mai::Lib1a lib1a, mai::Lib1b lib1b, mai2::Lib2 lib2) → dynamic {
  #L1:
  switch(main1) /*isExplicitlyExhaustive*/ {
    #L2:
    case #C3:
    case #C6:
      {
        break #L1;
      }
    #L3:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L4:
  switch(main2) /*isExplicitlyExhaustive*/ {
    #L5:
    case #C8:
    case #C9:
      {
        break #L4;
      }
    #L6:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L7:
  switch(lib1a) /*isExplicitlyExhaustive*/ {
    #L8:
    case #C11:
    case #C12:
      {
        break #L7;
      }
    #L9:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L10:
  switch(lib1b) /*isExplicitlyExhaustive*/ {
    #L11:
    case #C13:
    case #C14:
      {
        break #L10;
      }
    #L12:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L13:
  switch(lib2) /*isExplicitlyExhaustive*/ {
    #L14:
    case #C15:
    case #C16:
      {
        break #L13;
      }
    #L15:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
}
static method method2(self::Main1 main1, self::Main2 main2, mai::Lib1a lib1a, mai::Lib1b lib1b, mai2::Lib2 lib2) → dynamic {
  #L16:
  switch(main1) /*isExplicitlyExhaustive*/ {
    #L17:
    case #C3:
    case #C6:
      {
        break #L16;
      }
    #L18:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L19:
  switch(main2) /*isExplicitlyExhaustive*/ {
    #L20:
    case #C8:
    case #C9:
      {
        break #L19;
      }
    #L21:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L22:
  switch(lib1a) /*isExplicitlyExhaustive*/ {
    #L23:
    case #C11:
    case #C12:
      {
        break #L22;
      }
    #L24:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L25:
  switch(lib1b) /*isExplicitlyExhaustive*/ {
    #L26:
    case #C13:
    case #C14:
      {
        break #L25;
      }
    #L27:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L28:
  switch(lib2) /*isExplicitlyExhaustive*/ {
    #L29:
    case #C15:
    case #C16:
      {
        break #L28;
      }
    #L30:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
}
static method method3(self::Main1 main1, self::Main2 main2, mai::Lib1a lib1a, mai::Lib1b lib1b, mai2::Lib2 lib2) → dynamic {
  #L31:
  switch(main1) /*isExplicitlyExhaustive*/ {
    #L32:
    case #C3:
    case #C6:
      {
        break #L31;
      }
    #L33:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L34:
  switch(main2) /*isExplicitlyExhaustive*/ {
    #L35:
    case #C8:
    case #C9:
      {
        break #L34;
      }
    #L36:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L37:
  switch(lib1a) /*isExplicitlyExhaustive*/ {
    #L38:
    case #C11:
    case #C12:
      {
        break #L37;
      }
    #L39:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L40:
  switch(lib1b) /*isExplicitlyExhaustive*/ {
    #L41:
    case #C13:
    case #C14:
      {
        break #L40;
      }
    #L42:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L43:
  switch(lib2) /*isExplicitlyExhaustive*/ {
    #L44:
    case #C15:
    case #C16:
      {
        break #L43;
      }
    #L45:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
}

library /*isNonNullableByDefault*/;
import self as mai;
import "dart:core" as core;
import "main.dart" as self;
import "main_lib2.dart" as mai2;
import "dart:_internal" as _in;

import "org-dartlang-testcase:///main.dart";
import "org-dartlang-testcase:///main_lib2.dart";

class Lib1a extends core::_Enum /*isEnum*/  {
  static const field core::List<mai::Lib1a> values = #C17;
  enum-element static const field mai::Lib1a a = #C11;
  enum-element static const field mai::Lib1a b = #C12;
  const constructor •(core::int #index, core::String #name) → mai::Lib1a
    : super core::_Enum::•(#index, #name)
    ;
  method _enumToString() → core::String
    return "Lib1a.${this.{core::_Enum::_name}{core::String}}";
}
class Lib1b extends core::_Enum /*isEnum*/  {
  static const field core::List<mai::Lib1b> values = #C18;
  enum-element static const field mai::Lib1b a = #C13;
  enum-element static const field mai::Lib1b b = #C14;
  const constructor •(core::int #index, core::String #name) → mai::Lib1b
    : super core::_Enum::•(#index, #name)
    ;
  method _enumToString() → core::String
    return "Lib1b.${this.{core::_Enum::_name}{core::String}}";
}
static method method1(self::Main1 main1, self::Main2 main2, mai::Lib1a lib1a, mai::Lib1b lib1b, mai2::Lib2 lib2) → dynamic {
  #L46:
  switch(main1) /*isExplicitlyExhaustive*/ {
    #L47:
    case #C3:
    case #C6:
      {
        break #L46;
      }
    #L48:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L49:
  switch(main2) /*isExplicitlyExhaustive*/ {
    #L50:
    case #C8:
    case #C9:
      {
        break #L49;
      }
    #L51:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L52:
  switch(lib1a) /*isExplicitlyExhaustive*/ {
    #L53:
    case #C11:
    case #C12:
      {
        break #L52;
      }
    #L54:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L55:
  switch(lib1b) /*isExplicitlyExhaustive*/ {
    #L56:
    case #C13:
    case #C14:
      {
        break #L55;
      }
    #L57:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L58:
  switch(lib2) /*isExplicitlyExhaustive*/ {
    #L59:
    case #C15:
    case #C16:
      {
        break #L58;
      }
    #L60:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
}
static method method2(self::Main1 main1, self::Main2 main2, mai::Lib1a lib1a, mai::Lib1b lib1b, mai2::Lib2 lib2) → dynamic {
  #L61:
  switch(main1) /*isExplicitlyExhaustive*/ {
    #L62:
    case #C3:
    case #C6:
      {
        break #L61;
      }
    #L63:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L64:
  switch(main2) /*isExplicitlyExhaustive*/ {
    #L65:
    case #C8:
    case #C9:
      {
        break #L64;
      }
    #L66:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L67:
  switch(lib1a) /*isExplicitlyExhaustive*/ {
    #L68:
    case #C11:
    case #C12:
      {
        break #L67;
      }
    #L69:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L70:
  switch(lib1b) /*isExplicitlyExhaustive*/ {
    #L71:
    case #C13:
    case #C14:
      {
        break #L70;
      }
    #L72:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L73:
  switch(lib2) /*isExplicitlyExhaustive*/ {
    #L74:
    case #C15:
    case #C16:
      {
        break #L73;
      }
    #L75:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
}
static method method3(self::Main1 main1, self::Main2 main2, mai::Lib1a lib1a, mai::Lib1b lib1b, mai2::Lib2 lib2) → dynamic {
  #L76:
  switch(main1) /*isExplicitlyExhaustive*/ {
    #L77:
    case #C3:
    case #C6:
      {
        break #L76;
      }
    #L78:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L79:
  switch(main2) /*isExplicitlyExhaustive*/ {
    #L80:
    case #C8:
    case #C9:
      {
        break #L79;
      }
    #L81:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L82:
  switch(lib1a) /*isExplicitlyExhaustive*/ {
    #L83:
    case #C11:
    case #C12:
      {
        break #L82;
      }
    #L84:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L85:
  switch(lib1b) /*isExplicitlyExhaustive*/ {
    #L86:
    case #C13:
    case #C14:
      {
        break #L85;
      }
    #L87:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
  #L88:
  switch(lib2) /*isExplicitlyExhaustive*/ {
    #L89:
    case #C15:
    case #C16:
      {
        break #L88;
      }
    #L90:
    default:
      throw new _in::ReachabilityError::•("`null` encountered as case in a switch statement with a non-nullable type.");
  }
}

constants  {
  #C1 = 0
  #C2 = "a"
  #C3 = self::Main1 {index:#C1, _name:#C2}
  #C4 = 1
  #C5 = "b"
  #C6 = self::Main1 {index:#C4, _name:#C5}
  #C7 = <self::Main1*>[#C3, #C6]
  #C8 = self::Main2 {index:#C1, _name:#C2}
  #C9 = self::Main2 {index:#C4, _name:#C5}
  #C10 = <self::Main2*>[#C8, #C9]
  #C11 = mai::Lib1a {index:#C1, _name:#C2}
  #C12 = mai::Lib1a {index:#C4, _name:#C5}
  #C13 = mai::Lib1b {index:#C1, _name:#C2}
  #C14 = mai::Lib1b {index:#C4, _name:#C5}
  #C15 = mai2::Lib2 {index:#C1, _name:#C2}
  #C16 = mai2::Lib2 {index:#C4, _name:#C5}
  #C17 = <mai::Lib1a*>[#C11, #C12]
  #C18 = <mai::Lib1b*>[#C13, #C14]
}


Constructor coverage from constants:
org-dartlang-testcase:///main.dart:
- Main1. (from org-dartlang-testcase:///main.dart:31:6)
- _Enum. (from org-dartlang-sdk:///sdk/lib/core/enum.dart)
- Object. (from org-dartlang-sdk:///sdk/lib/core/object.dart)
- Main2. (from org-dartlang-testcase:///main.dart:59:6)

org-dartlang-testcase:///main_lib1.dart:
- Lib1a. (from org-dartlang-testcase:///main_lib1.dart:31:6)
- _Enum. (from org-dartlang-sdk:///sdk/lib/core/enum.dart)
- Object. (from org-dartlang-sdk:///sdk/lib/core/object.dart)
- Lib1b. (from org-dartlang-testcase:///main_lib1.dart:59:6)
