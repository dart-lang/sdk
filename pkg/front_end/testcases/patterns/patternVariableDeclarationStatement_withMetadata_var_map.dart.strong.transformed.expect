library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

static const field core::int annotation = #C1;
static method f(dynamic x) → dynamic {
  hoisted has-declared-initializer dynamic a;
  {
    final synthesized dynamic #0#0 = x as{TypeError,ForDynamic,ForNonNullableByDefault} core::Map<dynamic, dynamic>;
    function ##0#4#initializer() → dynamic
      return #0#0{core::Map<dynamic, dynamic>}.{core::Map::[]}(#C2){(core::Object?) → dynamic};
    late final synthesized dynamic #0#4 = ##0#4#initializer(){() → dynamic};
    if(!(#0#0 is{ForNonNullableByDefault} core::Map<dynamic, dynamic> && (!(#0#4 == null) || null is{ForNonNullableByDefault} dynamic && #0#0{core::Map<dynamic, dynamic>}.{core::Map::containsKey}(#C2){(core::Object?) → core::bool}) && (let final dynamic #t1 = a = #0#4 in true)))
      throw new core::StateError::•("Pattern matching error");
  }
}

constants  {
  #C1 = 0
  #C2 = "a"
}

Extra constant evaluation status:
Evaluated: IsExpression @ org-dartlang-testcase:///patternVariableDeclarationStatement_withMetadata_var_map.dart:9:11 -> BoolConstant(true)
Extra constant evaluation: evaluated: 23, effectively constant: 1
