library;
import self as self;
import "dart:core" as core;

static method test(dynamic x) → dynamic {
  #L1:
  {
    final synthesized dynamic #0#0 = x;
    synthesized core::Object? #0#5;
    synthesized core::bool #0#5#isSet = false;
    {
      if(let final dynamic #t1 = #0#0 as core::Object in (#0#0 as core::Object) is core::Map<core::Object?, core::Object?> && (!((#0#5#isSet ?{core::Object?} #0#5{core::Object?} : let final dynamic #t2 = #0#5#isSet = true in #0#5 = ((#0#0 as core::Object) as{Unchecked} core::Map<core::Object?, core::Object?>).{core::Map::[]}(#C1){(core::Object?) → core::Object?}) == null) || null is core::Object? && ((#0#0 as core::Object) as{Unchecked} core::Map<core::Object?, core::Object?>).{core::Map::containsKey}(#C1){(core::Object?) → core::bool}) && #C2 =={core::num::==}{(core::Object) → core::bool} (#0#5#isSet ?{core::Object?} #0#5{core::Object?} : let final dynamic #t3 = #0#5#isSet = true in #0#5 = ((#0#0 as core::Object) as{Unchecked} core::Map<core::Object?, core::Object?>).{core::Map::[]}(#C1){(core::Object?) → core::Object?})) {
        {
          break #L1;
        }
      }
    }
  }
}

constants  {
  #C1 = "a"
  #C2 = 1
}
