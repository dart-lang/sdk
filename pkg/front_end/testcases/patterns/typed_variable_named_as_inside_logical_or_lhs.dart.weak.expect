library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

static method test(dynamic x) → dynamic {
  #L1:
  {
    core::int #t1 = -1;
    dynamic as;
    final dynamic #0#0 = x;
    dynamic #t2;
    if(#0#0 is{ForNonNullableByDefault} core::int && (let final dynamic #t3 = as = #0#0{dynamic} in true) || #0#0 is{ForNonNullableByDefault} core::List<dynamic> && #0#0{core::List<dynamic>}.{core::List::length}{core::int} =={core::num::==}{(core::Object) → core::bool} #C1 && (let final dynamic #t4 = as = #0#0{core::List<dynamic>}.{core::List::[]}(0){(core::int) → dynamic} as{ForNonNullableByDefault} dynamic in true)) {
      #t1 = 0;
      #t2 = as;
    }
    switch(#t1) {
      #L2:
      case #C2:
        {
          dynamic as = #t2{dynamic};
          {
            break #L1;
          }
        }
    }
  }
}

constants  {
  #C1 = 1
  #C2 = 0
}
