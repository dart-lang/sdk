library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/patterns/for_in_inference_error.dart:6:23: Error: The type 'int' used in the 'for' loop must implement 'Iterable<dynamic>'.
//  - 'Iterable' is from 'dart:core'.
//   for (var [int x] in 0) {} // Error.
//                       ^
//
import self as self;
import "dart:core" as core;

static method test() → dynamic {
  {
    synthesized core::Iterator<Never> :sync-for-iterator = invalid-expression "pkg/front_end/testcases/patterns/for_in_inference_error.dart:6:23: Error: The type 'int' used in the 'for' loop must implement 'Iterable<dynamic>'.
 - 'Iterable' is from 'dart:core'.
  for (var [int x] in 0) {} // Error.
                      ^" in 0 as{TypeError,ForNonNullableByDefault} core::Iterable<dynamic>.{core::Iterable::iterator}{core::Iterator<Never>};
    for (; :sync-for-iterator.{core::Iterator::moveNext}(){() → core::bool}; ) {
      final dynamic #t1 = :sync-for-iterator.{core::Iterator::current}{Never};
      {
        hoisted core::int x;
        {
          final synthesized dynamic #0#0 = #t1;
          function ##0#6#initializer() → dynamic
            return #0#0{core::List<dynamic>}.{core::List::[]}(0){(core::int) → dynamic};
          late final synthesized dynamic #0#6 = ##0#6#initializer(){() → dynamic};
          if(!(#0#0 is{ForNonNullableByDefault} core::List<dynamic> && #0#0{core::List<dynamic>}.{core::List::length}{core::int} =={core::num::==}{(core::Object) → core::bool} #C1 && (#0#6 is{ForNonNullableByDefault} core::int && (let final core::int #t2 = x = #0#6{core::int} in true))))
            throw new core::StateError::•("Pattern matching error");
        }
      }
    }
  }
}

constants  {
  #C1 = 1
}
