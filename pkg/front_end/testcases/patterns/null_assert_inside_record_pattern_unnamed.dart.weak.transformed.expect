library;
import self as self;
import "dart:core" as core;

static method test(dynamic x) → dynamic {
  #L1:
  {
    final synthesized dynamic #0#0 = x;
    synthesized core::Object? #0#2;
    synthesized core::bool #0#2#isSet = false;
    {
      if(#0#0 is (core::Object?, core::Object?) && (let final core::Object? #t1 = (#0#2#isSet ?{core::Object?} #0#2{core::Object?} : let final core::bool* #t2 = #0#2#isSet = true in #0#2 = #0#0{(core::Object?, core::Object?)}.$1{core::Object?})! in #C1 =={core::num::==}{(core::Object) → core::bool} (#0#2#isSet ?{core::Object?} #0#2{core::Object?} : let final core::bool* #t3 = #0#2#isSet = true in #0#2 = #0#0{(core::Object?, core::Object?)}.$1{core::Object?})!) && #C2 =={core::num::==}{(core::Object) → core::bool} #0#0{(core::Object?, core::Object?)}.$2{core::Object?}) {
        {
          break #L1;
        }
      }
    }
  }
}

constants  {
  #C1 = 1
  #C2 = 2
}
