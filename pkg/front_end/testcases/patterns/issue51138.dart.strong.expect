library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

static method test(core::List<dynamic> list) → core::String {
  return block {
    core::String #t1;
    final synthesized core::List<dynamic> #0#0 = list;
    synthesized core::bool #0#4;
    synthesized core::bool #0#4#isSet = false;
    synthesized dynamic #0#6;
    synthesized core::bool #0#6#isSet = false;
    synthesized dynamic #0#9;
    synthesized core::bool #0#9#isSet = false;
    #L1:
    {
      {
        if(#0#0 is{ForNonNullableByDefault} core::List<core::num> && (#0#4#isSet ?{core::bool} #0#4{core::bool} : let final dynamic #t2 = #0#4#isSet = true in #0#4 = #0#0{core::List<core::num>}.{core::List::length}{core::int} =={core::num::==}{(core::Object) → core::bool} #C1) && #C2 =={core::num::==}{(core::Object) → core::bool} (#0#6#isSet ?{core::num} #0#6{core::num} : let final dynamic #t3 = #0#6#isSet = true in #0#6 = #0#0{core::List<core::num>}.{core::List::[]}(0){(core::int) → core::num}) && (#0#9#isSet ?{core::num} #0#9{core::num} : let final dynamic #t4 = #0#9#isSet = true in #0#9 = #0#0{core::List<core::num>}.{core::List::[]}(1){(core::int) → core::num}).{core::num::>}(#C3){(core::num) → core::bool}) {
          #t1 = "relational";
          break #L1;
        }
      }
      {
        hoisted core::num c;
        if((#0#4#isSet ?{core::bool} #0#4{core::bool} : let final dynamic #t5 = #0#4#isSet = true in #0#4 = #0#0.{core::List::length}{core::int} =={core::num::==}{(core::Object) → core::bool} #C1) && #C4 =={core::num::==}{(core::Object) → core::bool} (#0#6#isSet ?{dynamic} #0#6{dynamic} : let final dynamic #t6 = #0#6#isSet = true in #0#6 = #0#0.{core::List::[]}(0){(core::int) → dynamic}) && (let final dynamic #t7 = (#0#9#isSet ?{dynamic} #0#9{dynamic} : let final dynamic #t8 = #0#9#isSet = true in #0#9 = #0#0.{core::List::[]}(1){(core::int) → dynamic}) as{ForNonNullableByDefault} core::num in let final dynamic #t9 = c = (#0#9#isSet ?{dynamic} #0#9{dynamic} : let final dynamic #t10 = #0#9#isSet = true in #0#9 = #0#0.{core::List::[]}(1){(core::int) → dynamic}) as{ForNonNullableByDefault} core::num in true)) {
          #t1 = "cast";
          break #L1;
        }
      }
      {
        if(true) {
          #t1 = "default";
          break #L1;
        }
      }
    }
  } =>#t1;
}
static method main() → dynamic {
  self::throws(() → void => self::test(<dynamic>[4, "42"]));
}
static method throws(() → void f) → dynamic {
  try {
    f(){() → void};
  }
  on core::Object catch(final core::Object _) {
    return;
  }
  throw "Missing exception";
}

constants  {
  #C1 = 2
  #C2 = 3
  #C3 = 0
  #C4 = 4
}
