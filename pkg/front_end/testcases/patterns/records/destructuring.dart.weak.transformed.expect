library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;
import "dart:_internal" as _in;

static method getLocation(core::String name) → (core::double, core::double) {
  if(name =={core::String::==}{(core::Object) → core::bool} "Aarhus") {
    return (56.1629, 10.2039);
  }
  else {
    return (0.0, 0.0);
  }
}
static method main(core::List<core::String> arguments) → void {
  final core::double lat;
  final core::double long;
  {
    final dynamic #0#0 = self::getLocation("Aarhus");
    if(!(#0#0 is{ForNonNullableByDefault} (core::Object?, core::Object?) && (let final core::double #t1 = lat = #0#0{(core::Object?, core::Object?)}.$0{core::Object?} as{ForNonNullableByDefault} core::double in true) && (let final core::double #t2 = long = #0#0{(core::Object?, core::Object?)}.$1{core::Object?} as{ForNonNullableByDefault} core::double in true)))
      throw new _in::ReachabilityError::•();
  }
  core::print("Current location: ${lat}, ${long}");
  self::expect(56.1629, lat);
  self::expect(10.2039, long);
}
static method expect(dynamic expected, dynamic actual) → dynamic {
  if(!(expected =={core::Object::==}{(core::Object) → core::bool} actual))
    throw "Expected ${expected}, actual ${actual}";
}


Extra constant evaluation status:
Evaluated: RecordLiteral @ org-dartlang-testcase:///destructuring.dart:7:12 -> RecordConstant(const (56.1629, 10.2039))
Evaluated: RecordLiteral @ org-dartlang-testcase:///destructuring.dart:9:12 -> RecordConstant(const (0.0, 0.0))
Extra constant evaluation: evaluated: 38, effectively constant: 2
