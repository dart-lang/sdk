library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

static method test1(core::Record x) → dynamic {
  final core::Record #t1 = x;
  final core::Record #t2 = #t1;
  if(#t2 is{ForNonNullableByDefault} (core::Object?, core::Object?)) {
    final core::Object? #t3 = #t2{(core::Object?, core::Object?)}.$0{core::Object?};
    final core::Object? #t4 = #t2{(core::Object?, core::Object?)}.$1{core::Object?};
    if(#t3 =={core::Object::==}{(core::Object) → core::bool} #C1) {
      if(#t4 =={core::Object::==}{(core::Object) → core::bool} #C2) {
      }
    }
  }
  final core::Record #t5 = x;
  final core::Record #t6 = #t5;
  if(#t6 is{ForNonNullableByDefault} (core::Object?, {a: core::Object?})) {
    final core::Object? #t7 = #t6{(core::Object?, {a: core::Object?})}.$0{core::Object?};
    final core::Object? #t8 = #t6{(core::Object?, {a: core::Object?})}.a{core::Object?};
    if(#t7 =={core::Object::==}{(core::Object) → core::bool} #C1) {
      if(#t8 =={core::Object::==}{(core::Object) → core::bool} #C2) {
      }
    }
  }
  final core::Record #t9 = x;
  final core::Record #t10 = #t9;
  if(#t10 is{ForNonNullableByDefault} (core::Object?, {a: core::Object?})) {
    final core::Object? #t11 = #t10{(core::Object?, {a: core::Object?})}.a{core::Object?};
    final core::Object? #t12 = #t10{(core::Object?, {a: core::Object?})}.$0{core::Object?};
    if(#t11 =={core::Object::==}{(core::Object) → core::bool} #C1) {
      if(#t12 =={core::Object::==}{(core::Object) → core::bool} #C2) {
      }
    }
  }
  final core::Record #t13 = x;
  final core::Record #t14 = #t13;
  if(#t14 is{ForNonNullableByDefault} ({a: core::Object?, b: core::Object?})) {
    final core::Object? #t15 = #t14{({a: core::Object?, b: core::Object?})}.a{core::Object?};
    final core::Object? #t16 = #t14{({a: core::Object?, b: core::Object?})}.b{core::Object?};
    if(#t15 =={core::Object::==}{(core::Object) → core::bool} #C1) {
      if(#t16 =={core::Object::==}{(core::Object) → core::bool} #C2) {
      }
    }
  }
  final core::Record #t17 = x;
  core::bool #t18 = true;
  final core::Record #t19 = #t17;
  if(#t19 is{ForNonNullableByDefault} (core::Object?, core::Object?, {bar: core::Object?, foo: core::Object?})) {
    final core::Object? #t20 = #t19{(core::Object?, core::Object?, {bar: core::Object?, foo: core::Object?})}.$0{core::Object?};
    final core::Object? #t21 = #t19{(core::Object?, core::Object?, {bar: core::Object?, foo: core::Object?})}.$1{core::Object?};
    final core::Object? #t22 = #t19{(core::Object?, core::Object?, {bar: core::Object?, foo: core::Object?})}.foo{core::Object?};
    if(#t20 is core::int) {
      final core::Object? #t23 = #t21;
      if(#t23 is core::double) {
        final core::Object #t24 = #t22!;
        if(#t24 is core::String) {
          core::double y = #t23{core::double};
          #t18 = false;
          {
            return 0;
          }
        }
      }
    }
  }
  if(#t18) {
    return 1;
  }
}
static method test2((core::int, core::int) x) → dynamic {
  final(core::int, core::int) #t25 = x;
  final(core::int, core::int) #t26 = #t25;
  final core::Object? #t27 = #t26.$0{core::Object?};
  final core::Object? #t28 = #t26.$1{core::Object?};
  if(#t27 =={core::Object::==}{(core::Object) → core::bool} #C1) {
    if(#t28 =={core::Object::==}{(core::Object) → core::bool} #C2) {
    }
  }
}
static method test3((core::int, {required a: core::int}) x) → dynamic {
  final(core::int, {required a: core::int}) #t29 = x;
  final(core::int, {required a: core::int}) #t30 = #t29;
  final core::Object? #t31 = #t30.$0{core::Object?};
  final core::Object? #t32 = #t30.a{core::Object?};
  if(#t31 =={core::Object::==}{(core::Object) → core::bool} #C1) {
    if(#t32 =={core::Object::==}{(core::Object) → core::bool} #C2) {
    }
  }
  final(core::int, {required a: core::int}) #t33 = x;
  final(core::int, {required a: core::int}) #t34 = #t33;
  final core::Object? #t35 = #t34.a{core::Object?};
  final core::Object? #t36 = #t34.$0{core::Object?};
  if(#t35 =={core::Object::==}{(core::Object) → core::bool} #C1) {
    if(#t36 =={core::Object::==}{(core::Object) → core::bool} #C2) {
    }
  }
}
static method test4(({required a: core::int, required b: core::int}) x) → dynamic {
  final({required a: core::int, required b: core::int}) #t37 = x;
  final({required a: core::int, required b: core::int}) #t38 = #t37;
  final core::Object? #t39 = #t38.a{core::Object?};
  final core::Object? #t40 = #t38.b{core::Object?};
  if(#t39 =={core::Object::==}{(core::Object) → core::bool} #C1) {
    if(#t40 =={core::Object::==}{(core::Object) → core::bool} #C2) {
    }
  }
}
static method test5((core::int, core::double, {required bar: dynamic, required foo: core::String}) x) → dynamic {
  final(core::int, core::double, {required bar: dynamic, required foo: core::String}) #t41 = x;
  core::bool #t42 = true;
  final(core::int, core::double, {required bar: dynamic, required foo: core::String}) #t43 = #t41;
  final core::Object? #t44 = #t43.$0{core::Object?};
  final core::Object? #t45 = #t43.$1{core::Object?};
  final core::Object? #t46 = #t43.foo{core::Object?};
  if(#t44 is core::int) {
    final core::Object? #t47 = #t45;
    if(#t47 is core::double) {
      final core::Object #t48 = #t46!;
      if(#t48 is core::String) {
        core::double y = #t47{core::double};
        #t42 = false;
        {
          return 0;
        }
      }
    }
  }
  if(#t42) {
    return 1;
  }
}

constants  {
  #C1 = 1
  #C2 = 2
}
