library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/patterns/typed_variable_named_as_inside_logical_or_lhs.dart:7:14: Error: Variable pattern 'as' doesn't have the same type or finality in all cases.
//     case int as || [var as]: // Error
//              ^^
//
import self as self;
import "dart:core" as core;

static method test(dynamic x) → dynamic {
  #L1:
  {
    final synthesized dynamic #0#0 = x;
    {
      hoisted invalid-type as;
      if(#0#0 is{ForNonNullableByDefault} core::int && (let final invalid-type #t1 = as = #0#0{invalid-type} in true) || #0#0 is{ForNonNullableByDefault} core::List<dynamic> && #0#0{core::List<dynamic>}.{core::List::length}{core::int} =={core::num::==}{(core::Object) → core::bool} #C1 && (let final invalid-type #t2 = as = #0#0{core::List<dynamic>}.{core::List::[]}(0){(core::int) → dynamic} as{ForNonNullableByDefault} invalid-type in true)) {
        {
          break #L1;
        }
      }
    }
  }
}

constants  {
  #C1 = 1
}
