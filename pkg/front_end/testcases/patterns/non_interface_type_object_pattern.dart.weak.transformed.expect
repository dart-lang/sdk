library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;
import "dart:async" as asy;

import "dart:async";

typedef FunctionType = () → void;
typedef GenericFunctionType<invariant T extends core::Object? = dynamic> = (T%) → T%;
static method test<T extends core::Object? = dynamic>(dynamic o) → dynamic {
  {
    hoisted core::int hashCode;
    final synthesized dynamic #0#0 = o;
    if(#0#0 is{ForNonNullableByDefault} () → void && (let final core::int #t1 = hashCode = #0#0{() → void}.{core::Object::hashCode}{core::int} in true)) {
      core::print(hashCode);
      return 1;
    }
  }
  {
    hoisted core::int hashCode;
    final synthesized dynamic #1#0 = o;
    if(#1#0 is{ForNonNullableByDefault} (core::int) → core::int && (let final core::int #t2 = hashCode = #1#0{(core::int) → core::int}.{core::Object::hashCode}{core::int} in true)) {
      core::print(hashCode);
      return 2;
    }
  }
  {
    hoisted core::int hashCode;
    final synthesized dynamic #2#0 = o;
    if(#2#0 is{ForNonNullableByDefault} (core::String) → core::String && (let final core::int #t3 = hashCode = #2#0{(core::String) → core::String}.{core::Object::hashCode}{core::int} in true)) {
      core::print(hashCode);
      return 3;
    }
  }
  {
    hoisted core::int hashCode;
    final synthesized dynamic #3#0 = o;
    if(#3#0 is{ForNonNullableByDefault} (self::test::T%) → self::test::T% && (let final core::int #t4 = hashCode = #3#0{(self::test::T%) → self::test::T%}.{core::Object::hashCode}{core::int} in true)) {
      core::print(hashCode);
      return 4;
    }
  }
  {
    hoisted core::int hashCode;
    final synthesized dynamic #4#0 = o;
    if(#4#0 is{ForNonNullableByDefault} (dynamic) → dynamic && (let final core::int #t5 = hashCode = #4#0{(dynamic) → dynamic}.{core::Object::hashCode}{core::int} in true)) {
      core::print(hashCode);
      return 5;
    }
  }
  {
    hoisted core::int hashCode;
    final synthesized dynamic #5#0 = o;
    if(#5#0 is{ForNonNullableByDefault} Null && (let final core::int #t6 = hashCode = #5#0{Null}.{core::Object::hashCode}{core::int} in true)) {
      core::print(hashCode);
      return 6;
    }
  }
  {
    hoisted core::int hashCode;
    final synthesized dynamic #6#0 = o;
    if(#6#0 is{ForNonNullableByDefault} FutureOr<core::int> && (let final core::int #t7 = hashCode = #6#0{FutureOr<core::int>}.{core::Object::hashCode}{core::int} in true)) {
      core::print(hashCode);
      return 7;
    }
  }
  {
    hoisted dynamic hashCode;
    final synthesized dynamic #7#0 = o;
    if(#7#0 is{ForNonNullableByDefault} dynamic && (let final core::int #t8 = hashCode = #7#0.{core::Object::hashCode}{core::int} in true)) {
      core::print(hashCode);
      return 0;
    }
  }
  return 1.{core::int::unary-}(){() → core::int};
}
static method function() → void {}
static method intFunction(core::int i) → core::int
  return i;
static method stringFunction(core::String s) → core::String
  return s;
static method boolFunction(core::bool b) → core::bool
  return b;
static method dynamicFunction(dynamic d) → dynamic
  return d;
static method multiArgFunction(core::int i, core::String s) → void {}
static method main() → dynamic {
  self::expect(1, self::test<dynamic>(#C1));
  self::expect(2, self::test<dynamic>(#C2));
  self::expect(3, self::test<dynamic>(#C3));
  self::expect(4, self::test<core::bool>(#C4));
  self::expect(0, self::test<dynamic>(#C4));
  self::expect(0, self::test<core::num>(#C4));
  self::expect(4, self::test<dynamic>(#C5));
  self::expect(4, self::test<dynamic>(#C5));
  self::expect(5, self::test<core::bool>(#C5));
  self::expect(0, self::test<dynamic>(#C6));
  self::expect(6, self::test<dynamic>(null));
  self::expect(7, self::test<dynamic>(0));
  self::expect(7, self::test<dynamic>(asy::Future::value<core::int>(0)));
}
static method expect(dynamic expected, dynamic actual) → dynamic {
  if(!(expected =={core::Object::==}{(core::Object) → core::bool} actual)) {
    throw "Expected ${expected}, actual ${actual}";
  }
}

constants  {
  #C1 = static-tearoff self::function
  #C2 = static-tearoff self::intFunction
  #C3 = static-tearoff self::stringFunction
  #C4 = static-tearoff self::boolFunction
  #C5 = static-tearoff self::dynamicFunction
  #C6 = static-tearoff self::multiArgFunction
}

Extra constant evaluation status:
Evaluated: InstanceInvocation @ org-dartlang-testcase:///non_interface_type_object_pattern.dart:43:10 -> IntConstant(-1)
Extra constant evaluation: evaluated: 120, effectively constant: 1
