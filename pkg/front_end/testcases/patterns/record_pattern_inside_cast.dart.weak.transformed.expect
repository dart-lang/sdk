library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

static method test(dynamic x) → dynamic {
  #L1:
  {
    final synthesized dynamic #0#0 = x;
    {
      if(let final core::Object #t1 = #0#0 in #0#0 is{ForNonNullableByDefault} (core::Object?, core::Object?) && #C1 =={core::num::==}{(core::Object) → core::bool} (#0#0 as{ForNonNullableByDefault} (core::Object?, core::Object?)).$1{core::Object?} && #C2 =={core::num::==}{(core::Object) → core::bool} (#0#0 as{ForNonNullableByDefault} (core::Object?, core::Object?)).$2{core::Object?}) {
        {
          break #L1;
        }
      }
    }
  }
}

constants  {
  #C1 = 1
  #C2 = 2
}
