library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/patterns/object_pattern_errors.dart:10:14: Error: Expected 0 type arguments.
//   if (x case A<int>()) {} // Error.
//              ^
//
// pkg/front_end/testcases/patterns/object_pattern_errors.dart:13:14: Error: Expected 1 type arguments.
//   if (x case B<String, num>()) {} // Error.
//              ^
//
import self as self;
import "dart:core" as core;

typedef B<unrelated X extends core::Object? = dynamic> = self::A;
class A extends core::Object {
  synthetic constructor •() → self::A
    : super core::Object::•()
    ;
}
static method test(dynamic x) → dynamic {
  if(false) {
  }
  {
    final dynamic #1#0 = x;
    if(#1#0 is{ForNonNullableByDefault} self::A) {
    }
  }
  {
    final dynamic #2#0 = x;
    if(#2#0 is{ForNonNullableByDefault} self::A) {
    }
  }
  if(false) {
  }
}
static method _#B#new#tearOff<unrelated X extends core::Object? = dynamic>() → self::A
  return new self::A::•();
