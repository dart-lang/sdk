library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/patterns/if_else_in_collections_errors.dart:5:50: Error: Undefined name 'y'.
// test1(dynamic x) => [1, if (x case int y) 2 else y, 3]; // Error.
//                                                  ^
//
// pkg/front_end/testcases/patterns/if_else_in_collections_errors.dart:7:55: Error: Undefined name 'y'.
// test2(dynamic x) => <int>{1, if (x case int y) 2 else y, 3}; // Error.
//                                                       ^
//
// pkg/front_end/testcases/patterns/if_else_in_collections_errors.dart:9:69: Error: Undefined name 'y'.
// test3(dynamic x) => <int, int>{1: 1, if (x case int y) 2: 2 else 2: y, 3: 3}; // Error.
//                                                                     ^
//
import self as self;
import "dart:core" as core;
import "dart:collection" as col;

static method test1(dynamic x) → dynamic
  return block {
    final core::List<core::int> #t1 = <core::int>[1];
    {
      hoisted core::int y;
      final synthesized dynamic #0#0 = x;
      if(#0#0 is{ForNonNullableByDefault} core::int && (let final dynamic #t2 = y = #0#0{core::int} in true))
        #t1.{core::List::add}{Invariant}(2){(core::int) → void};
      else
        #t1.{core::List::add}{Invariant}(invalid-expression "pkg/front_end/testcases/patterns/if_else_in_collections_errors.dart:5:50: Error: Undefined name 'y'.
test1(dynamic x) => [1, if (x case int y) 2 else y, 3]; // Error.
                                                 ^"){(core::int) → void};
    }
    #t1.{core::List::add}{Invariant}(3){(core::int) → void};
  } =>#t1;
static method test2(dynamic x) → dynamic
  return block {
    final core::Set<core::int> #t3 = col::LinkedHashSet::•<core::int>();
    #t3.{core::Set::add}{Invariant}(1){(core::int) → core::bool};
    {
      hoisted core::int y;
      final synthesized dynamic #0#0 = x;
      if(#0#0 is{ForNonNullableByDefault} core::int && (let final dynamic #t4 = y = #0#0{core::int} in true))
        #t3.{core::Set::add}{Invariant}(2){(core::int) → core::bool};
      else
        #t3.{core::Set::add}{Invariant}(invalid-expression "pkg/front_end/testcases/patterns/if_else_in_collections_errors.dart:7:55: Error: Undefined name 'y'.
test2(dynamic x) => <int>{1, if (x case int y) 2 else y, 3}; // Error.
                                                      ^"){(core::int) → core::bool};
    }
    #t3.{core::Set::add}{Invariant}(3){(core::int) → core::bool};
  } =>#t3;
static method test3(dynamic x) → dynamic
  return block {
    final core::Map<core::int, core::int> #t5 = <core::int, core::int>{};
    #t5.{core::Map::[]=}{Invariant}(1, 1){(core::int, core::int) → void};
    {
      hoisted core::int y;
      final synthesized dynamic #0#0 = x;
      if(#0#0 is{ForNonNullableByDefault} core::int && (let final dynamic #t6 = y = #0#0{core::int} in true))
        #t5.{core::Map::[]=}{Invariant}(2, 2){(core::int, core::int) → void};
      else
        #t5.{core::Map::[]=}{Invariant}(2, invalid-expression "pkg/front_end/testcases/patterns/if_else_in_collections_errors.dart:9:69: Error: Undefined name 'y'.
test3(dynamic x) => <int, int>{1: 1, if (x case int y) 2: 2 else 2: y, 3: 3}; // Error.
                                                                    ^"){(core::int, core::int) → void};
    }
    #t5.{core::Map::[]=}{Invariant}(3, 3){(core::int, core::int) → void};
  } =>#t5;
static method main() → dynamic {}
