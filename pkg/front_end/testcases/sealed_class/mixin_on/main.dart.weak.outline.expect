library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/sealed_class/mixin_on/main.dart:7:17: Error: The class 'SealedClass' can't be extended, implemented, or mixed in outside of its library because it's a sealed class.
// mixin MClass on SealedClass {} /* Error */
//                 ^
//
// pkg/front_end/testcases/sealed_class/mixin_on/main.dart:9:25: Error: The class 'SealedClass' can't be extended, implemented, or mixed in outside of its library because it's a sealed class.
// mixin MClassMultiple on SealedClass, SealedClass2 {} /* Error */
//                         ^
//
// pkg/front_end/testcases/sealed_class/mixin_on/main.dart:9:38: Error: The class 'SealedClass2' can't be extended, implemented, or mixed in outside of its library because it's a sealed class.
// mixin MClassMultiple on SealedClass, SealedClass2 {} /* Error */
//                                      ^
//
import self as self;
import "main_lib.dart" as mai;
import "dart:core" as core;

import "org-dartlang-testcase:///main_lib.dart";

abstract class MClass extends mai::SealedClass /*isMixinDeclaration*/  {
}
abstract class _MClassMultiple&SealedClass&SealedClass2 extends core::Object implements mai::SealedClass, mai::SealedClass2 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_MClassMultiple&SealedClass&SealedClass2
    ;
}
abstract class MClassMultiple extends self::_MClassMultiple&SealedClass&SealedClass2 /*isMixinDeclaration*/  {
}

library /*isNonNullableByDefault*/;
import self as mai;
import "dart:core" as core;

abstract sealed class SealedClass extends core::Object {
  synthetic constructor •() → mai::SealedClass
    ;
}
abstract sealed class SealedClass2 extends core::Object {
  synthetic constructor •() → mai::SealedClass2
    ;
}
