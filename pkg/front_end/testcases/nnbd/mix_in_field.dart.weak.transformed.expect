library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

import "dart:async";

class Mixin extends core::Object {
  field FutureOr<core::Null?>m = null;
  synthetic constructor •() → self::Mixin
    : super core::Object::•()
    ;
}
abstract class _Class&Object&Mixin extends core::Object implements self::Mixin /*isAnonymousMixin,isEliminatedMixin*/  {
  field FutureOr<core::Null?>m = null;
  synthetic constructor •() → self::_Class&Object&Mixin
    : super core::Object::•()
    ;
}
class Class extends self::_Class&Object&Mixin {
  synthetic constructor •() → self::Class
    : super self::_Class&Object&Mixin::•()
    ;
  method test(dynamic t1) → dynamic {
    this.{self::Mixin::m} = t1 as{TypeError,ForDynamic,ForNonNullableByDefault} FutureOr<core::Null?>;
  }
}
static method main() → dynamic {}
