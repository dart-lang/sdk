library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class Foo<T extends core::Object? = dynamic> extends core::Object {
  field dynamic bar = null;
  field dynamic baz = null;
  synthetic constructor •() → self::Foo<self::Foo::T%>
    : super core::Object::•()
    ;
  method qux() → dynamic {
    final self::Foo::T? v = this.{self::Foo::bar}{dynamic} as{TypeError,ForDynamic,ForNonNullableByDefault} self::Foo::T?;
    if(v is{ForNonNullableByDefault} core::num) {
      this.{self::Foo::baz}{dynamic}{dynamic}.[]=("value", v{self::Foo::T? & core::num /* '?' & '!' = '!' */}.{core::num::isFinite}{core::bool} ?{core::Object} v{self::Foo::T? & core::num /* '?' & '!' = '!' */} : v{self::Foo::T? & core::num /* '?' & '!' = '!' */}.{core::num::toString}(){() → core::String});
    }
  }
}
static method main() → dynamic {}
