library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class Annotation extends core::Object /*hasConstConstructor*/  {
  const constructor •() → self::Annotation
    : super core::Object::•()
    ;
}
class A extends core::Object {
  synthetic constructor •() → self::A
    : super core::Object::•()
    ;
  @#C1
  external get instanceField() → core::int;
  @#C1
  external set instanceField(core::int #externalFieldValue) → void;
  @#C1
  external get finalInstanceField() → core::int;
  @#C1
  external get covariantInstanceField() → core::num;
  @#C1
  external set covariantInstanceField(covariant core::num #externalFieldValue) → void;
  @#C1
  external static get staticField() → core::int;
  @#C1
  external static set staticField(core::int #externalFieldValue) → void;
  @#C1
  external static get finalStaticField() → core::int;
  external get untypedInstanceField() → dynamic;
  external set untypedInstanceField(dynamic #externalFieldValue) → void;
  external get untypedFinalInstanceField() → dynamic;
  external get untypedCovariantInstanceField() → dynamic;
  external set untypedCovariantInstanceField(covariant dynamic #externalFieldValue) → void;
  external static get untypedStaticField() → dynamic;
  external static set untypedStaticField(dynamic #externalFieldValue) → void;
  external static get untypedFinalStaticField() → dynamic;
}
abstract class B extends core::Object /*isMixinDeclaration*/  {
  @#C1
  external get instanceField() → core::int;
  @#C1
  external set instanceField(core::int #externalFieldValue) → void;
  @#C1
  external get finalInstanceField() → core::int;
  @#C1
  external get covariantInstanceField() → core::num;
  @#C1
  external set covariantInstanceField(covariant core::num #externalFieldValue) → void;
  @#C1
  external static get staticField() → core::int;
  @#C1
  external static set staticField(core::int #externalFieldValue) → void;
  @#C1
  external static get finalStaticField() → core::int;
  external get untypedInstanceField() → dynamic;
  external set untypedInstanceField(dynamic #externalFieldValue) → void;
  external get untypedFinalInstanceField() → dynamic;
  external get untypedCovariantInstanceField() → dynamic;
  external set untypedCovariantInstanceField(covariant dynamic #externalFieldValue) → void;
  external static get untypedStaticField() → dynamic;
  external static set untypedStaticField(dynamic #externalFieldValue) → void;
  external static get untypedFinalStaticField() → dynamic;
}
class C extends core::Object implements self::A {
  synthetic constructor •() → self::C
    : super core::Object::•()
    ;
  external get instanceField() → core::int;
  external set instanceField(core::int #externalFieldValue) → void;
  external get finalInstanceField() → core::int;
  external get covariantInstanceField() → core::num;
  external set covariantInstanceField(covariant core::num #externalFieldValue) → void;
  external get untypedInstanceField() → dynamic;
  external set untypedInstanceField(dynamic #externalFieldValue) → void;
  external get untypedFinalInstanceField() → dynamic;
  external get untypedCovariantInstanceField() → dynamic;
  external set untypedCovariantInstanceField(covariant dynamic #externalFieldValue) → void;
}
extension Extension on self::A {
  get extensionInstanceField = get self::Extension|extensionInstanceField;
  set extensionInstanceField = set self::Extension|extensionInstanceField;
  get finalExtensionInstanceField = get self::Extension|finalExtensionInstanceField;
  static get extensionStaticField = get self::Extension|extensionStaticField;
  static set extensionStaticField = set self::Extension|extensionStaticField;
  static get finalExtensionStaticField = get self::Extension|finalExtensionStaticField;
  get untypedExtensionInstanceField = get self::Extension|untypedExtensionInstanceField;
  set untypedExtensionInstanceField = set self::Extension|untypedExtensionInstanceField;
  get untypedFinalExtensionInstanceField = get self::Extension|untypedFinalExtensionInstanceField;
  static get untypedExtensionStaticField = get self::Extension|untypedExtensionStaticField;
  static set untypedExtensionStaticField = set self::Extension|untypedExtensionStaticField;
  static get untypedFinalExtensionStaticField = get self::Extension|untypedFinalExtensionStaticField;
}
@#C1
external static get topLevelField() → core::int;
@#C1
external static set topLevelField(core::int #externalFieldValue) → void;
@#C1
external static get finalTopLevelField() → core::int;
external static get untypedTopLevelField() → dynamic;
external static set untypedTopLevelField(dynamic #externalFieldValue) → void;
external static get untypedFinalTopLevelField() → dynamic;
@#C1
external static get Extension|extensionInstanceField() → core::int;
@#C1
external static set Extension|extensionInstanceField(core::int #externalFieldValue) → void;
@#C1
external static get Extension|finalExtensionInstanceField() → core::int;
@#C1
external static get Extension|extensionStaticField() → core::int;
@#C1
external static set Extension|extensionStaticField(core::int #externalFieldValue) → void;
@#C1
external static get Extension|finalExtensionStaticField() → core::int;
external static get Extension|untypedExtensionInstanceField() → dynamic;
external static set Extension|untypedExtensionInstanceField(dynamic #externalFieldValue) → void;
external static get Extension|untypedFinalExtensionInstanceField() → dynamic;
external static get Extension|untypedExtensionStaticField() → dynamic;
external static set Extension|untypedExtensionStaticField(dynamic #externalFieldValue) → void;
external static get Extension|untypedFinalExtensionStaticField() → dynamic;
static method main() → dynamic {}

constants  {
  #C1 = self::Annotation {}
}
