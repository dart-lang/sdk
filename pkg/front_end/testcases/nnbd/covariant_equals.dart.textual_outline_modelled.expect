class A {
  bool operator ==(covariant A other) => true;
}

class B extends A {
  bool operator ==(other) => true;
}

class C<T> {
  bool operator ==(covariant C<T> other) => true;
}

class D extends C<int> {}

main() {}

testNonNullable(A a, B b, C c_dynamic, C<int> c_int, C<String> c_string, D d) {}

testNullable(
    A? a, B? b, C? c_dynamic, C<int>? c_int, C<String>? c_string, D? d) {}
