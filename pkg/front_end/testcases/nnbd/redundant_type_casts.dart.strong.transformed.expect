library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class A<T extends core::Object? = dynamic> extends core::Object {
  generic-covariant-impl field self::A::T? _current = null;
  synthetic constructor •() → self::A<self::A::T%>
    : super core::Object::•()
    ;
  get current() → self::A::T%
    return let self::A::T? #t1 = this.{self::A::_current}{self::A::T?} in #t1 == null ?{self::A::T%} #t1 as{ForNonNullableByDefault} self::A::T% : #t1{self::A::T%};
}
static method main() → dynamic {}
