library;
import self as self;
import "dart:core" as core;

abstract class A extends core::Object {
  synthetic constructor •() → self::A
    ;
  abstract get i1() → core::int;
  abstract set i1(synthesized core::int #externalFieldValue) → void;
  abstract get i2() → core::int;
  abstract set i2(synthesized core::int #externalFieldValue) → void;
  abstract get x() → dynamic;
  abstract set x(synthesized dynamic #externalFieldValue) → void;
  abstract get fi() → core::int;
  abstract get fx() → dynamic;
  abstract get cn() → core::num;
  abstract set cn(covariant-by-declaration synthesized core::num #externalFieldValue) → void;
  abstract get cx() → dynamic;
  abstract set cx(covariant-by-declaration synthesized dynamic #externalFieldValue) → void;
}
static method main() → dynamic
  ;
