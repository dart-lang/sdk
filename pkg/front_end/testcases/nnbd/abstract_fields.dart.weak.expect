library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

abstract class A extends core::Object {
  synthetic constructor •() → self::A
    : super core::Object::•()
    ;
  abstract get instanceField() → core::int;
  abstract set instanceField(core::int #externalFieldValue) → void;
  abstract get finalInstanceField() → core::int;
  abstract get covariantInstanceField() → core::num;
  abstract set covariantInstanceField(covariant core::num #externalFieldValue) → void;
}
abstract class B extends core::Object /*isMixinDeclaration*/  {
  abstract get instanceField() → core::int;
  abstract set instanceField(core::int #externalFieldValue) → void;
  abstract get finalInstanceField() → core::int;
  abstract get covariantInstanceField() → core::num;
  abstract set covariantInstanceField(covariant core::num #externalFieldValue) → void;
}
static method main() → dynamic {}
