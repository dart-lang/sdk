library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class A extends core::Object {
  field core::num field1;
  field core::num field2;
  constructor •() → self::A
    ;
  constructor foo() → self::A
    ;
  constructor bar(core::num field1) → self::A
    ;
  constructor baz(core::num field1, core::num field2) → self::A
    ;
}
abstract class B extends core::Object {
  field core::num field1;
  field core::num field2;
  constructor •() → self::B
    ;
  constructor foo() → self::B
    ;
  constructor bar(core::num field1) → self::B
    ;
  constructor baz(core::num field1, core::num field2) → self::B
    ;
}
class C extends core::Object {
  final field core::num? field1;
  final field core::num? field2;
  constructor •() → self::C
    ;
  constructor foo() → self::C
    ;
  constructor bar(core::num? field1) → self::C
    ;
  constructor baz(core::num? field1, core::num? field2) → self::C
    ;
}
abstract class D extends core::Object {
  final field core::num? field1;
  final field core::num? field2;
  constructor •() → self::D
    ;
  constructor foo() → self::D
    ;
  constructor bar(core::num? field1) → self::D
    ;
  constructor baz(core::num? field1, core::num? field2) → self::D
    ;
}
static method main() → dynamic
  ;
