library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

abstract class M0 extends core::Object /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M1 extends core::Object implements self::M0 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M2 extends core::Object implements self::M1 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M3 extends core::Object implements self::M2 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M4 extends core::Object implements self::M3 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M5 extends core::Object implements self::M4 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M6 extends core::Object implements self::M5 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M7 extends core::Object implements self::M6 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M8 extends core::Object implements self::M7 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M9 extends core::Object implements self::M8 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M10 extends core::Object implements self::M9 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M11 extends core::Object implements self::M10 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M12 extends core::Object implements self::M11 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M13 extends core::Object implements self::M12 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M14 extends core::Object implements self::M13 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M15 extends core::Object implements self::M14 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M16 extends core::Object implements self::M15 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M17 extends core::Object implements self::M16 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M18 extends core::Object implements self::M17 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M19 extends core::Object implements self::M18 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M20 extends core::Object implements self::M19 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M21 extends core::Object implements self::M20 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M22 extends core::Object implements self::M21 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M23 extends core::Object implements self::M22 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M24 extends core::Object implements self::M23 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M25 extends core::Object implements self::M24 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M26 extends core::Object implements self::M25 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class M27 extends core::Object implements self::M26 /*isMixinDeclaration*/  {
  abstract get property() → core::int;
}
abstract class Super extends core::Object {
  synthetic constructor •() → self::Super
    : super core::Object::•()
    ;
  abstract get property() → core::int;
}
abstract class _Class&Super&M0 = self::Super with self::M0 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0
    : super self::Super::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M0::property
}
abstract class _Class&Super&M0&M1 = self::_Class&Super&M0 with self::M1 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1
    : super self::_Class&Super&M0::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M1::property
}
abstract class _Class&Super&M0&M1&M2 = self::_Class&Super&M0&M1 with self::M2 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2
    : super self::_Class&Super&M0&M1::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M2::property
}
abstract class _Class&Super&M0&M1&M2&M3 = self::_Class&Super&M0&M1&M2 with self::M3 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3
    : super self::_Class&Super&M0&M1&M2::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M3::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4 = self::_Class&Super&M0&M1&M2&M3 with self::M4 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4
    : super self::_Class&Super&M0&M1&M2&M3::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M4::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5 = self::_Class&Super&M0&M1&M2&M3&M4 with self::M5 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5
    : super self::_Class&Super&M0&M1&M2&M3&M4::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M5::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6 = self::_Class&Super&M0&M1&M2&M3&M4&M5 with self::M6 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M6::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6 with self::M7 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M7::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7 with self::M8 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M8::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8 with self::M9 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M9::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9 with self::M10 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M10::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10 with self::M11 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M11::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11 with self::M12 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M12::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12 with self::M13 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M13::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13 with self::M14 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M14::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14 with self::M15 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M15::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15 with self::M16 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M16::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16 with self::M17 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M17::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17 with self::M18 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M18::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18 with self::M19 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M19::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19 with self::M20 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M20::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20 with self::M21 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M21::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21 with self::M22 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M22::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22 with self::M23 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M23::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23 with self::M24 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M24::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24&M25 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24 with self::M25 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24&M25
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M25::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24&M25&M26 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24&M25 with self::M26 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24&M25&M26
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24&M25::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M26::property
}
abstract class _Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24&M25&M26&M27 = self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24&M25&M26 with self::M27 /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24&M25&M26&M27
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24&M25&M26::•()
    ;
  abstract mixin-stub get property() → core::int; -> self::M27::property
}
class Class extends self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24&M25&M26&M27 {
  synthetic constructor •() → self::Class
    : super self::_Class&Super&M0&M1&M2&M3&M4&M5&M6&M7&M8&M9&M10&M11&M12&M13&M14&M15&M16&M17&M18&M19&M20&M21&M22&M23&M24&M25&M26&M27::•()
    ;
  get property() → core::int
    return 0;
}
static method main() → dynamic {}
