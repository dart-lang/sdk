library;
import self as self;
import "dart:core" as core;

class Foo extends core::Object {
  field core::List<dynamic> list = <dynamic>[1, 2, 3];
  constructor •() → void
    : super core::Object::•()
    ;
  set first(dynamic x) → dynamic
    return let final dynamic #t1 = this.{self::Foo::list} in let final dynamic #t2 = 0 in let final dynamic #t3 = x in let final dynamic #t4 = #t1.{core::List::[]=}(#t2, #t3) in #t3;
  operator []=(dynamic x, dynamic y) → dynamic
    return let final dynamic #t5 = this.{self::Foo::list} in let final dynamic #t6 = x in let final dynamic #t7 = y in let final dynamic #t8 = #t5.{core::List::[]=}(#t6, #t7) in #t7;
  method clear() → void
    return this.{self::Foo::list}.{core::List::clear}();
}
static method main() → dynamic {
  new self::Foo::•().{self::Foo::first} = 4;
  new self::Foo::•().{self::Foo::[]=}(3, 4);
  new self::Foo::•().{self::Foo::clear}();
}
