library test;
import self as self;
import "dart:core" as core;

typedef F = () → void;
class C extends core::Object {
  default constructor •() → void
    : super core::Object::•()
    ;
  method f() → void {}
  get g() → () → void
    return null;
  get h() → dynamic
    return null;
  method test() → void {
    this.f();
    this.f();
    this.g();
    this.g();
    this.h();
    this.h();
  }
}
static method test(self::C c, () → void f, dynamic d) → void {
  c.f();
  f.call();
  d.call();
  d.f();
  c.g();
  c.h();
}
static method main() → dynamic {}
