library test;
import self as self;
import "dart:core" as core;
import "dart:async" as asy;

import "dart:async";

abstract class MyStream<T extends core::Object* = dynamic> extends asy::Stream<self::MyStream::T*> {
  static factory •<T extends core::Object* = dynamic>() → self::MyStream<self::MyStream::•::T*>*
    ;
}
static method F<T extends core::Object* = dynamic>() → self::F::T*
  ;
static method f() → asy::Future<dynamic>*
  ;
static method main() → asy::Future<dynamic>*
  ;
