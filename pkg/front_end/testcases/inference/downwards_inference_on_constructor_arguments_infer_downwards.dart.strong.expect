library test;
import self as self;
import "dart:core" as core;

class F0 extends core::Object {
  constructor •(core::List<core::int> a) → void
    : super core::Object::•() {}
}
class F1 extends core::Object {
  constructor •({core::List<core::int> a = null}) → void
    : super core::Object::•() {}
}
class F2 extends core::Object {
  constructor •(core::Iterable<core::int> a) → void
    : super core::Object::•() {}
}
class F3 extends core::Object {
  constructor •(core::Iterable<core::Iterable<core::int>> a) → void
    : super core::Object::•() {}
}
class F4 extends core::Object {
  constructor •({core::Iterable<core::Iterable<core::int>> a = null}) → void
    : super core::Object::•() {}
}
static method test() → void {
  new self::F0::•(<core::int>[]);
  new self::F0::•(<core::int>[3]);
  new self::F0::•(<core::int>["hello" as{TypeError} core::int]);
  new self::F0::•(<core::int>["hello" as{TypeError} core::int, 3]);
  new self::F1::•(a: <core::int>[]);
  new self::F1::•(a: <core::int>[3]);
  new self::F1::•(a: <core::int>["hello" as{TypeError} core::int]);
  new self::F1::•(a: <core::int>["hello" as{TypeError} core::int, 3]);
  new self::F2::•(<core::int>[]);
  new self::F2::•(<core::int>[3]);
  new self::F2::•(<core::int>["hello" as{TypeError} core::int]);
  new self::F2::•(<core::int>["hello" as{TypeError} core::int, 3]);
  new self::F3::•(<core::Iterable<core::int>>[]);
  new self::F3::•(<core::Iterable<core::int>>[<core::int>[3]]);
  new self::F3::•(<core::Iterable<core::int>>[<core::int>["hello" as{TypeError} core::int]]);
  new self::F3::•(<core::Iterable<core::int>>[<core::int>["hello" as{TypeError} core::int], <core::int>[3]]);
  new self::F4::•(a: <core::Iterable<core::int>>[]);
  new self::F4::•(a: <core::Iterable<core::int>>[<core::int>[3]]);
  new self::F4::•(a: <core::Iterable<core::int>>[<core::int>["hello" as{TypeError} core::int]]);
  new self::F4::•(a: <core::Iterable<core::int>>[<core::int>["hello" as{TypeError} core::int], <core::int>[3]]);
}
static method main() → dynamic {}
