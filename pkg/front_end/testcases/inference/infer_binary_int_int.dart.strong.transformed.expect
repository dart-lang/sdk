library test;
import self as self;
import "dart:core" as core;

static field core::bool a_equal = 1 =={core::num::==}{(core::Object) → core::bool} 2;
static field core::bool a_notEqual = !(1 =={core::num::==}{(core::Object) → core::bool} 2);
static field core::int a_bitXor = 1.{core::int::^}(2){(core::int) → core::int};
static field core::int a_bitAnd = 1.{core::int::&}(2){(core::int) → core::int};
static field core::int a_bitOr = 1.{core::int::|}(2){(core::int) → core::int};
static field core::int a_bitShiftRight = 1.{core::int::>>}(2){(core::int) → core::int};
static field core::int a_bitShiftLeft = 1.{core::int::<<}(2){(core::int) → core::int};
static field core::int a_add = 1.{core::num::+}(2){(core::num) → core::int};
static field core::int a_subtract = 1.{core::num::-}(2){(core::num) → core::int};
static field core::int a_multiply = 1.{core::num::*}(2){(core::num) → core::int};
static field core::double a_divide = 1.{core::num::/}(2){(core::num) → core::double};
static field core::int a_floorDivide = 1.{core::num::~/}(2){(core::num) → core::int};
static field core::bool a_greater = 1.{core::num::>}(2){(core::num) → core::bool};
static field core::bool a_less = 1.{core::num::<}(2){(core::num) → core::bool};
static field core::bool a_greaterEqual = 1.{core::num::>=}(2){(core::num) → core::bool};
static field core::bool a_lessEqual = 1.{core::num::<=}(2){(core::num) → core::bool};
static field core::int a_modulo = 1.{core::num::%}(2){(core::num) → core::int};
static method main() → dynamic {
  self::a_equal;
  self::a_notEqual;
  self::a_bitXor;
  self::a_bitAnd;
  self::a_bitOr;
  self::a_bitShiftRight;
  self::a_bitShiftLeft;
  self::a_add;
  self::a_subtract;
  self::a_multiply;
  self::a_divide;
  self::a_floorDivide;
  self::a_greater;
  self::a_less;
  self::a_greaterEqual;
  self::a_lessEqual;
  self::a_modulo;
}


Extra constant evaluation status:
Evaluated: EqualsCall @ org-dartlang-testcase:///infer_binary_int_int.dart:7:17 -> BoolConstant(false)
Evaluated: Not @ org-dartlang-testcase:///infer_binary_int_int.dart:8:20 -> BoolConstant(true)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:9:18 -> IntConstant(3)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:10:18 -> IntConstant(0)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:11:17 -> IntConstant(3)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:12:25 -> IntConstant(0)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:13:24 -> IntConstant(4)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:14:15 -> IntConstant(3)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:15:20 -> IntConstant(-1)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:16:20 -> IntConstant(2)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:17:18 -> DoubleConstant(0.5)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:18:23 -> IntConstant(0)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:19:19 -> BoolConstant(false)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:20:16 -> BoolConstant(true)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:21:24 -> BoolConstant(false)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:22:21 -> BoolConstant(true)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_binary_int_int.dart:23:18 -> IntConstant(1)
Extra constant evaluation: evaluated: 34, effectively constant: 17
