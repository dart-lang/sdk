library test;
//
// Problems in library:
//
// pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:13:41: Error: A value of type 'String Function<T>(String)' can't be assigned to a variable of type 'String Function<S>(int)'.
//     v = /*error:INVALID_ASSIGNMENT*/ <T>(String x) => "hello";
//                                         ^
//
// pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:14:52: Error: A value of type 'int' can't be returned from a function with return type 'String'.
//     v = /*error:INVALID_ASSIGNMENT*/ <T>(int x) => 3;
//                                                    ^
//
// pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:16:47: Error: A value of type 'int' can't be returned from a function with return type 'String'.
//       return /*error:RETURN_OF_INVALID_TYPE*/ 3;
//                                               ^
//
// pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:24:76: Error: A value of type 'int' can't be returned from a function with return type 'String'.
//     v = /*info:INFERRED_TYPE_CLOSURE, error:INVALID_ASSIGNMENT*/ <T>(x) => 3;
//                                                                            ^
//
// pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:26:47: Error: A value of type 'int' can't be returned from a function with return type 'String'.
//       return /*error:RETURN_OF_INVALID_TYPE*/ 3;
//                                               ^
//
// pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:29:47: Error: A value of type 'int' can't be returned from a function with return type 'String'.
//       return /*error:RETURN_OF_INVALID_TYPE*/ x;
//                                               ^
//
// pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:37:41: Error: A value of type 'List<String> Function<T>(String)' can't be assigned to a variable of type 'List<String> Function<S>(int)'.
//  - 'List' is from 'dart:core'.
//     v = /*error:INVALID_ASSIGNMENT*/ <T>(String x) => ["hello"];
//                                         ^
//
// pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:38:67: Error: A value of type 'int' can't be assigned to a variable of type 'String'.
//     v = <T>(int x) => [/*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ 3];
//                                                                   ^
//
// pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:40:58: Error: A value of type 'int' can't be assigned to a variable of type 'String'.
//       return [/*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ 3];
//                                                          ^
//
// pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:51:76: Error: A value of type 'int' can't be returned from a function with return type 'String'.
//     y = /*info:INFERRED_TYPE_CLOSURE, error:INVALID_ASSIGNMENT*/ <T>(x) => x;
//                                                                            ^
//
// pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:52:64: Error: The method 'substring' isn't defined for the type 'int'.
// Try correcting the name to the name of an existing method, or defining a method named 'substring'.
//     y = <T>(x) => /*info:DYNAMIC_INVOKE, info:DYNAMIC_CAST*/ x.substring(3);
//                                                                ^^^^^^^^^
//
import self as self;
import "dart:core" as core;

static method test() → void {
  {
    function f<S extends core::Object? = dynamic>(core::int x) → core::String
      return throw "";
    <S extends core::Object? = dynamic>(core::int) → core::String v = f;
    v = <T extends core::Object? = dynamic>(core::int x) → Never => throw "";
    v = <T extends core::Object? = dynamic>(core::int x) → core::String => "hello";
    v = invalid-expression "pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:13:41: Error: A value of type 'String Function<T>(String)' can't be assigned to a variable of type 'String Function<S>(int)'.
    v = /*error:INVALID_ASSIGNMENT*/ <T>(String x) => \"hello\";
                                        ^" in (<T extends core::Object? = dynamic>(core::String x) → core::String => "hello") as{TypeError} <S extends core::Object? = dynamic>(core::int) → core::String;
    v = <T extends core::Object? = dynamic>(core::int x) → core::String => invalid-expression "pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:14:52: Error: A value of type 'int' can't be returned from a function with return type 'String'.
    v = /*error:INVALID_ASSIGNMENT*/ <T>(int x) => 3;
                                                   ^" in 3 as{TypeError} core::String;
    v = <T extends core::Object? = dynamic>(core::int x) → core::String {
      return invalid-expression "pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:16:47: Error: A value of type 'int' can't be returned from a function with return type 'String'.
      return /*error:RETURN_OF_INVALID_TYPE*/ 3;
                                              ^" in 3 as{TypeError} core::String;
    };
  }
  {
    function f<S extends core::Object? = dynamic>(core::int x) → core::String
      return throw "";
    <S extends core::Object? = dynamic>(core::int) → core::String v = f;
    v = <T extends core::Object? = dynamic>(core::int x) → Never => throw "";
    v = <T extends core::Object? = dynamic>(core::int x) → core::String => "hello";
    v = <T extends core::Object? = dynamic>(core::int x) → core::String => invalid-expression "pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:24:76: Error: A value of type 'int' can't be returned from a function with return type 'String'.
    v = /*info:INFERRED_TYPE_CLOSURE, error:INVALID_ASSIGNMENT*/ <T>(x) => 3;
                                                                           ^" in 3 as{TypeError} core::String;
    v = <T extends core::Object? = dynamic>(core::int x) → core::String {
      return invalid-expression "pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:26:47: Error: A value of type 'int' can't be returned from a function with return type 'String'.
      return /*error:RETURN_OF_INVALID_TYPE*/ 3;
                                              ^" in 3 as{TypeError} core::String;
    };
    v = <T extends core::Object? = dynamic>(core::int x) → core::String {
      return invalid-expression "pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:29:47: Error: A value of type 'int' can't be returned from a function with return type 'String'.
      return /*error:RETURN_OF_INVALID_TYPE*/ x;
                                              ^" in x as{TypeError} core::String;
    };
  }
  {
    function f<S extends core::Object? = dynamic>(core::int x) → core::List<core::String>
      return throw "";
    <S extends core::Object? = dynamic>(core::int) → core::List<core::String> v = f;
    v = <T extends core::Object? = dynamic>(core::int x) → Never => throw "";
    v = <T extends core::Object? = dynamic>(core::int x) → core::List<core::String> => <core::String>["hello"];
    v = invalid-expression "pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:37:41: Error: A value of type 'List<String> Function<T>(String)' can't be assigned to a variable of type 'List<String> Function<S>(int)'.
 - 'List' is from 'dart:core'.
    v = /*error:INVALID_ASSIGNMENT*/ <T>(String x) => [\"hello\"];
                                        ^" in (<T extends core::Object? = dynamic>(core::String x) → core::List<core::String> => <core::String>["hello"]) as{TypeError} <S extends core::Object? = dynamic>(core::int) → core::List<core::String>;
    v = <T extends core::Object? = dynamic>(core::int x) → core::List<core::String> => <core::String>[invalid-expression "pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:38:67: Error: A value of type 'int' can't be assigned to a variable of type 'String'.
    v = <T>(int x) => [/*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ 3];
                                                                  ^" in 3 as{TypeError} core::String];
    v = <T extends core::Object? = dynamic>(core::int x) → core::List<core::String> {
      return <core::String>[invalid-expression "pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:40:58: Error: A value of type 'int' can't be assigned to a variable of type 'String'.
      return [/*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ 3];
                                                         ^" in 3 as{TypeError} core::String];
    };
  }
  {
    function int2int<S extends core::Object? = dynamic>(core::int x) → core::int
      return throw "";
    function int2String<T extends core::Object? = dynamic>(core::int x) → core::String
      return throw "";
    function string2String<T extends core::Object? = dynamic>(core::String x) → core::String
      return throw "";
    <S extends core::Object? = dynamic>(core::int) → core::int x = int2int;
    x = <T extends core::Object? = dynamic>(core::int x) → core::int => x;
    x = <T extends core::Object? = dynamic>(core::int x) → core::int => x.{core::num::+}(1){(core::num) → core::int};
    <T extends core::Object? = dynamic>(core::int) → core::String y = int2String;
    y = <T extends core::Object? = dynamic>(core::int x) → core::String => invalid-expression "pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:51:76: Error: A value of type 'int' can't be returned from a function with return type 'String'.
    y = /*info:INFERRED_TYPE_CLOSURE, error:INVALID_ASSIGNMENT*/ <T>(x) => x;
                                                                           ^" in x as{TypeError} core::String;
    y = <T extends core::Object? = dynamic>(core::int x) → core::String => invalid-expression "pkg/front_end/testcases/inference/downwards_inference_on_generic_function_expressions.dart:52:64: Error: The method 'substring' isn't defined for the type 'int'.
Try correcting the name to the name of an existing method, or defining a method named 'substring'.
    y = <T>(x) => /*info:DYNAMIC_INVOKE, info:DYNAMIC_CAST*/ x.substring(3);
                                                               ^^^^^^^^^" in x{<unresolved>}.substring(3) as{TypeError,ForDynamic} core::String;
    <T extends core::Object? = dynamic>(core::String) → core::String z = string2String;
    z = <T extends core::Object? = dynamic>(core::String x) → core::String => x.{core::String::substring}(3){(core::int, [core::int?]) → core::String};
  }
}
static method main() → dynamic {}
