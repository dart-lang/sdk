library test;
import self as self;
import "dart:core" as core;

abstract class A extends core::Object {
  constructor •() → void
    ;
  abstract get x() → core::int;
}
class B extends core::Object {
  constructor •() → void
    ;
  get x() → core::int
    ;
}
class C extends self::A {
  field dynamic x;
  constructor •() → void
    ;
}
class D extends self::B {
  field dynamic x;
  constructor •() → void
    ;
}
class E extends core::Object implements self::A {
  field dynamic x;
  constructor •() → void
    ;
}
class F extends core::Object implements self::B {
  field dynamic x;
  constructor •() → void
    ;
}
abstract class Object&B = core::Object with self::B {
}
class G extends self::Object&B {
  field dynamic x;
  constructor •() → void
    ;
}
static method main() → dynamic
  ;
