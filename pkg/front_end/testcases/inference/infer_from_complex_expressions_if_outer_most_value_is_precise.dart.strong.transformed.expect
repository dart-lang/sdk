library test;
//
// Problems in library:
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:18:46: Error: Undefined name 'x'.
// var b = new B(/*error:UNDEFINED_IDENTIFIER*/ x); // allocations
//                                              ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:19:42: Error: Undefined name 'x'.
// var c1 = [/*error:UNDEFINED_IDENTIFIER*/ x]; // list literals
//                                          ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:28:58: Error: The operator 'unary-' isn't defined for the type 'A'.
//  - 'A' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
// Try correcting the operator to an existing operator, or defining a 'unary-' operator.
// var i = /*error:UNDEFINED_OPERATOR,info:DYNAMIC_INVOKE*/ -new A();
//                                                          ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:32:36: Error: A value of type 'String' can't be assigned to a variable of type 'A'.
//  - 'A' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
//   a = /*error:INVALID_ASSIGNMENT*/ "hi";
//                                    ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:34:36: Error: A value of type 'String' can't be assigned to a variable of type 'B'.
//  - 'B' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
//   b = /*error:INVALID_ASSIGNMENT*/ "hi";
//                                    ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:37:37: Error: A value of type 'Set<dynamic>' can't be assigned to a variable of type 'List<dynamic>'.
//  - 'Set' is from 'dart:core'.
//  - 'List' is from 'dart:core'.
//   c1 = /*error:INVALID_ASSIGNMENT*/ {};
//                                     ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:39:37: Error: A value of type 'Set<dynamic>' can't be assigned to a variable of type 'List<dynamic>'.
//  - 'Set' is from 'dart:core'.
//  - 'List' is from 'dart:core'.
//   c2 = /*error:INVALID_ASSIGNMENT*/ {};
//                                     ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:41:36: Error: A value of type 'int' can't be assigned to a variable of type 'Map<dynamic, dynamic>'.
//  - 'Map' is from 'dart:core'.
//   d = /*error:INVALID_ASSIGNMENT*/ 3;
//                                    ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:43:36: Error: A value of type 'Map<dynamic, dynamic>' can't be assigned to a variable of type 'A'.
//  - 'Map' is from 'dart:core'.
//  - 'A' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
//   e = /*error:INVALID_ASSIGNMENT*/ {};
//                                    ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:45:36: Error: A value of type 'bool' can't be assigned to a variable of type 'int'.
//   f = /*error:INVALID_ASSIGNMENT*/ false;
//                                    ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:47:36: Error: A value of type 'bool' can't be assigned to a variable of type 'int'.
//   g = /*error:INVALID_ASSIGNMENT*/ false;
//                                    ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:48:36: Error: A value of type 'bool' can't be assigned to a variable of type 'B'.
//  - 'B' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
//   h = /*error:INVALID_ASSIGNMENT*/ false;
//                                    ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:52:36: Error: A value of type 'bool' can't be assigned to a variable of type 'B'.
//  - 'B' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
//   j = /*error:INVALID_ASSIGNMENT*/ false;
//                                    ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:53:36: Error: A value of type 'List<dynamic>' can't be assigned to a variable of type 'B'.
//  - 'List' is from 'dart:core'.
//  - 'B' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
//   j = /*error:INVALID_ASSIGNMENT*/ [];
//                                    ^
//
import self as self;
import "dart:core" as core;
import "dart:_compact_hash" as _co;

class A extends core::Object {
  field core::int x = 0;
  synthetic constructor •() → self::A
    : super core::Object::•()
    ;
  operator +(dynamic other) → self::B
    return throw "";
}
class B extends self::A {
  constructor •(dynamic ignore) → self::B
    : super self::A::•()
    ;
}
static field self::A a = new self::A::•();
static field self::B b = new self::B::•(invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:18:46: Error: Undefined name 'x'.
var b = new B(/*error:UNDEFINED_IDENTIFIER*/ x); // allocations
                                             ^");
static field core::List<dynamic> c1 = core::_GrowableList::_literal1<dynamic>(invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:19:42: Error: Undefined name 'x'.
var c1 = [/*error:UNDEFINED_IDENTIFIER*/ x]; // list literals
                                         ^");
static field core::List<dynamic> c2 = #C1;
static field core::Map<dynamic, dynamic> d = <dynamic, dynamic>{"a": "b"};
static field self::A e = let final self::A #t1 = new self::A::•() in block {
  #t1.{self::A::x} = 3;
} =>#t1;
static field core::int f = 2.{core::num::+}(3){(core::num) → core::int};
static field core::int g = 3.{core::int::unary-}(){() → core::int};
static field self::B h = new self::A::•().{self::A::+}(3){(dynamic) → self::B};
static field dynamic i = invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:28:58: Error: The operator 'unary-' isn't defined for the type 'A'.
 - 'A' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
Try correcting the operator to an existing operator, or defining a 'unary-' operator.
var i = /*error:UNDEFINED_OPERATOR,info:DYNAMIC_INVOKE*/ -new A();
                                                         ^" in new self::A::•(){<unresolved>}.unary-();
static field self::B j = let Null #t2 = null in #t2 == null ?{self::B} #t2 as self::B : #t2{self::B};
static method test1() → dynamic {
  self::a = invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:32:36: Error: A value of type 'String' can't be assigned to a variable of type 'A'.
 - 'A' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
  a = /*error:INVALID_ASSIGNMENT*/ \"hi\";
                                   ^" in "hi" as{TypeError} self::A;
  self::a = new self::B::•(3);
  self::b = invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:34:36: Error: A value of type 'String' can't be assigned to a variable of type 'B'.
 - 'B' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
  b = /*error:INVALID_ASSIGNMENT*/ \"hi\";
                                   ^" in "hi" as{TypeError} self::B;
  self::b = new self::B::•(3);
  self::c1 = core::_GrowableList::•<dynamic>(0);
  self::c1 = invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:37:37: Error: A value of type 'Set<dynamic>' can't be assigned to a variable of type 'List<dynamic>'.
 - 'Set' is from 'dart:core'.
 - 'List' is from 'dart:core'.
  c1 = /*error:INVALID_ASSIGNMENT*/ {};
                                    ^" in ( block {
    final core::Set<dynamic> #t3 = new _co::_Set::•<dynamic>();
  } =>#t3) as{TypeError} core::List<dynamic>;
  self::c2 = core::_GrowableList::•<dynamic>(0);
  self::c2 = invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:39:37: Error: A value of type 'Set<dynamic>' can't be assigned to a variable of type 'List<dynamic>'.
 - 'Set' is from 'dart:core'.
 - 'List' is from 'dart:core'.
  c2 = /*error:INVALID_ASSIGNMENT*/ {};
                                    ^" in ( block {
    final core::Set<dynamic> #t4 = new _co::_Set::•<dynamic>();
  } =>#t4) as{TypeError} core::List<dynamic>;
  self::d = <dynamic, dynamic>{};
  self::d = invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:41:36: Error: A value of type 'int' can't be assigned to a variable of type 'Map<dynamic, dynamic>'.
 - 'Map' is from 'dart:core'.
  d = /*error:INVALID_ASSIGNMENT*/ 3;
                                   ^" in 3 as{TypeError} core::Map<dynamic, dynamic>;
  self::e = new self::A::•();
  self::e = invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:43:36: Error: A value of type 'Map<dynamic, dynamic>' can't be assigned to a variable of type 'A'.
 - 'Map' is from 'dart:core'.
 - 'A' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
  e = /*error:INVALID_ASSIGNMENT*/ {};
                                   ^" in <dynamic, dynamic>{} as{TypeError} self::A;
  self::f = 3;
  self::f = invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:45:36: Error: A value of type 'bool' can't be assigned to a variable of type 'int'.
  f = /*error:INVALID_ASSIGNMENT*/ false;
                                   ^" in false as{TypeError} core::int;
  self::g = 1;
  self::g = invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:47:36: Error: A value of type 'bool' can't be assigned to a variable of type 'int'.
  g = /*error:INVALID_ASSIGNMENT*/ false;
                                   ^" in false as{TypeError} core::int;
  self::h = invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:48:36: Error: A value of type 'bool' can't be assigned to a variable of type 'B'.
 - 'B' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
  h = /*error:INVALID_ASSIGNMENT*/ false;
                                   ^" in false as{TypeError} self::B;
  self::h = new self::B::•("b");
  self::i = false;
  self::j = new self::B::•("b");
  self::j = invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:52:36: Error: A value of type 'bool' can't be assigned to a variable of type 'B'.
 - 'B' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
  j = /*error:INVALID_ASSIGNMENT*/ false;
                                   ^" in false as{TypeError} self::B;
  self::j = invalid-expression "pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:53:36: Error: A value of type 'List<dynamic>' can't be assigned to a variable of type 'B'.
 - 'List' is from 'dart:core'.
 - 'B' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
  j = /*error:INVALID_ASSIGNMENT*/ [];
                                   ^" in core::_GrowableList::•<dynamic>(0) as{TypeError} self::B;
}
static method main() → dynamic {}

constants  {
  #C1 = <dynamic>[]
}

Extra constant evaluation status:
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_from_complex_expressions_if_outer_most_value_is_precise.dart:23:11 -> IntConstant(5)
Evaluated: InstanceInvocation @ org-dartlang-testcase:///infer_from_complex_expressions_if_outer_most_value_is_precise.dart:26:9 -> IntConstant(-3)
Evaluated: EqualsNull @ org-dartlang-testcase:///infer_from_complex_expressions_if_outer_most_value_is_precise.dart:29:5 -> BoolConstant(true)
Evaluated: VariableGet @ org-dartlang-testcase:///infer_from_complex_expressions_if_outer_most_value_is_precise.dart:29:40 -> NullConstant(null)
Evaluated: VariableGet @ org-dartlang-testcase:///infer_from_complex_expressions_if_outer_most_value_is_precise.dart:29:5 -> NullConstant(null)
Extra constant evaluation: evaluated: 51, effectively constant: 5
