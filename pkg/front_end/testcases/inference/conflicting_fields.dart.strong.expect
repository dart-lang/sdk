library;
//
// Problems in library:
//
// pkg/front_end/testcases/inference/conflicting_fields.dart:18:7: Error: Can't infer a return type for 'field1' as some of the inherited members have different types.
// Try adding an explicit type.
//   get field1 => null;
//       ^^^^^^
// pkg/front_end/testcases/inference/conflicting_fields.dart:8:11: Context: This is one of the inherited members.
//   dynamic field1;
//           ^^^^^^
// pkg/front_end/testcases/inference/conflicting_fields.dart:13:7: Context: This is one of the inherited members.
//   int field1;
//       ^^^^^^
//
// pkg/front_end/testcases/inference/conflicting_fields.dart:20:14: Error: Can't infer a type for 'value' as some of the inherited members have different types.
// Try adding an explicit type.
//   set field1(value) {}
//              ^^^^^
// pkg/front_end/testcases/inference/conflicting_fields.dart:8:11: Context: This is one of the inherited members.
//   dynamic field1;
//           ^^^^^^
// pkg/front_end/testcases/inference/conflicting_fields.dart:13:7: Context: This is one of the inherited members.
//   int field1;
//       ^^^^^^
//
// pkg/front_end/testcases/inference/conflicting_fields.dart:19:7: Error: Can't infer a return type for 'field2' as some of the inherited members have different types.
// Try adding an explicit type.
//   get field2 => null;
//       ^^^^^^
// pkg/front_end/testcases/inference/conflicting_fields.dart:9:7: Context: This is one of the inherited members.
//   int field2;
//       ^^^^^^
// pkg/front_end/testcases/inference/conflicting_fields.dart:14:11: Context: This is one of the inherited members.
//   dynamic field2;
//           ^^^^^^
//
// pkg/front_end/testcases/inference/conflicting_fields.dart:21:14: Error: Can't infer a type for 'value' as some of the inherited members have different types.
// Try adding an explicit type.
//   set field2(value) {}
//              ^^^^^
// pkg/front_end/testcases/inference/conflicting_fields.dart:9:7: Context: This is one of the inherited members.
//   int field2;
//       ^^^^^^
// pkg/front_end/testcases/inference/conflicting_fields.dart:14:11: Context: This is one of the inherited members.
//   dynamic field2;
//           ^^^^^^
//
import self as self;
import "dart:core" as core;

class A extends core::Object {
  field dynamic field1 = null;
  field core::int* field2 = null;
  synthetic constructor •() → self::A*
    : super core::Object::•()
    ;
}
class I extends core::Object {
  field core::int* field1 = null;
  field dynamic field2 = null;
  synthetic constructor •() → self::I*
    : super core::Object::•()
    ;
}
class B extends self::A implements self::I {
  synthetic constructor •() → self::B*
    : super self::A::•()
    ;
  get field1() → invalid-type
    return null;
  get field2() → invalid-type
    return null;
  set field1(invalid-type value) → void {}
  set field2(invalid-type value) → void {}
}
static method main() → dynamic {}
