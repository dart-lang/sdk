library test;
import self as self;
import "dart:core" as core;

class A extends core::Object {
  synthetic constructor •() → self::A
    : super core::Object::•()
    ;
}
class B extends self::A {
  static field self::B staticVariable = throw "";
  static field self::B? staticVariable2 = null;
  synthetic constructor •() → self::B
    : super self::A::•()
    ;
  operator +(self::C v) → self::B
    return throw "";
  operator -(core::int i) → self::B
    return throw "";
  operator *(self::B v) → self::B
    return throw "";
  operator &(self::A v) → self::C
    return throw "";
}
class C extends self::B {
  synthetic constructor •() → self::C
    : super self::B::•()
    ;
}
static field self::B topLevelVariable = throw "";
static field self::B? topLevelVariable2;
static method f<T extends core::Object? = dynamic>() → self::f::T%
  return throw "";
static method test_topLevelVariable() → void {
  self::topLevelVariable = self::f<self::B>();
  self::topLevelVariable2 == null ?{self::B?} self::topLevelVariable2 = self::f<self::B?>() : null;
  self::topLevelVariable = self::topLevelVariable.{self::B::+}(self::f<self::C>()){(self::C) → self::B};
  self::topLevelVariable = self::topLevelVariable.{self::B::*}(self::f<self::B>()){(self::B) → self::B};
  self::topLevelVariable = self::topLevelVariable.{self::B::&}(self::f<self::A>()){(self::A) → self::C};
  self::topLevelVariable = self::topLevelVariable.{self::B::-}(1){(core::int) → self::B};
  self::topLevelVariable = self::topLevelVariable.{self::B::-}(1){(core::int) → self::B};
  self::B v1 = self::topLevelVariable = self::f<self::B>();
  self::B? v2 = let final self::B? #t1 = self::topLevelVariable2 in #t1 == null ?{self::B?} self::topLevelVariable2 = self::f<self::B?>() : #t1{self::B};
  self::B v3 = self::topLevelVariable = self::topLevelVariable.{self::B::+}(self::f<self::C>()){(self::C) → self::B};
  self::B v4 = self::topLevelVariable = self::topLevelVariable.{self::B::*}(self::f<self::B>()){(self::B) → self::B};
  self::C v5 = self::topLevelVariable = self::topLevelVariable.{self::B::&}(self::f<self::A>()){(self::A) → self::C};
  self::B v6 = self::topLevelVariable = self::topLevelVariable.{self::B::-}(1){(core::int) → self::B};
  self::B v7 = let final self::B #t2 = self::topLevelVariable in let final void #t3 = self::topLevelVariable = #t2.{self::B::-}(1){(core::int) → self::B} in #t2;
}
static method test_staticVariable() → void {
  self::B::staticVariable = self::f<self::B>();
  self::B::staticVariable2 == null ?{self::B?} self::B::staticVariable2 = self::f<self::B?>() : null;
  self::B::staticVariable = self::B::staticVariable.{self::B::+}(self::f<self::C>()){(self::C) → self::B};
  self::B::staticVariable = self::B::staticVariable.{self::B::*}(self::f<self::B>()){(self::B) → self::B};
  self::B::staticVariable = self::B::staticVariable.{self::B::&}(self::f<self::A>()){(self::A) → self::C};
  self::B::staticVariable = self::B::staticVariable.{self::B::-}(1){(core::int) → self::B};
  self::B::staticVariable = self::B::staticVariable.{self::B::-}(1){(core::int) → self::B};
  self::B v1 = self::B::staticVariable = self::f<self::B>();
  self::B? v2 = let final self::B? #t4 = self::B::staticVariable2 in #t4 == null ?{self::B?} self::B::staticVariable2 = self::f<self::B?>() : #t4{self::B};
  self::B v3 = self::B::staticVariable = self::B::staticVariable.{self::B::+}(self::f<self::C>()){(self::C) → self::B};
  self::B v4 = self::B::staticVariable = self::B::staticVariable.{self::B::*}(self::f<self::B>()){(self::B) → self::B};
  self::C v5 = self::B::staticVariable = self::B::staticVariable.{self::B::&}(self::f<self::A>()){(self::A) → self::C};
  self::B v6 = self::B::staticVariable = self::B::staticVariable.{self::B::-}(1){(core::int) → self::B};
  self::B v7 = let final self::B #t5 = self::B::staticVariable in let final void #t6 = self::B::staticVariable = #t5.{self::B::-}(1){(core::int) → self::B} in #t5;
}
static method main() → dynamic {}
