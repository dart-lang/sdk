library test;
//
// Problems in library:
//
// pkg/front_end/testcases/inference/unsafe_block_closure_inference_function_call_explicit_type_param_via_expr1.dart:9:15: Error: A comparison expression can't be an operand of another comparison expression.
// Try putting parentheses around one of the comparisons.
// var v = (f<int>)(/*@returnType=int**/() {
//               ^
//
// pkg/front_end/testcases/inference/unsafe_block_closure_inference_function_call_explicit_type_param_via_expr1.dart:9:16: Error: Expected an identifier, but got ')'.
// var v = (f<int>)(/*@returnType=int**/() {
//                ^
//
// pkg/front_end/testcases/inference/unsafe_block_closure_inference_function_call_explicit_type_param_via_expr1.dart:9:11: Error: The operator '<' isn't defined for the class 'List<T> Function<T>(T Function())'.
//  - 'List' is from 'dart:core'.
// Try correcting the operator to an existing operator, or defining a '<' operator.
// var v = (f<int>)(/*@returnType=int**/() {
//           ^
//
import self as self;
import "dart:core" as core;

static field dynamic v = invalid-expression "pkg/front_end/testcases/inference/unsafe_block_closure_inference_function_call_explicit_type_param_via_expr1.dart:9:11: Error: The operator '<' isn't defined for the class 'List<T> Function<T>(T Function())'.
 - 'List' is from 'dart:core'.
Try correcting the operator to an existing operator, or defining a '<' operator.
var v = (f<int>)(/*@returnType=int**/() {
          ^".>(invalid-expression "pkg/front_end/testcases/inference/unsafe_block_closure_inference_function_call_explicit_type_param_via_expr1.dart:9:16: Error: This couldn't be parsed.
var v = (f<int>)(/*@returnType=int**/() {
               ^").call(() → core::int* {
  return 1;
});
static method f<T extends core::Object* = dynamic>(() →* self::f::T* g) → core::List<self::f::T*>*
  return <self::f::T*>[g.call()];
static method main() → dynamic {}
