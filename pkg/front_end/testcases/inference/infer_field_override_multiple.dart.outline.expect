library test;
//
// Problems in library:
//
// pkg/front_end/testcases/inference/infer_field_override_multiple.dart:32:7: Error: Can't infer a type for 'x' as some of the inherited members have different types.
// Try adding an explicit type.
//   var x;
//       ^
// pkg/front_end/testcases/inference/infer_field_override_multiple.dart:9:11: Context: This is one of the inherited members.
//   int get x;
//           ^
// pkg/front_end/testcases/inference/infer_field_override_multiple.dart:17:11: Context: This is one of the inherited members.
//   num get x;
//           ^
//
// pkg/front_end/testcases/inference/infer_field_override_multiple.dart:36:7: Error: Can't infer a type for 'x' as some of the inherited members have different types.
// Try adding an explicit type.
//   var x;
//       ^
// pkg/front_end/testcases/inference/infer_field_override_multiple.dart:9:11: Context: This is one of the inherited members.
//   int get x;
//           ^
// pkg/front_end/testcases/inference/infer_field_override_multiple.dart:21:14: Context: This is one of the inherited members.
//   double get x;
//              ^
//
// pkg/front_end/testcases/inference/infer_field_override_multiple.dart:40:7: Error: Can't infer a type for 'x' as some of the inherited members have different types.
// Try adding an explicit type.
//   var x;
//       ^
// pkg/front_end/testcases/inference/infer_field_override_multiple.dart:17:11: Context: This is one of the inherited members.
//   num get x;
//           ^
// pkg/front_end/testcases/inference/infer_field_override_multiple.dart:21:14: Context: This is one of the inherited members.
//   double get x;
//              ^
//
import self as self;
import "dart:core" as core;

abstract class A extends core::Object {
  synthetic constructor •() → self::A*
    ;
  abstract get x() → core::int*;
}
abstract class B extends core::Object {
  synthetic constructor •() → self::B*
    ;
  abstract get x() → core::int*;
}
abstract class C extends core::Object {
  synthetic constructor •() → self::C*
    ;
  abstract get x() → core::num*;
}
abstract class D extends core::Object {
  synthetic constructor •() → self::D*
    ;
  abstract get x() → core::double*;
}
class E extends self::A implements self::B {
  field core::int* x;
  synthetic constructor •() → self::E*
    ;
}
class F extends self::A implements self::C {
  field invalid-type x;
  synthetic constructor •() → self::F*
    ;
}
class G extends self::A implements self::D {
  field invalid-type x;
  synthetic constructor •() → self::G*
    ;
}
class H extends self::C implements self::D {
  field invalid-type x;
  synthetic constructor •() → self::H*
    ;
}
static method main() → dynamic
  ;
