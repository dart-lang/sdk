library test;
//
// Problems in library:
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:18:46: Error: Undefined name 'x'.
// var b = new B(/*error:UNDEFINED_IDENTIFIER*/ x); // allocations
//                                              ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:19:42: Error: Undefined name 'x'.
// var c1 = [/*error:UNDEFINED_IDENTIFIER*/ x]; // list literals
//                                          ^
//
// pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart:28:58: Error: The operator 'unary-' isn't defined for the type 'A'.
//  - 'A' is from 'pkg/front_end/testcases/inference/infer_from_complex_expressions_if_outer_most_value_is_precise.dart'.
// Try correcting the operator to an existing operator, or defining a 'unary-' operator.
// var i = /*error:UNDEFINED_OPERATOR,info:DYNAMIC_INVOKE*/ -new A();
//                                                          ^
//
import self as self;
import "dart:core" as core;

class A extends core::Object {
  field core::int x;
  synthetic constructor •() → self::A
    ;
  operator +(dynamic other) → self::B
    ;
}
class B extends self::A {
  constructor •(dynamic ignore) → self::B
    ;
}
static field self::A a;
static field self::B b;
static field core::List<dynamic> c1;
static field core::List<dynamic> c2;
static field core::Map<dynamic, dynamic> d;
static field self::A e;
static field core::int f;
static field core::int g;
static field self::B h;
static field dynamic i;
static field self::B j;
static method test1() → dynamic
  ;
static method main() → dynamic
  ;
