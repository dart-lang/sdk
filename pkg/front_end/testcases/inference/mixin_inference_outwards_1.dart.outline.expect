library;
import self as self;
import "dart:core" as core;

class I<X extends core::Object = dynamic> extends core::Object {
  synthetic constructor •() → void
    ;
}
class M0<T extends core::Object = dynamic> extends self::I<self::M0::T> {
  synthetic constructor •() → void
    ;
}
class M1<T extends core::Object = dynamic> extends self::I<self::M1::T> {
  synthetic constructor •() → void
    ;
}
abstract class _A&M0&M1 = self::M0<core::int> with self::M1<dynamic> {
}
class A extends self::_A&M0&M1 {
  synthetic constructor •() → void
    ;
}
static method main() → dynamic
  ;
