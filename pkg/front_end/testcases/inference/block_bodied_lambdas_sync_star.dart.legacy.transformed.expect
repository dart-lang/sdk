library test;
import self as self;
import "dart:core" as core;

static method test() → dynamic {
  dynamic f = () → core::Iterable<dynamic> /* originally sync* */ {
    dynamic :await_jump_var = 0;
    dynamic :await_ctx_var;
    function :sync_op(core::_SyncIterator<dynamic> :iterator) → core::bool yielding {
      {
        {
          :iterator.{core::_SyncIterator::_current} = 1;
          [yield] true;
        }
        {
          :iterator.{core::_SyncIterator::_yieldEachIterable} = <dynamic>[3, 4.0];
          [yield] true;
        }
      }
      return false;
    }
    return new core::_SyncIterable::•<dynamic>(:sync_op);
  };
  core::Iterable<core::num> g = f.call();
  core::Iterable<core::int> h = f.call();
}
static method main() → dynamic {}
