library test;
import self as self;
import "dart:core" as core;

abstract class A extends core::Object {
  synthetic constructor •() → void
    : super core::Object::•()
    ;
  abstract get x() → core::int;
}
class B extends core::Object {
  synthetic constructor •() → void
    : super core::Object::•()
    ;
  get x() → core::int
    return 0;
}
class C extends self::A {
  field dynamic x = null;
  synthetic constructor •() → void
    : super self::A::•()
    ;
}
class D extends self::B {
  field dynamic x = null;
  synthetic constructor •() → void
    : super self::B::•()
    ;
}
class E extends core::Object implements self::A {
  field dynamic x = null;
  synthetic constructor •() → void
    : super core::Object::•()
    ;
}
class F extends core::Object implements self::B {
  field dynamic x = null;
  synthetic constructor •() → void
    : super core::Object::•()
    ;
}
abstract class _G&Object&B = core::Object with self::B {
}
class G extends self::_G&Object&B {
  field dynamic x = null;
  synthetic constructor •() → void
    : super core::Object::•()
    ;
}
static method main() → dynamic {}
