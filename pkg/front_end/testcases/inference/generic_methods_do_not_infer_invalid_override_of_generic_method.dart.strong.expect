library test;
//
// Problems in library:
//
// pkg/front_end/testcases/inference/generic_methods_do_not_infer_invalid_override_of_generic_method.dart:12:3: Error: Can't infer types for 'm' as the overridden members don't have a combined signature.
// Try adding explicit types.
//   m(x) => x;
//   ^
// pkg/front_end/testcases/inference/generic_methods_do_not_infer_invalid_override_of_generic_method.dart:8:5: Context: This is one of the overridden members.
//   T m<T>(T x) => x;
//     ^
//
// pkg/front_end/testcases/inference/generic_methods_do_not_infer_invalid_override_of_generic_method.dart:12:3: Error: Declared type variables of 'D.m' doesn't match those on overridden method 'C.m'.
//   m(x) => x;
//   ^
// pkg/front_end/testcases/inference/generic_methods_do_not_infer_invalid_override_of_generic_method.dart:8:5: Context: This is the overridden method ('m').
//   T m<T>(T x) => x;
//     ^
//
// pkg/front_end/testcases/inference/generic_methods_do_not_infer_invalid_override_of_generic_method.dart:17:57: Error: Expected 0 type arguments.
//       . /*error:WRONG_NUMBER_OF_TYPE_ARGUMENTS_METHOD*/ m<int>(42);
//                                                         ^
//
import self as self;
import "dart:core" as core;

class C extends core::Object {
  synthetic constructor •() → self::C
    : super core::Object::•()
    ;
  method m<T extends core::Object? = dynamic>(self::C::m::T% x) → self::C::m::T%
    return x;
}
class D extends self::C {
  synthetic constructor •() → self::D
    : super self::C::•()
    ;
  erroneous method m(invalid-type x) → invalid-type
    return x;
}
static method test() → dynamic {
  core::int y = invalid-expression "pkg/front_end/testcases/inference/generic_methods_do_not_infer_invalid_override_of_generic_method.dart:17:57: Error: Expected 0 type arguments.
      . /*error:WRONG_NUMBER_OF_TYPE_ARGUMENTS_METHOD*/ m<int>(42);
                                                        ^" in new self::D::•().{self::D::m}{<inapplicable>}.<core::int>(42){(invalid-type) → invalid-type};
  core::print(y);
}
static method main() → dynamic {}
