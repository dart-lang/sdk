library test;
import self as self;
import "dart:core" as core;
import "dart:async" as asy;

import "dart:async";

class MyFuture<T extends core::Object? = dynamic> extends core::Object implements asy::Future<self::MyFuture::T%> {
  constructor •() → self::MyFuture<self::MyFuture::T%>
    ;
  constructor value([dynamic x = null]) → self::MyFuture<self::MyFuture::T%>
    ;
  method noSuchMethod(core::Invocation invocation) → dynamic
    ;
  method then<S extends core::Object? = dynamic>((self::MyFuture::T%) → FutureOr<self::MyFuture::then::S%>f, {core::Function? onError = null}) → self::MyFuture<self::MyFuture::then::S%>
    ;
  synthetic no-such-method-forwarder method catchError(core::Function onError, {(core::Object) →? core::bool test = #C1}) → asy::Future<self::MyFuture::T%>
    return this.{self::MyFuture::noSuchMethod}(new core::_InvocationMirror::_withType(#catchError, 0, const <core::Type>[], core::List::unmodifiable<dynamic>(<dynamic>[onError]), core::Map::unmodifiable<core::Symbol, dynamic>(<core::Symbol, dynamic>{#test: test}))){(core::Invocation) → dynamic} as{TypeError,ForDynamic} asy::Future<self::MyFuture::T%>;
  synthetic no-such-method-forwarder method whenComplete(() → FutureOr<void>action) → asy::Future<self::MyFuture::T%>
    return this.{self::MyFuture::noSuchMethod}(new core::_InvocationMirror::_withType(#whenComplete, 0, const <core::Type>[], core::List::unmodifiable<dynamic>(<dynamic>[action]), core::Map::unmodifiable<core::Symbol, dynamic>(const <core::Symbol, dynamic>{}))){(core::Invocation) → dynamic} as{TypeError,ForDynamic} asy::Future<self::MyFuture::T%>;
  synthetic no-such-method-forwarder method asStream() → asy::Stream<self::MyFuture::T%>
    return this.{self::MyFuture::noSuchMethod}(new core::_InvocationMirror::_withType(#asStream, 0, const <core::Type>[], const <dynamic>[], core::Map::unmodifiable<core::Symbol, dynamic>(const <core::Symbol, dynamic>{}))){(core::Invocation) → dynamic} as{TypeError,ForDynamic} asy::Stream<self::MyFuture::T%>;
  synthetic no-such-method-forwarder method timeout(core::Duration timeLimit, {covariant-by-class () →? FutureOr<self::MyFuture::T%>onTimeout = #C1}) → asy::Future<self::MyFuture::T%>
    return this.{self::MyFuture::noSuchMethod}(new core::_InvocationMirror::_withType(#timeout, 0, const <core::Type>[], core::List::unmodifiable<dynamic>(<dynamic>[timeLimit]), core::Map::unmodifiable<core::Symbol, dynamic>(<core::Symbol, dynamic>{#onTimeout: onTimeout}))){(core::Invocation) → dynamic} as{TypeError,ForDynamic} asy::Future<self::MyFuture::T%>;
}
static field self::MyFuture<dynamic> f;
static field asy::Future<core::int> t1;
static field asy::Future<core::List<core::int>> t2;
static method g2() → asy::Future<core::List<core::int>> async 
  ;
static method g3() → asy::Future<core::List<core::int>> async 
  ;
static method main() → dynamic
  ;

constants  {
  #C1 = null
}

Extra constant evaluation status:
Evaluated: SymbolLiteral @ org-dartlang-testcase:///future_union_downwards.dart:9:7 -> SymbolConstant(#catchError)
Evaluated: ListLiteral @ org-dartlang-testcase:///future_union_downwards.dart:9:7 -> ListConstant(const <Type>[])
Evaluated: SymbolLiteral @ org-dartlang-testcase:///future_union_downwards.dart:9:7 -> SymbolConstant(#test)
Evaluated: SymbolLiteral @ org-dartlang-testcase:///future_union_downwards.dart:9:7 -> SymbolConstant(#whenComplete)
Evaluated: ListLiteral @ org-dartlang-testcase:///future_union_downwards.dart:9:7 -> ListConstant(const <Type>[])
Evaluated: MapLiteral @ org-dartlang-testcase:///future_union_downwards.dart:9:7 -> MapConstant(const <Symbol, dynamic>{})
Evaluated: SymbolLiteral @ org-dartlang-testcase:///future_union_downwards.dart:9:7 -> SymbolConstant(#asStream)
Evaluated: ListLiteral @ org-dartlang-testcase:///future_union_downwards.dart:9:7 -> ListConstant(const <Type>[])
Evaluated: ListLiteral @ org-dartlang-testcase:///future_union_downwards.dart:9:7 -> ListConstant(const <dynamic>[])
Evaluated: MapLiteral @ org-dartlang-testcase:///future_union_downwards.dart:9:7 -> MapConstant(const <Symbol, dynamic>{})
Evaluated: SymbolLiteral @ org-dartlang-testcase:///future_union_downwards.dart:9:7 -> SymbolConstant(#timeout)
Evaluated: ListLiteral @ org-dartlang-testcase:///future_union_downwards.dart:9:7 -> ListConstant(const <Type>[])
Evaluated: SymbolLiteral @ org-dartlang-testcase:///future_union_downwards.dart:9:7 -> SymbolConstant(#onTimeout)
Extra constant evaluation: evaluated: 46, effectively constant: 13
