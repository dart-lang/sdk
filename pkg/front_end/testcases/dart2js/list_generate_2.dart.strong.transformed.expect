library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;
import "dart:_interceptors" as _in;

static method main() → void {
  core::print( block {
    final synthesized _in::JSArray<core::List<core::int>> _list = _in::JSArray::allocateGrowable<core::List<core::int>>(10);
    for (synthesized core::int* i = 0; i.{core::num::<}(10){(core::num) → core::bool}; i = i.{core::num::+}(1){(core::int*) → core::int*}) {
      synthesized core::int i = i;
      _list.{_in::JSArray::[]=}{Invariant,BoundsSafe}(i, block {
        final synthesized core::int* _length = i;
        final synthesized _in::JSArray<core::int> _list = _in::JSArray::allocateGrowable<core::int>(_length);
        for (synthesized core::int* i = 0; i.{core::num::<}(_length){(core::num) → core::bool}; i = i.{core::num::+}(1){(core::int*) → core::int*}) {
          synthesized core::int i = i;
          _list.{_in::JSArray::[]=}{Invariant,BoundsSafe}(i, i.{core::num::+}(1){(core::num) → core::int}){(core::int, core::int) → void};
        }
      } =>_list){(core::int, core::List<core::int>) → void};
    }
  } =>_list);
}
