library;
import self as self;
import "dart:core" as core;

class _Y<T extends core::Object* = dynamic> extends core::Object /*hasConstConstructor*/  {
  const constructor •() → self::_Y<self::_Y::T*>*
    : super core::Object::•()
    ;
}
class A<T extends core::Object* = dynamic> extends core::Object {
  generic-covariant-impl field self::_Y<self::A::T*>* x;
  constructor •(self::_Y<self::A::T*>* x) → self::A<self::A::T*>*
    ;
}
class B<T extends core::Object* = dynamic> extends self::A<self::B::T*> {
  constructor •() → self::B<self::B::T*>*
    ;
}
static method main() → dynamic
  ;
