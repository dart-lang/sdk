library;
//
// Problems in library:
//
// pkg/front_end/testcases/general_nnbd_opt_out/continue_inference_after_error.dart:12:3: Error: A prefix can't be used as an expression.
//   lib(new C().missing());
//   ^^^
//
// pkg/front_end/testcases/general_nnbd_opt_out/continue_inference_after_error.dart:12:15: Error: The method 'missing' isn't defined for the class 'C'.
//  - 'C' is from 'pkg/front_end/testcases/general_nnbd_opt_out/continue_inference_after_error.dart'.
// Try correcting the name to the name of an existing method, or defining a method named 'missing'.
//   lib(new C().missing());
//               ^^^^^^^
//
import self as self;
import "dart:core" as core;

import "org-dartlang-testcase:///continue_inference_after_error_lib.dart" as lib;

class C extends core::Object {
  synthetic constructor •() → self::C*
    : super core::Object::•()
    ;
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
static method test() → dynamic {
  let final<BottomType> #t1 = invalid-expression "pkg/front_end/testcases/general_nnbd_opt_out/continue_inference_after_error.dart:12:3: Error: A prefix can't be used as an expression.
  lib(new C().missing());
  ^^^" in let final core::Object* #t2 = invalid-expression "pkg/front_end/testcases/general_nnbd_opt_out/continue_inference_after_error.dart:12:15: Error: The method 'missing' isn't defined for the class 'C'.
 - 'C' is from 'pkg/front_end/testcases/general_nnbd_opt_out/continue_inference_after_error.dart'.
Try correcting the name to the name of an existing method, or defining a method named 'missing'.
  lib(new C().missing());
              ^^^^^^^" in null;
}
static method main() → dynamic {}

library /*isNonNullableByDefault*/;
import self as self2;
