library;
//
// Problems in library:
//
// pkg/front_end/testcases/enhanced_parts/conditional_parts.dart:5:6: Error: Expected ';' after this.
// part 'conditional_parts_part2.dart'
//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/enhanced_parts/conditional_parts.dart:6:5: Error: 'if' can't be used as an identifier because it's a keyword.
// Try renaming this to be an identifier that isn't a keyword.
//     if (dart.library.io) 'conditional_parts_part1.dart';
//     ^^
//
// pkg/front_end/testcases/enhanced_parts/conditional_parts.dart:6:21: Error: Expected an identifier, but got '.'.
// Try inserting an identifier before '.'.
//     if (dart.library.io) 'conditional_parts_part1.dart';
//                     ^
//
// pkg/front_end/testcases/enhanced_parts/conditional_parts.dart:6:22: Error: Expected ')' before this.
//     if (dart.library.io) 'conditional_parts_part1.dart';
//                      ^^
//
// pkg/front_end/testcases/enhanced_parts/conditional_parts.dart:6:26: Error: Expected '{' before this.
//     if (dart.library.io) 'conditional_parts_part1.dart';
//                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/enhanced_parts/conditional_parts.dart:6:26: Error: Expected a declaration, but got ''conditional_parts_part1.dart''.
//     if (dart.library.io) 'conditional_parts_part1.dart';
//                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
// pkg/front_end/testcases/enhanced_parts/conditional_parts.dart:6:56: Error: Unexpected token ';'.
//     if (dart.library.io) 'conditional_parts_part1.dart';
//                                                        ^
//
// pkg/front_end/testcases/enhanced_parts/conditional_parts.dart:6:9: Error: 'dart.library' can't be used as a type because 'dart' doesn't refer to an import prefix.
//     if (dart.library.io) 'conditional_parts_part1.dart';
//         ^^^^^^^^^^^^
//
// pkg/front_end/testcases/enhanced_parts/conditional_parts.dart:9:3: Error: Method not found: 'method1'.
//   method1();
//   ^^^^^^^
//
import self as self;

part conditional_parts_part2.dart;
static method if() → dynamic {}
static method test() → dynamic {
  invalid-expression "pkg/front_end/testcases/enhanced_parts/conditional_parts.dart:9:3: Error: Method not found: 'method1'.
  method1();
  ^^^^^^^";
  self::method2();
}
static method /* from org-dartlang-testcase:///conditional_parts_part2.dart */ method2() → void {}
