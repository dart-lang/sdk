// Copyright (c) 2015, the Dart project authors. Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

part of services.completion.dart.sorter.common;

// Auto-generated, please do not edit.

/// A map of <library>.<classname> to an ordered list of method names,
/// field names, getter names, and named constructors.
/// The names are ordered from most relevant to least relevant.
/// Names not listed are considered equally less relevant than those listed.
const Map<String, List<String>> defaultSelectorRelevance = {
  'dart.core.Comparable': [
    'compareTo',
    'compare',
  ],
  'dart.math.Random': [
    'nextInt',
    'nextDouble',
    'nextBool',
  ],
  'dart.core.List': [
    'add',
    'map',
    'length',
    'removeLast',
    'addAll',
    'join',
    'forEach',
    'contains',
    'removeAt',
    'where',
    'last',
    'clear',
    'setRange',
    'sort',
    'insert',
    'remove',
    'sublist',
    'indexOf',
    'isEmpty',
    'any',
    'insertAll',
    'first',
    'removeRange',
    'replaceRange',
    'take',
    'getRange',
    'skip',
    'toList',
    'retainWhere',
    'fillRange',
    'removeWhere',
    'expand',
    'fold',
    'reversed',
    'firstWhere',
    'every',
    'setAll',
    'asMap',
    'isNotEmpty',
    'lastIndexOf',
    'singleWhere',
    'lastWhere',
    'shuffle',
    'takeWhile',
    'iterator',
    'toString',
    'toSet',
    'single',
    'reduce',
    'elementAt',
    'skipWhile',
    'insertRange',
    'filter',
    'push',
    'mappedBy',
    'addLast',
    'some',
    'slice',
    'retainMatching',
    'firstMatching',
    'removeAll',
    'retainAll',
    'removeMatching',
    'min',
    'lastMatching',
    'singleMatching',
    'max',
    'get',
    'toArray',
    'runtimeType',
    'reverse',
    'addd',
    'asByteArray',
  ],
  'dart.core.Iterable': [
    'toList',
    'map',
    'join',
    'toSet',
    'where',
    'forEach',
    'expand',
    'fold',
    'every',
    'any',
    'contains',
    'firstWhere',
    'length',
    'elementAt',
    'skipWhile',
    'reduce',
    'iterator',
    'take',
    'skip',
    'toString',
    'singleWhere',
    'lastWhere',
    'takeWhile',
    'isEmpty',
    'first',
    'single',
    'last',
    'isNotEmpty',
    'addAll',
    'indexOf',
    'add',
    'sort',
    'toArray',
    'mappedBy',
    'filter',
  ],
  'dart.core.Set': [
    'add',
    'contains',
    'remove',
    'addAll',
    'clear',
    'difference',
    'map',
    'containsAll',
    'union',
    'removeWhere',
    'removeAll',
    'intersection',
    'retainAll',
    'retainWhere',
    'forEach',
    'toSet',
    'every',
    'lookup',
    'any',
    'toString',
    'toList',
    'where',
    'length',
    'join',
    'skip',
    'firstWhere',
    'isEmpty',
    'first',
    'iterator',
    'singleWhere',
    'expand',
    'elementAt',
    'fold',
    'reduce',
    'single',
    'lastWhere',
    'isNotEmpty',
    'take',
    'takeWhile',
    'skipWhile',
    'last',
    'findBy',
    'toArray',
    'filter',
  ],
  'dart.collection.Queue': [
    'add',
    'removeFirst',
    'clear',
    'removeLast',
    'remove',
    'addAll',
    'addLast',
    'addFirst',
    'removeWhere',
    'retainWhere',
    'length',
    'toList',
    'where',
    'contains',
    'forEach',
    'map',
    'isNotEmpty',
    'first',
    'isEmpty',
    'fold',
    'skip',
    'any',
    'elementAt',
  ],
  'dart.core.Map': [
    'containsKey',
    'forEach',
    'remove',
    'putIfAbsent',
    'clear',
    'addAll',
    'length',
    'keys',
    'values',
    'containsValue',
    'toString',
    'isNotEmpty',
    'isEmpty',
    'get',
    'getKeys',
    'put',
    'getValues',
    'clone',
    'keySet',
    'hashCode',
    'runtimeType',
  ],
  'dart.core.Iterator': [
    'moveNext',
    'current',
    'next',
    'hasNext',
  ],
  'dart.pkg.collection.equality.Equality': [
    'hash',
    'equals',
    'isValidKey',
  ],
  'dart.pkg.collection.equality.SetEquality': [
    'equals',
    'hash',
  ],
  'dart.pkg.collection.equality.MapEquality': [
    'equals',
    'hash',
  ],
  'dart.pkg.collection.equality.ListEquality': [
    'equals',
    'hash',
  ],
  'dart.pkg.collection.equality.IterableEquality': [
    'hash',
    'equals',
  ],
  'dart.pkg.collection.equality.UnorderedIterableEquality': [
    'hash',
    'equals',
  ],
  'dart.async.StreamSubscription': [
    'cancel',
    'pause',
    'onDone',
    'resume',
    'onError',
    'asFuture',
    'onData',
    'isPaused',
  ],
  'dart.async.StreamController': [
    'add',
    'close',
    'addError',
    'addStream',
    'stream',
    'hasListener',
    'signalError',
    'sink',
    'done',
  ],
  'dart.async.Stream': [
    'listen',
    'transform',
    'pipe',
    'first',
    'toList',
    'forEach',
    'firstWhere',
    'where',
    'join',
    'fold',
    'asyncMap',
    'map',
    'isEmpty',
    'asBroadcastStream',
    'handleError',
    'capture',
    'asyncExpand',
    'take',
    'single',
    'expand',
    'onFile',
    'skip',
    'any',
    'timeout',
    'add',
    'last',
    'runtimeType',
    'isBroadcast',
    'drain',
    'elementAt',
    'skipWhile',
    'distinct',
    'singleWhere',
    'lastWhere',
    'contains',
    'every',
    'takeWhile',
    'emit',
    'onDir',
    'onError',
    'onDone',
    'onData',
    'length',
  ],
  'dart.async.Future': [
    'then',
    'catchError',
    'wait',
    'whenComplete',
    'forEach',
    'asStream',
    'timeout',
    'map',
    'packages',
    'where',
    'firstWhere',
    'chain',
    'transform',
    'doWhile',
    'onError',
    'onResponse',
    'onRequest',
    'handleException',
  ],
  'dart.core.String': [
    'substring',
    'codeUnitAt',
    'startsWith',
    'replaceAll',
    'split',
    'contains',
    'indexOf',
    'toLowerCase',
    'trim',
    'length',
    'endsWith',
    'lastIndexOf',
    'compareTo',
    'isEmpty',
    'toUpperCase',
    'replaceFirst',
    'toString',
    'replaceAllMapped',
    'allMatches',
    'padLeft',
    'codeUnits',
    'hashCode',
    'splitMapJoin',
    'isNotEmpty',
    'runes',
    'charCodeAt',
    'charCodes',
    'trimRight',
    'padRight',
    'concat',
    'equalsIgnoreCase',
    'splitChars',
    'trimLeft',
    'matchAsPrefix',
    'equals',
    'map',
    'toLoweCase',
    'match',
    'slice',
    'getBytes',
    'toCharArray',
    'runtimeType',
    'charAt',
    'valueOf',
  ],
  'dart.core.StringBuffer': [
    'write',
    'toString',
    'writeln',
    'writeCharCode',
    'clear',
    'writeAll',
    'add',
    'addAll',
    'addCharCode',
    'isEmpty',
  ],
  'dart.core.RegExp': [
    'firstMatch',
    'hasMatch',
    'allMatches',
    'matchAsPrefix',
    'pattern',
    'stringMatch',
    'toString',
    'exec',
  ],
  'dart.core.double': [
    'parse',
    'toInt',
    'compareTo',
    'floor',
    'toString',
    'abs',
    'round',
    'toStringAsPrecision',
    'toDouble',
    'floorToDouble',
    'ceil',
    'truncate',
    'toStringAsFixed',
    'roundToDouble',
    'clamp',
    'isNaN',
    'isFinite',
    'toStringAsExponential',
    'ceilToDouble',
    'truncateToDouble',
    'isNan',
    'isNegative',
    'isInfinite',
    'hashCode',
  ],
  'dart.core.Type': [
    'toString',
    'hashCode',
    'runtimeType',
  ],
  'dart.mirrors.InstanceMirror': [
    'reflectee',
    'getField',
    'type',
    'invoke',
    'setField',
    'delegate',
    'function',
    'then',
    'apply',
    'hasReflectee',
  ],
  'dart.collection.IterableBase': [
    'iterableToFullString',
  ],
  'dart.pkg.collection.utils.Pair': [
    'last',
  ],
  'dart.collection.Maps': [
    'mapToString',
    'length',
    'putIfAbsent',
    'clear',
    'containsKey',
    'getValues',
    'forEach',
    'containsValue',
    'isNotEmpty',
    'isEmpty',
  ],
  'dart.collection.SplayTreeSet': [
    'add',
    'addAll',
    'where',
  ],
  'dart.core.StackTrace': [
    'toString',
    'frames',
  ],
  'dart.convert.JsonCodec': [
    'encode',
    'decode',
    'fuse',
  ],
  'dart.mirrors.MirrorSystem': [
    'getName',
    'libraries',
    'findLibrary',
    'isolate',
    'dynamicType',
    'getSymbol',
    'voidType',
  ],
  'dart.mirrors.ClassMirror': [
    'newInstance',
    'isSubtypeOf',
    'reflectedType',
    'qualifiedName',
    'metadata',
    'getField',
    'owner',
    'declarations',
    'superclass',
    'simpleName',
    'isSubclassOf',
    'invoke',
    'instanceMembers',
    'mixin',
    'isAbstract',
    'originalDeclaration',
    'typeVariables',
    'setField',
    'isOriginalDeclaration',
    'superinterfaces',
    'isAssignableTo',
    'owners',
  ],
  'dart.io.Process': [
    'start',
    'runSync',
    'run',
    'kill',
    'exitCode',
  ],
  'dart.core.int': [
    'parse',
    'toDouble',
    'toString',
    'toInt',
    'compareTo',
    'toRadixString',
    'abs',
    'remainder',
    'toUnsigned',
    'toSigned',
    'clamp',
    'round',
    'floor',
    'substr',
    'ceil',
    'isEven',
    'id',
    'append',
    'truncate',
    'hashCode',
    'toStringAsFixed',
    'ceilToDouble',
    'roundToDouble',
    'floorToDouble',
    'truncateToDouble',
    'isNegative',
    'length',
    'isNaN',
    'isInfinite',
    'runtimeType',
    'bitLength',
  ],
  'dart.core.Sink': [
    'add',
    'close',
  ],
  'dart.async.EventSink': [
    'close',
    'add',
    'addError',
  ],
  'dart.async.Completer': [
    'complete',
    'completeError',
    'future',
    'isCompleted',
    'completeException',
    'then',
  ],
  'dart.io.FileStat': [
    'mode',
    'stat',
    'type',
    'statSync',
    'changed',
    'modified',
    'size',
  ],
  'dart.io.Link': [
    'existsSync',
    'createSync',
    'resolveSymbolicLinksSync',
    'exists',
    'delete',
    'targetSync',
    'deleteSync',
    'target',
    'create',
    'updateSync',
  ],
  'dart.io.FileSystemEntityType': [
    'toString',
    'NOT_FOUND',
    'DIRECTORY',
    'FILE',
  ],
  'dart.io.Directory': [
    'existsSync',
    'list',
    'listSync',
    'watch',
    'path',
    'exists',
    'createSync',
    'create',
    'deleteSync',
    'delete',
    'createTemp',
    'createTempSync',
    'renameSync',
    'parent',
    'absolute',
    'stat',
    'current',
    'createRecursivelySync',
    'resolveSymbolicLinksSync',
    'rename',
    'statSync',
  ],
  'dart.io.File': [
    'existsSync',
    'readAsStringSync',
    'openRead',
    'writeAsStringSync',
    'readAsString',
    'openWrite',
    'lastModifiedSync',
    'exists',
    'resolveSymbolicLinksSync',
    'writeAsString',
    'path',
    'resolveSymbolicLinks',
    'statSync',
    'deleteSync',
    'createSync',
    'delete',
    'openSync',
    'parent',
    'readAsBytesSync',
    'copy',
    'open',
    'absolute',
    'fullPathSync',
    'length',
    'writeAsBytesSync',
    'lastModified',
    'writeAsBytes',
    'readAsLinesSync',
    'fullPath',
    'readAsBytes',
    'copySync',
    'create',
    'lengthSync',
    'readAsLines',
    'isFileSync',
    'isFile',
    'rename',
    'openOutputStream',
    'openInputStream',
    'stat',
    'renameSync',
    'watch',
    'directorySync',
    'isAbsolute',
    'directory',
  ],
  'dart.io.Stdout': [
    'writeln',
    'close',
    'write',
    'flush',
    'addStream',
    'writeString',
    'add',
    'writeCharCode',
    'addString',
  ],
  'dart.io.IOSink': [
    'write',
    'close',
    'writeln',
    'flush',
    'add',
    'addStream',
    'writeAll',
    'writeCharCode',
    'encoding',
    'addError',
    'done',
  ],
  'dart.mirrors.LibraryMirror': [
    'uri',
    'getField',
    'declarations',
    'invoke',
    'topLevelMembers',
    'setField',
    'classes',
    'first',
  ],
  'dart.core.Match': [
    'group',
    'end',
    'start',
    'groups',
    'toString',
  ],
  'dart.isolate.SendPort': [
    'send',
    'call',
    'hashCode',
  ],
  'dart.core.DateTime': [
    'parse',
    'toIso8601String',
    'millisecondsSinceEpoch',
    'difference',
    'toUtc',
    'add',
    'day',
    'year',
    'month',
    'isAfter',
    'toString',
    'compareTo',
    'subtract',
    'isBefore',
    'millisecond',
    'toLocal',
    'timeZoneName',
    'timeZoneOffset',
    'isUtc',
    'weekday',
    'isAtSameMomentAs',
    'second',
    'hour',
    'minute',
    'hashCode',
    'now',
    'runtimeType',
  ],
  'dart.core.Duration': [
    'inMilliseconds',
    'toString',
    'inSeconds',
    'inMicroseconds',
    'inHours',
    'inMinutes',
    'inDays',
    'isNegative',
    'compareTo',
  ],
  'dart.core.Uri': [
    'parse',
    'toString',
    'toFilePath',
    'path',
    'resolve',
    'decodeComponent',
    'encodeFull',
    'decodeQueryComponent',
    'scheme',
    'encodeComponent',
    'resolveUri',
    'encodeQueryComponent',
    'query',
    'decodeFull',
    'pathSegments',
    'queryParameters',
    'origin',
    'authority',
    'splitQueryString',
    'replace',
    'host',
    'isAbsolute',
    'port',
    'fragment',
    'hasAuthority',
    'userInfo',
    'parseIPv4Address',
    'parseIPv6Address',
    'hasQuery',
    'endsWith',
    'startsWith',
  ],
  'dart.typed_data.Uint32List': [
    'sublist',
    'setAll',
    'fillRange',
    'setRange',
    'removeRange',
    'removeLast',
    'clear',
    'addAll',
    'add',
  ],
  'dart.typed_data.TypedData': [
    'buffer',
  ],
  'dart.io.BytesBuilder': [
    'takeBytes',
    'addByte',
    'add',
    'clear',
    'toBytes',
  ],
  'dart.isolate.ReceivePort': [
    'close',
    'transform',
    'listen',
    'receive',
    'toSendPort',
    'takeWhile',
    'sendPort',
    'asBroadcastStream',
  ],
  'dart.convert.Encoding': [
    'decode',
    'encode',
    'getByName',
    'decodeStream',
    'name',
  ],
  'dart.convert.Utf8Codec': [
    'encode',
    'decode',
    'decoder',
    'decodeStream',
  ],
  'dart.core.Stopwatch': [
    'start',
    'stop',
    'reset',
    'elapsedMicroseconds',
    'elapsedMilliseconds',
    'elapsed',
    'elapsedInMs',
  ],
  'dart.async.ZoneDelegate': [
    'handleUncaughtError',
    'registerUnaryCallback',
    'registerCallback',
    'registerBinaryCallback',
    'runBinary',
    'errorCallback',
    'scheduleMicrotask',
    'run',
    'createTimer',
  ],
  'dart.async.Zone': [
    'handleUncaughtError',
    'run',
    'fork',
    'inSameErrorZone',
    'runGuarded',
    'bindUnaryCallback',
    'bindBinaryCallback',
    'runUnary',
    'bindCallback',
    'scheduleMicrotask',
    'createTimer',
  ],
  'dart.dom.html.BodyElement': [
    'innerHtml',
    'children',
    'nodes',
    'append',
    'style',
    'onContextMenu',
    'onMouseDown',
    'onMouseWheel',
    'scrollTop',
    'onMouseUp',
    'onClick',
    'scrollLeft',
    'clientHeight',
    'clientWidth',
    'onBlur',
    'onFocus',
    'onDoubleClick',
    'scrollHeight',
    'onMouseMove',
    'elements',
    'createFragment',
    'classes',
    'ownerDocument',
    'query',
    'onKeyDown',
    'querySelector',
    'offsetWidth',
    'scrollWidth',
    'offsetHeight',
    'setInnerHtml',
    'childNodes',
    'requestFullscreen',
    'offsetTop',
  ],
  'dart.dom.html.Location': [
    'hash',
    'search',
    'reload',
    'pathname',
    'toString',
    'href',
    'host',
    'assign',
    'replace',
    'protocol',
    'hostname',
    'port',
    'origin',
  ],
  'dart.convert.HtmlEscape': [
    'convert',
  ],
  'dart.dom.html.Window': [
    'postMessage',
    'btoa',
    'lookupPort',
    'document',
    'requestAnimationFrame',
    'alert',
    'navigator',
    'devicePixelRatio',
    'pageYOffset',
    'pageXOffset',
    'onAnimationEnd',
    'innerWidth',
    'onResize',
    'getSelection',
    'cancelAnimationFrame',
    'animationEndEvent',
    'innerHeight',
    'registerPort',
    'dispatchEvent',
    'onAnimationStart',
    'onMouseUp',
    'onMouseMove',
    'open',
    'screen',
    'indexedDB',
    'setTimeout',
    'scrollX',
    'scrollY',
    'onScroll',
    'openDatabase',
    'confirm',
    'getContainer',
    'location',
    'onKeyUp',
    'atob',
    'scrollTo',
    'localStorage',
    'scrollBy',
    'setInterval',
    'setImmediate',
    'requestLayoutFrame',
    'requestFileSystem',
    'onHashChange',
    'close',
    'console',
    'onError',
    'onMessage',
    'animationFrame',
  ],
  'dart.core.Function': [
    'apply',
    'toString',
    'call',
    'bind',
  ],
  'dart.async.Timer': [
    'cancel',
    'run',
  ],
  'dart.dom.html.HeadElement': [
    'append',
    'querySelector',
    'query',
    'children',
    'style',
    'elements',
    'querySelectorAll',
    'nodes',
    'id',
    'insertBefore',
    'text',
  ],
  'dart.dom.html.ElementStream': [
    'listen',
    'where',
    'first',
    'matches',
    'forEach',
    'map',
  ],
  'dart.dom.html.Element': [
    'query',
    'onClick',
    'innerHtml',
    'style',
    'querySelector',
    'nodes',
    'children',
    'remove',
    'append',
    'querySelectorAll',
    'classes',
    'attributes',
    'setInnerHtml',
    'getComputedStyle',
    'onChange',
    'parent',
    'matches',
    'getBoundingClientRect',
    'focus',
    'dispatchEvent',
    'addEventListener',
    'insertAllBefore',
    'clone',
    'getAttribute',
    'blur',
    'createShadowRoot',
    'contains',
    'text',
    'setAttribute',
    'insertAdjacentElement',
    'appendText',
    'scrollIntoView',
    'shadowRoot',
    'getNamespacedAttributes',
    'removeEventListener',
    'insertBefore',
    'appendHtml',
    'click',
    'offsetWidth',
    'insertAdjacentHtml',
    'insertAdjacentText',
    'getClientRects',
    'getElementsByClassName',
    'replaceWith',
    'scrollByLines',
    'scrollByPages',
    'hasChildNodes',
    'requestFullscreen',
    'requestPointerLock',
    'queryAll',
    'setAttributeNS',
    'getAttributeNS',
    'dataset',
    'offsetHeight',
    'on',
    'createFragment',
    'offsetTo',
    'getDestinationInsertionPoints',
    'matchesWithAncestors',
    'attributeChanged',
    'onMouseDown',
    'nextElementSibling',
    'getRegionFlowRanges',
    'onContextMenu',
    'animate',
    'onTouchStart',
    'scrollTop',
    'offsetTop',
    'onTouchMove',
    'onTouchEnd',
    'onMouseWheel',
    'clientWidth',
    'scrollLeft',
    'clientHeight',
    'isTagSupported',
    'parentNode',
    'onMouseUp',
    'bind',
    'onKeyDown',
    'ownerDocument',
    'unbind',
    'unbindAll',
    'init',
    'createInstance',
    'render',
    'update',
    'onKeyUp',
    'onMouseMove',
    'xtag',
    'offsetLeft',
    'tabIndex',
    'client',
    'requestFullScreen',
    'getInputContext',
    'borderEdge',
    'clearModel',
    'id',
    'disabled',
    'value',
    'getContext',
    'lastChild',
    'firstChild',
    'nextNode',
    'innerHTML',
    'onMouseEnter',
    'onMouseLeave',
    'contentEdge',
    'elements',
    'matchesSelector',
    'webkitRequestPointerLock',
    'tagName',
    'childNodes',
    'webkitRequestFullscreen',
    'webkitRequestFullScreen',
    'marginEdge',
    'paddingEdge',
    'outerHtml',
    'onMouseOver',
    'onMouseOut',
    'onDragEnd',
    'boolean',
    'scrollHeight',
    'hidden',
    'onDragStart',
    'onDoubleClick',
    'nodeType',
    'hashCode',
    'onDrag',
    'onInput',
    'selectionStart',
    'selectionEnd',
    'onDrop',
    'onDragLeave',
    'hideOrShowNavigation',
    'onDragOver',
    'model',
    'scrollEvent',
    'onDragEnter',
    'previousElementSibling',
    'className',
    'namespaceUri',
    'onSubmit',
    'selection',
    'setItemSelected',
    'runtimeType',
    'apply',
    'createBinding',
    'values',
    'onBlur',
    'onTouchCancel',
    'show',
    'insertAdjacentHTML',
    'nodeName',
    'selected',
    'contentEditable',
    'localName',
    'number',
    'draggable',
    'src',
    'addText',
    'addHTML',
    'select',
    'clear',
    'str',
    'clearSelection',
  ],
  'dart.dom.html.HtmlElement': [
    'querySelector',
    'query',
    'append',
    'classes',
    'style',
    'getComputedStyle',
    'remove',
    'getBoundingClientRect',
    'querySelectorAll',
    'clone',
    'attributes',
    'focus',
    'tabIndex',
    'onClick',
    'parent',
    'onMouseLeave',
    'replaceWith',
    'onContextMenu',
    'onMouseEnter',
    'onKeyDown',
    'blur',
    'setInnerText',
    'scrollTop',
    'appendHtml',
    'dataset',
    'lastChild',
    'onSelectStart',
    'onDrop',
    'onDragOver',
    'onDragLeave',
    'onDragEnter',
    'onDragEnd',
    'onDragStart',
    'onDrag',
    'onDoubleClick',
    'children',
    'onScroll',
    'getAttribute',
    'nodes',
    'outerHtml',
    'click',
    'createShadowRoot',
  ],
  'dart.dom.html.ElementList': [
    'forEach',
    'length',
    'contains',
    'last',
    'style',
    'addAll',
    'first',
    'where',
    'onMouseLeave',
    'onMouseEnter',
    'toList',
    'some',
    'onClick',
    'map',
    'classes',
    'indexOf',
  ],
  'dart.dom.html.HtmlDocument': [
    'query',
    'querySelectorAll',
    'querySelector',
    'queryAll',
    'createElement',
    'body',
    'title',
    'createElementUpgrader',
    'documentElement',
    'timeline',
    'onKeyDown',
    'getElementById',
    'registerElement',
    'onClick',
    'addEventListener',
    'onMouseUp',
    'onMouseMove',
    'activeElement',
    'createElementNS',
    'createDocumentFragment',
    'createRange',
    'adoptNode',
    'getElementsByTagName',
    'onKeyUp',
    'elementFromPoint',
    'contains',
    'getElementsByName',
    'head',
    'exitFullscreen',
    'onMouseWheel',
    'register',
  ],
  'dart.collection.LinkedHashMap': [
    'containsKey',
    'forEach',
    'remove',
    'putIfAbsent',
    'keys',
    'length',
    'clear',
    'values',
    'isNotEmpty',
  ],
  'dart.dom.html.Navigator': [
    'userAgent',
    'language',
    'appVersion',
    'appName',
    'geolocation',
    'vendor',
    'appCodeName',
    'dartEnabled',
    'getUserMedia',
    'onLine',
    'platform',
    'storageQuota',
  ],
  'dart.dom.html.CssStyleDeclaration': [
    'display',
    'width',
    'height',
    'top',
    'setProperty',
    'left',
    'position',
    'zIndex',
    'cssText',
    'right',
    'maxHeight',
    'visibility',
    'bottom',
    'background',
    'removeProperty',
    'cursor',
    'overflow',
    'getPropertyValue',
    'opacity',
    'backgroundColor',
    'float',
    'transform',
    'padding',
    'border',
    'borderRadius',
    'paddingBottom',
    'transition',
    'paddingTop',
    'overflowY',
    'color',
    'outline',
    'backgroundImage',
    'transformStyle',
    'pointerEvents',
    'marginLeft',
    'textAlign',
    'backgroundPosition',
    'boxSizing',
    'paddingLeft',
    'backgroundSize',
    'margin',
    'fontFamily',
    'userSelect',
    'fontSize',
    'lineHeight',
    'willChange',
    'fontWeight',
    'getProperty',
    'marginRight',
    'whiteSpace',
    'overflowX',
    'textDecoration',
    'perspective',
    'perspectiveOrigin',
    'appearance',
    'borderLeftWidth',
    'paddingRight',
    'borderColor',
    'borderBottomWidth',
    'borderTopWidth',
    'webkitOverflowScrolling',
    'borderRightWidth',
    'marginBottom',
    'transitionProperty',
    'transitionTimingFunction',
    'transitionDuration',
    'animation',
    'animationDelay',
    'animationFillMode',
    'animationDirection',
    'animationIterationCount',
    'animationTimingFunction',
    'animationDuration',
    'animationName',
    'verticalAlign',
    'marginTop',
    'boxShadow',
    'getPropertyPriority',
    'textStrokeColor',
    'borderBottom',
    'font',
    'supportsProperty',
    'textShadow',
    'maxWidth',
    'minWidth',
    'minHeight',
    'outlineColor',
    'filter',
    'borderWidth',
    'animationPlayState',
    'fontStyle',
    'borderRight',
    'borderLeft',
    'borderTop',
  ],
  'dart.io.ProcessResult': [
    'stdout',
    'exitCode',
  ],
  'dart.io.FileSystemEvent': [
    'path',
    'isDirectory',
    'type',
    'MODIFY',
    'CREATE',
    'DELETE',
  ],
  'dart.collection.HashSet': [
    'add',
    'contains',
    'remove',
    'clear',
    'addAll',
    'retainAll',
    'length',
    'isEmpty',
    'toList',
    'removeAll',
    'any',
    'forEach',
    'map',
  ],
  'dart.collection.HashMap': [
    'remove',
    'containsKey',
    'forEach',
    'clear',
    'keys',
    'putIfAbsent',
    'addAll',
    'values',
  ],
  'dart.io.FileSystemEntity': [
    'isDirectorySync',
    'path',
    'typeSync',
    'existsSync',
    'isDirectory',
    'identicalSync',
    'isFileSync',
    'type',
    'isFile',
    'statSync',
    'deleteSync',
    'isLinkSync',
    'parentOf',
    'renameSync',
    'isLink',
    'readAsStringSync',
    'identical',
    'rename',
    'toString',
    'delete',
    'exists',
    'parent',
    'stat',
  ],
  'dart.io.OSError': [
    'errorCode',
    'toString',
  ],
  'dart.async.StreamTransformer': [
    'bind',
  ],
  'dart.core.Runes': [
    'toList',
    'any',
    'elementAt',
    'iterator',
    'single',
    'first',
    'forEach',
    'last',
  ],
  'dart.core.Object': [
    'toString',
    'toJson',
    'hashCode',
    'discardListChages',
    'reverse',
    'map',
    'lightDom',
    'getName',
    'where',
    'add',
    'containsKey',
    'format',
    'setTable',
    'getClass',
    'getNamespace',
    'getId',
    'getCell',
    'getSize',
    'setNamespace',
    'equals',
    'setColumn',
    'getColumnName',
    'getForeignTableName',
    'setDatabase',
    'setAttribute',
    'setId',
    'getChild',
    'body',
    'setPrevious',
    'getIndex',
    'getParent',
    'getChildAt',
    'getChildCount',
    'getValue',
    'getRoot',
    'POST',
    'GET',
    'getPackage',
    'setSchema',
    'clone',
    'getType',
    'then',
    'isInheritance',
    'isVisible',
    'getDartName',
    'getPlatform',
    'setPosition',
    'setPackage',
    'requiresTransactionInPostgres',
    'setAppData',
    'getSchema',
    'getBuildProperty',
    'getPrevious',
    'getTerminal',
    'n',
    'replaceWith',
    'setChild',
    'setPlatform',
    'run',
    'removeItem',
    'getAllItems',
    'bytes',
    'compareTo',
    'getAttribute',
    'setPreviousIndex',
    'isEmpty',
    'getEdgeAt',
    'isVertex',
    'writeExternal',
    'isEdge',
    'getEdgeCount',
    'isConnectable',
    'setValue',
    'isCollapsed',
    'getStyles',
    'setRoot',
    'getStyle',
    'getGeometry',
    'noSuchMethod',
    'contains',
    'elementAt',
    'e',
  ],
  'dart.core.StringSink': [
    'write',
    'writeln',
    'writeCharCode',
    'toString',
    'writeAll',
  ],
  'dart.io.Stdin': [
    'pipe',
    'readLineSync',
    'transform',
    'listen',
  ],
  'dart.io.HttpServer': [
    'bind',
    'listen',
    'close',
    'connectionsInfo',
    'bindSecure',
    'address',
    'port',
    'idleTimeout',
    'serverHeader',
    'autoCompress',
    'asBroadcastStream',
    'transform',
    'addRequestHandler',
    'listenOn',
    'on',
  ],
  'dart.io.HttpResponse': [
    'close',
    'write',
    'statusCode',
    'headers',
    'add',
    'done',
    'redirect',
    'addStream',
    'detachSocket',
    'reasonPhrase',
    'writeln',
    'addError',
    'writeCharCode',
    'writeAll',
    'flush',
    'toString',
    'when',
    'cookies',
    'contentLength',
    'addString',
    'getLogs',
    'listen',
    'persistentConnection',
    'deadline',
  ],
  'dart.io.HttpRequest': [
    'listen',
    'uri',
    'session',
    'drain',
    'transform',
    'response',
    'toString',
    'cookies',
    'method',
    'fold',
    'connectionInfo',
    'pipe',
    'asBroadcastStream',
    'toList',
    'timeout',
    'takeWhile',
    'take',
    'skipWhile',
    'singleWhere',
    'map',
    'lastWhere',
    'join',
    'handleError',
    'skip',
    'firstWhere',
    'expand',
    'every',
    'elementAt',
    'distinct',
    'asyncMap',
    'asyncExpand',
    'any',
    'toSet',
    'contains',
    'where',
    'reduce',
    'forEach',
    'headers',
    'path',
  ],
  'dart.collection.SplayTreeMap': [
    'forEach',
    'containsKey',
    'remove',
    'keys',
    'values',
    'firstKeyAfter',
    'lastKeyBefore',
    'clear',
    'length',
  ],
  'dart.io.HttpClient': [
    'post',
    'getUrl',
    'openUrl',
    'close',
    'postUrl',
    'get',
    'open',
    'addCredentials',
    'patchUrl',
    'shutdown',
    'put',
    'delete',
    'addProxyCredentials',
    'findProxyFromEnvironment',
  ],
  'dart.io.HttpClientRequest': [
    'close',
    'add',
    'write',
    'addStream',
    'cookies',
  ],
  'dart.io.Platform': [
    'isWindows',
    'script',
    'environment',
    'operatingSystem',
    'pathSeparator',
  ],
  'dart.collection.LinkedHashSet': [
    'add',
    'map',
    'contains',
    'toList',
    'addAll',
    'remove',
  ],
  'dart.io.RandomAccessFile': [
    'lengthSync',
    'readIntoSync',
    'close',
    'closeSync',
    'writeStringSync',
    'writeString',
    'writeFromSync',
    'length',
    'readInto',
    'read',
    'readSync',
    'writeFrom',
    'readListSync',
    'flushSync',
    'positionSync',
    'setPosition',
    'writeListSync',
    'setPositionSync',
    'unlock',
    'lock',
    'unlockSync',
    'readList',
    'lockSync',
    'readByteSync',
    'position',
    'writeList',
    'writeByteSync',
  ],
  'dart.core.num': [
    'round',
    'toDouble',
    'toInt',
    'floor',
    'abs',
    'toString',
    'parse',
    'ceil',
    'toStringAsFixed',
    'isNaN',
    'compareTo',
    'roundToDouble',
    'remainder',
    'hashCode',
    'clamp',
    'isInfinite',
    'isNegative',
    'truncate',
    'toStringAsPrecision',
    'toStringAsExponential',
    'isFinite',
    'truncateToDouble',
    'toRadixString',
  ],
  'dart.dom.html.HttpRequest': [
    'send',
    'open',
    'getString',
    'abort',
    'setRequestHeader',
    'request',
    'getAllResponseHeaders',
    'overrideMimeType',
    'requestCrossOrigin',
    'getResponseHeader',
    'postFormData',
    'onLoadEnd',
    'onError',
    'onLoad',
    'DONE',
    'withCredentials',
    'onReadyStateChange',
    'onLoadStart',
  ],
  'dart.dom.html.Event': [
    'preventDefault',
    'toString',
    'stopImmediatePropagation',
    'stopPropagation',
    'target',
    'currentTarget',
  ],
  'dart.dom.html.FileReader': [
    'readAsArrayBuffer',
    'readAsDataUrl',
    'readAsText',
    'onError',
    'onLoadEnd',
    'result',
  ],
  'dart.core.Pattern': [
    'allMatches',
    'matchAsPrefix',
    'toString',
    'firstMatch',
    'pattern',
    'codeUnitAt',
  ],
  'dart.io.ContentType': [
    'parse',
    'toString',
    'charset',
    'mimeType',
    'value',
    'parameters',
    'subType',
    'primaryType',
  ],
  'dart.io.HttpHeaders': [
    'set',
    'contentType',
    'ifModifiedSince',
    'value',
    'add',
    'host',
    'forEach',
    'date',
    'removeAll',
    'clear',
    'remove',
    'noFolding',
    'contentLength',
    'port',
    'expires',
    'chunkedTransferEncoding',
    'persistentConnection',
    'toString',
    'CONTENT_TYPE',
    'data',
  ],
  'dart.typed_data.Uint8List': [
    'setRange',
    'sublist',
    'fillRange',
    'setAll',
    'length',
    'buffer',
    'toString',
    'toList',
    'lastIndexOf',
    'indexOf',
    'join',
    'removeRange',
    'removeLast',
    'clear',
    'addAll',
    'add',
  ],
  'dart.async.StreamSink': [
    'close',
    'addStream',
    'add',
    'addError',
  ],
  'dart.typed_data.ByteData': [
    'getUint32',
    'setUint32',
    'getUint8',
    'setUint64',
    'getInt32',
    'getUint16',
    'getUint64',
    'setUint16',
    'getInt16',
    'setInt64',
    'setInt32',
    'setInt16',
    'setFloat64',
    'getInt64',
    'setInt8',
    'getFloat64',
    'getFloat32',
    'setFloat32',
    'getInt8',
    'setUint8',
  ],
  'dart.io.HttpClientResponse': [
    'listen',
    'toList',
    'transform',
    'drain',
    'fold',
    'pipe',
    'detachSocket',
  ],
  'dart.core.BidirectionalIterator': [
    'moveNext',
    'movePrevious',
  ],
  'dart.mirrors.ClosureMirror': [
    'invoke',
    'apply',
    'function',
  ],
  'dart.typed_data.Int32x4': [
    'x',
    'signMask',
    'select',
  ],
  'dart.js.JsObject': [
    'callMethod',
    'hasProperty',
    'toString',
    'deleteProperty',
    'instanceof',
  ],
  'dart.dom.html.Node': [
    'remove',
    'ELEMENT_NODE',
    'insertBefore',
    'replaceWith',
    'insertAllBefore',
    'querySelector',
    'localName',
    'text',
    'append',
    'setMenubarOrientation',
    'getElementsByTagName',
    'getElementsByClassName',
    'nodes',
    'parentNode',
    'getElementById',
    'firstChild',
    'parent',
    'contains',
    'tagName',
    'value',
    'toString',
    'name',
    'querySelectorAll',
    'clone',
    'attributes',
    'nextNode',
    'nodeType',
    'click',
    'bind',
    'outerHtml',
    'dispatchEvent',
    'on',
    'childNodes',
  ],
  'dart.core.RuneIterator': [
    'moveNext',
    'reset',
  ],
  'dart.mirrors.DeclarationMirror': [
    'isPrivate',
    'simpleName',
    'metadata',
    'isSubclassOf',
    'qualifiedName',
    'parameters',
    'invoke',
  ],
  'dart.dom.html.History': [
    'pushState',
    'back',
    'replaceState',
    'length',
  ],
  'dart.dom.html.CssClassSet': [
    'add',
    'remove',
    'toggle',
    'clear',
    'contains',
    'addAll',
    'removeAll',
    'toString',
    'firstWhere',
    'first',
    'toggleAll',
    'length',
    'containsAll',
  ],
  'dart.dom.html.Document': [
    'querySelector',
    'querySelectorAll',
    'documentElement',
    'createElement',
    'title',
    'body',
    'removeEventListener',
    'addEventListener',
    'getElementsByTagName',
    'createElementNS',
    'query',
    'window',
    'queryAll',
  ],
  'dart.mirrors.IsolateMirror': [
    'rootLibrary',
  ],
  'dart.mirrors.ObjectMirror': [
    'invoke',
    'getField',
    'setField',
  ],
  'dart.dom.html.DivElement': [
    'append',
    'classes',
    'style',
    'setInnerHtml',
    'remove',
    'querySelector',
    'id',
    'getComputedStyle',
    'appendText',
    'text',
    'querySelectorAll',
    'onDragEnd',
    'onDrag',
    'onDragStart',
    'draggable',
    'innerHtml',
    'insertAdjacentElement',
    'appendHtml',
    'className',
    'children',
    'focus',
    'query',
    'nodes',
    'createShadowRoot',
    'clone',
    'attributes',
    'queryAll',
    'click',
    'onMouseDown',
    'onClick',
    'hidden',
    'addEventListener',
    'onMouseMove',
    'scrollIntoView',
    'onKeyDown',
    'title',
    'getBoundingClientRect',
    'onMouseUp',
    'dispatchEvent',
    'insertAdjacentText',
    'contentEditable',
    'scrollTop',
    'scrollByLines',
    'bind',
    'insertBefore',
    'xtag',
    'insertAdjacentHtml',
    'matches',
    'setAttribute',
    'on',
    'onKeyUp',
    'getElementsByClassName',
  ],
  'dart.dom.html.NodeValidatorBuilder': [
    'allowNavigation',
    'allowElement',
    'allowHtml5',
    'allowSvg',
    'allowInlineStyles',
    'allowTextElements',
    'allowTemplating',
    'allowCustomElement',
    'allowTagExtension',
    'allowImages',
  ],
  'dart.dom.html.Console': [
    'timeEnd',
    'time',
    'timeStamp',
    'warn',
    'log',
    'error',
    'groupEnd',
    'info',
    'debug',
    'groupCollapsed',
    'group',
    'dir',
  ],
  'dart.dom.html.ElementUpgrader': [
    'upgrade',
  ],
  'dart.async.StreamIterator': [
    'moveNext',
    'cancel',
  ],
  'dart.io.SystemEncoding': [
    'decode',
  ],
  'dart.collection.UnmodifiableListView': [
    'where',
    'contains',
    'any',
    'length',
    'join',
    'firstWhere',
  ],
  'dart.core.Error': [
    'safeToString',
    'toString',
  ],
  'dart.convert.Utf8Encoder': [
    'bind',
    'convert',
    'startChunkedConversion',
  ],
  'dart.dom.html.DomImplementation': [
    'createHtmlDocument',
  ],
  'dart.dom.html.DocumentFragment': [
    'querySelectorAll',
    'append',
    'clone',
    'nodes',
    'children',
    'setInnerHtml',
    'querySelector',
    'queryAll',
    'query',
    'remove',
    'ownerDocument',
  ],
  'dart.dom.html.ShadowRoot': [
    'querySelector',
    'querySelectorAll',
    'host',
    'children',
    'append',
    'contains',
    'query',
    'activeElement',
    'supported',
    'nodes',
    'firstChild',
    'getElementsByTagName',
    'text',
    'innerHtml',
    'olderShadowRoot',
  ],
  'dart.mirrors.TypeMirror': [
    'qualifiedName',
    'isSubtypeOf',
    'reflectedType',
    'newInstance',
    'isAssignableTo',
    'simpleName',
    'typeArguments',
    'originalDeclaration',
    'toString',
    'referent',
    'hasReflectedType',
    'isPrivate',
    'typeVariables',
    'owner',
    'invoke',
    'isOriginalDeclaration',
  ],
  'dart.io.ServerSocket': [
    'bind',
    'close',
    'listen',
  ],
  'dart.dom.html.PerformanceNavigation': [
    'type',
    'redirectCount',
  ],
  'dart.dom.html.Performance': [
    'now',
    'timing',
    'navigation',
  ],
  'dart.dom.html.PerformanceTiming': [
    'navigationStart',
  ],
  'dart.typed_data.ByteBuffer': [
    'asUint8List',
    'asUint32List',
    'asInt32List',
    'asByteData',
    'asFloat64x2List',
    'asInt32x4List',
    'asFloat32x4List',
    'asFloat64List',
    'asFloat32List',
    'asUint64List',
    'asInt64List',
    'asUint16List',
    'asInt16List',
    'asUint8ClampedList',
    'asInt8List',
  ],
  'dart.io.WebSocket': [
    'add',
    'listen',
    'close',
    'connect',
    'where',
    'map',
    'send',
  ],
  'dart.convert.JsonEncoder': [
    'convert',
    'startChunkedConversion',
  ],
  'dart.convert.JsonDecoder': [
    'convert',
    'startChunkedConversion',
  ],
  'dart.core.bool': [
    'toString',
    'should',
    'hashCode',
    'isAssignableFrom',
    'parse',
    'containsKey',
  ],
  'dart.core.FormatException': [
    'toString',
  ],
  'dart.dom.html.WindowBase': [
    'postMessage',
    'navigator',
    'close',
    'alert',
  ],
  'dart.dom.html.ButtonElement': [
    'text',
    'onClick',
    'classes',
    'attributes',
    'style',
    'append',
    'type',
    'setInnerHtml',
    'children',
    'onMouseOut',
    'onMouseOver',
    'click',
    'disabled',
    'dataset',
    'appendText',
  ],
  'dart.core.Exception': [
    'toString',
    'printStackTrace',
  ],
  'dart.dom.html.DataTransfer': [
    'setData',
    'setDragImage',
    'types',
    'effectAllowed',
    'dropEffect',
    'getData',
    'files',
  ],
  'dart.math.Point': [
    'x',
    'y',
    'distanceTo',
    'magnitude',
  ],
  'dart.dom.html.LIElement': [
    'classes',
    'append',
    'style',
    'text',
    'querySelector',
    'innerHtml',
    'dispatchEvent',
    'children',
    'dataset',
    'className',
    'nodes',
    'remove',
    'value',
  ],
  'dart.dom.html.CanvasRenderingContext2D': [
    'lineTo',
    'beginPath',
    'fillRect',
    'moveTo',
    'stroke',
    'drawImage',
    'closePath',
    'restore',
    'translate',
    'save',
    'scale',
    'fill',
    'getImageData',
    'clearRect',
    'setTransform',
    'strokeRect',
    'rotate',
    'putImageData',
    'fillStyle',
    'arc',
    'transform',
    'fillText',
    'strokeStyle',
    'createImageData',
    'createPatternFromImage',
    'clip',
    'lineWidth',
    'drawImageToRect',
    'strokeText',
    'font',
    'rect',
    'drawImageScaledFromSource',
    'setFillColorRgb',
    'createLinearGradient',
    'bezierCurveTo',
    'drawImageScaled',
    'measureText',
    'setLineDash',
    'shadowBlur',
    'shadowOffsetX',
    'shadowOffsetY',
    'shadowColor',
    'quadraticCurveTo',
    'imageSmoothingEnabled',
    'textAlign',
    'createRadialGradient',
    'textBaseline',
    'globalAlpha',
    'lineCap',
  ],
  'dart.io.HeaderValue': [
    'parse',
  ],
  'dart.dom.html.ScriptElement': [
    'src',
    'type',
    'async',
    'remove',
    'text',
  ],
  'dart.dom.html.MouseEvent': [
    'preventDefault',
    'stopPropagation',
    'target',
    'dataTransfer',
    'page',
    'client',
    'ctrlKey',
    'stopImmediatePropagation',
    'metaKey',
    'shiftKey',
  ],
  'dart.io.RawSocket': [
    'write',
    'listen',
    'close',
    'connect',
    'read',
    'available',
    'shutdown',
    'setOption',
  ],
  'dart.io.RawSecureSocket': [
    'secure',
    'connect',
    'shutdown',
    'listen',
    'secureServer',
    'write',
    'read',
  ],
  'dart.dom.web_sql.SqlDatabase': [
    'transaction',
    'supported',
  ],
  'dart.dom.web_sql.SqlTransaction': [
    'executeSql',
  ],
  'dart.dom.web_sql.SqlResultSetRowList': [
    'length',
    'elementAt',
    'isNotEmpty',
    'item',
    'forEach',
  ],
  'dart.convert.AsciiCodec': [
    'encode',
    'decode',
  ],
  'dart.dom.html.EventStreamProvider': [
    'forTarget',
    'forElement',
  ],
  'dart.dom.html.MutationObserver': [
    'observe',
    'disconnect',
    'takeRecords',
  ],
  'dart.dom.html.UListElement': [
    'queryAll',
    'append',
    'style',
    'id',
    'children',
    'remove',
    'query',
    'insertBefore',
    'classes',
  ],
  'dart.dom.html.VideoElement': [
    'canPlayType',
    'load',
    'pause',
    'play',
    'autoplay',
    'remove',
    'src',
  ],
  'dart.dom.html.MediaError': [
    'code',
  ],
  'dart.dom.html.TimeRanges': [
    'start',
    'end',
  ],
  'dart.dom.html.SourceElement': [
    'remove',
  ],
  'dart.dom.html.ObjectElement': [
    'remove',
    'getAttribute',
  ],
  'dart.dom.html.OptionElement': [
    'value',
    'text',
    'selected',
    'label',
    'appendText',
  ],
  'dart.dom.html.SpanElement': [
    'classes',
    'text',
    'style',
    'append',
    'appendText',
    'onMouseOut',
    'onMouseOver',
    'onClick',
    'attributes',
    'remove',
    'draggable',
    'id',
    'outerHtml',
    'innerHtml',
    'setAttribute',
    'querySelector',
    'scrollIntoView',
  ],
  'dart.dom.html.Geolocation': [
    'getCurrentPosition',
    'watchPosition',
  ],
  'dart.dom.html.Coordinates': [
    'accuracy',
    'longitude',
    'latitude',
    'speed',
    'heading',
    'altitudeAccuracy',
    'altitude',
  ],
  'dart.dom.html.ImageElement': [
    'remove',
    'width',
    'height',
    'onLoad',
    'src',
    'style',
    'crossOrigin',
    'classes',
    'className',
    'id',
    'onDragStart',
  ],
  'dart.mirrors.MethodMirror': [
    'parameters',
    'isGetter',
    'isConstructor',
    'returnType',
    'owner',
    'simpleName',
    'location',
    'source',
    'isStatic',
  ],
  'dart.dom.html.Storage': [
    'containsKey',
    'clear',
    'remove',
    'length',
    'keys',
    'containsValue',
  ],
  'dart.convert.ChunkedConversionSink': [
    'add',
    'close',
    'specialI',
  ],
  'dart.collection.ListQueue': [
    'add',
    'removeFirst',
    'addAll',
    'addLast',
    'removeLast',
    'forEach',
    'toList',
    'removeWhere',
    'addFirst',
  ],
  'dart.dom.html.CanvasElement': [
    'getContext',
    'style',
    'width',
    'height',
    'context2D',
    'toDataUrl',
    'getContext3d',
    'onMouseUp',
    'onMouseDown',
    'getBoundingClientRect',
    'onMouseMove',
    'onClick',
    'onMouseOut',
    'className',
    'onMouseOver',
    'setAttribute',
    'remove',
    'context2d',
    'focus',
  ],
  'dart.dom.html.KeyboardEvent': [
    'preventDefault',
    'which',
    'stopPropagation',
    'ctrlKey',
    'keyCode',
    'stopImmediatePropagation',
    'metaKey',
    'altKey',
    'shiftKey',
    'getModifierState',
  ],
  'dart.dom.html.WebSocket': [
    'send',
    'close',
    'onMessage',
    'onClose',
    'onError',
    'onOpen',
    'readyState',
    'url',
    'sendTypedData',
    'binaryType',
  ],
  'dart.io.WebSocketTransformer': [
    'upgrade',
    'isUpgradeRequest',
  ],
  'dart.core.Symbol': [
    'toString',
    'length',
  ],
  'dart.js.JsFunction': [
    'apply',
  ],
  'dart.io.InternetAddress': [
    'address',
    'host',
    'lookup',
    'toString',
    'isLoopback',
  ],
  'dart.convert.Latin1Codec': [
    'decode',
  ],
  'dart.dom.html.ElementEvents': [
    'click',
    'load',
    'change',
    'keyPress',
    'drop',
    'dragOver',
    'dragEnter',
    'input',
    'keyDown',
    'dragLeave',
    'dragEnd',
    'dragStart',
    'mouseOut',
    'mouseMove',
    'keyUp',
    'loadedMetadata',
  ],
  'dart.dom.html.TableCellElement': [
    'setInnerHtml',
    'style',
    'append',
    'text',
    'insertAdjacentElement',
    'colSpan',
    'setAttribute',
    'innerHtml',
    'cellIndex',
  ],
  'dart.dom.html.TableRowElement': [
    'append',
    'attributes',
    'classes',
    'onClick',
    'children',
    'onMouseOut',
    'onMouseOver',
    'remove',
    'insertCell',
    'cells',
    'createFragment',
    'addCell',
    'query',
    'outerHtml',
  ],
  'dart.convert.Converter': [
    'convert',
    'startChunkedConversion',
  ],
  'dart.dom.html.FormData': [
    'append',
    'appendBlob',
  ],
  'dart.io.ProcessException': [
    'toString',
  ],
  'dart.dom.html.Text': [
    'remove',
    'text',
    'toString',
  ],
  'dart.dom.html.AnchorElement': [
    'href',
    'text',
    'onClick',
    'id',
    'classes',
    'append',
    'dispatchEvent',
    'replaceWith',
    'download',
    'click',
    'setAttribute',
    'appendText',
  ],
  'dart.dom.svg.LineElement': [
    'setAttribute',
  ],
  'dart.dom.svg.RectElement': [
    'setAttribute',
    'attributes',
  ],
  'dart.dom.svg.EllipseElement': [
    'setAttribute',
  ],
  'dart.dom.svg.PolylineElement': [
    'attributes',
  ],
  'dart.dom.svg.CircleElement': [
    'setAttribute',
  ],
  'dart.dom.svg.PathElement': [
    'setAttribute',
    'createSvgPathSegLinetoAbs',
    'createSvgPathSegMovetoAbs',
  ],
  'dart.dom.html.HeadingElement': [
    'text',
    'classes',
    'appendText',
    'append',
    'id',
  ],
  'dart.dom.html.TableElement': [
    'insertRow',
    'createFragment',
    'append',
    'children',
    'createTBody',
    'deleteRow',
    'addRow',
    'query',
    'querySelector',
  ],
  'dart.io.HttpConnectionInfo': [
    'remoteAddress',
    'remotePort',
    'localPort',
    'remoteHost',
  ],
  'dart.dom.html.FormElement': [
    'append',
    'submit',
    'children',
    'remove',
  ],
  'dart.io.Cookie': [
    'value',
    'toString',
    'path',
  ],
  'dart.dom.html.InputElement': [
    'focus',
    'select',
    'value',
    'remove',
    'type',
    'checkValidity',
    'dataset',
    'onKeyDown',
    'setSelectionRange',
    'dispatchEvent',
    'selectionStart',
    'selectionEnd',
    'setAttribute',
    'bind',
    'checked',
    'attributes',
    'blur',
    'setRangeText',
    'click',
    'onChange',
    'placeholder',
    'id',
    'onKeyUp',
    'onBlur',
    'onKeyPress',
    'autocomplete',
    'onPaste',
    'defaultChecked',
    'onFocus',
    'disabled',
  ],
  'dart.io.Socket': [
    'close',
    'connect',
    'transform',
    'destroy',
    'add',
    'listen',
    'write',
    'addStream',
    'pipe',
    'address',
    'read',
    'writeList',
    'setOption',
    'flush',
    'map',
    'readList',
    'available',
  ],
  'dart.mirrors.ParameterMirror': [
    'type',
    'isOptional',
    'defaultValue',
  ],
  'dart.convert.Codec': [
    'fuse',
    'encode',
    'decode',
  ],
  'dart.dom.indexed_db.Database': [
    'transaction',
    'createObjectStore',
    'close',
  ],
  'dart.dom.indexed_db.Transaction': [
    'objectStore',
    'onAbort',
    'onError',
    'onComplete',
  ],
  'dart.dom.indexed_db.ObjectStore': [
    'put',
    'delete',
    'createIndex',
    'getObject',
    'index',
    'openCursor',
    'clear',
  ],
  'dart.dom.svg.SvgSvgElement': [
    'append',
    'setAttribute',
    'createFragment',
    'createSvgPoint',
    'getScreenCtm',
    'onMouseUp',
    'onMouseMove',
  ],
  'dart.dom.svg.Point': [
    'matrixTransform',
  ],
  'dart.dom.svg.Matrix': [
    'inverse',
  ],
  'dart.dom.html.WheelEvent': [
    'preventDefault',
    'stopPropagation',
  ],
  'dart.dom.svg.AnimatedRect': [
    'baseVal',
  ],
  'dart.dom.html.SelectElement': [
    'append',
    'focus',
    'remove',
    'classes',
    'tabIndex',
    'options',
    'selectedIndex',
    'querySelectorAll',
    'multiple',
    'value',
  ],
  'dart.dom.html.LabelElement': [
    'query',
    'text',
    'append',
    'htmlFor',
    'style',
    'appendText',
    'classes',
  ],
  'dart.io.HttpSession': [
    'id',
    'destroy',
    'clear',
    'containsKey',
    'isNew',
    'remove',
    'onTimeout',
  ],
  'dart.dom.indexed_db.IdbFactory': [
    'open',
    'deleteDatabase',
    'supported',
    'supportsDatabaseNames',
    'getDatabaseNames',
  ],
  'dart.dom.indexed_db.Request': [
    'result',
  ],
  'dart.dom.indexed_db.Index': [
    'openCursor',
  ],
  'dart.dom.indexed_db.KeyRange': [
    'upperBound_',
    'bound_',
    'lowerBound_',
    'only_',
  ],
  'dart.dom.indexed_db.CursorWithValue': [
    'delete',
  ],
  'dart.core.NoSuchMethodError': [
    'toString',
  ],
  'dart.isolate.Isolate': [
    'spawn',
    'spawnUri',
    'resume',
    'addOnExitListener',
    'removeErrorListener',
    'addErrorListener',
    'kill',
    'ping',
    'pause',
    'setErrorsFatal',
  ],
  'dart.dom.html.TemplateElement': [
    'decorate',
    'content',
  ],
  'dart.dom.html.TreeWalker': [
    'nextNode',
  ],
  'dart.dom.html.StyleElement': [
    'remove',
    'appendText',
    'text',
    'sheet',
    'attributes',
    'type',
    'appendHtml',
    'dataset',
    'append',
    'innerHtml',
  ],
  'dart.dom.html.EventTarget': [
    'error',
    'result',
    'matchesWithAncestors',
    'nodeName',
    'matches',
    'classes',
    'dispatchEvent',
    'removeEventListener',
    'addEventListener',
    'status',
    'parent',
    'value',
    'hashCode',
  ],
  'dart.collection_helpers.equality.Equality': [
    'hash',
    'equals',
    'isValidKey',
  ],
  'dart.collection_helpers.equality.SetEquality': [
    'hash',
    'equals',
  ],
  'dart.collection_helpers.equality.MapEquality': [
    'hash',
    'equals',
  ],
  'dart.collection_helpers.equality.ListEquality': [
    'hash',
    'equals',
  ],
  'dart.collection_helpers.equality.IterableEquality': [
    'hash',
    'equals',
  ],
  'dart.collection_helpers.equality.UnorderedIterableEquality': [
    'hash',
    'equals',
  ],
  'dart.io.SecureSocket': [
    'initialize',
    'close',
    'connect',
    'listen',
    'write',
    'add',
    'fold',
    'writeln',
    'secure',
    'transform',
  ],
  'dart.io.HttpDate': [
    'parse',
    'format',
  ],
  'dart.math.Rectangle': [
    'top',
    'left',
    'containsPoint',
    'height',
    'width',
    'topLeft',
    'intersection',
    'topRight',
    'intersects',
    'containsRectangle',
    'boundingBox',
    'snap',
  ],
  'dart.dom.html.ContentElement': [
    'getDistributedNodes',
  ],
  'dart.io.SocketException': [
    'toString',
  ],
  'dart.dom.html.TextAreaElement': [
    'style',
    'focus',
    'select',
    'rows',
    'attributes',
    'setSelectionRange',
    'value',
    'appendText',
    'remove',
  ],
  'dart.dom.html.LinkElement': [
    'href',
    'replaceWith',
    'rel',
  ],
  'dart.dom.html.ParagraphElement': [
    'text',
    'appendHtml',
    'classes',
    'addHtml',
    'hidden',
  ],
  'dart.typed_data.Int32List': [
    'setRange',
    'indexOf',
    'sublist',
    'removeRange',
    'removeLast',
    'clear',
    'addAll',
    'add',
    'setAll',
  ],
  'dart.dom.web_gl.RenderingContext': [
    'ARRAY_BUFFER',
    'texParameteri',
    'bindBuffer',
    'bindFramebuffer',
    'TEXTURE_2D',
    'enable',
    'deleteShader',
    'getUniformLocation',
    'bindTexture',
    'clear',
    'createTexture',
    'detachShader',
    'attachShader',
    'getAttribLocation',
    'createBuffer',
    'enableVertexAttribArray',
    'vertexAttribPointer',
    'FLOAT',
    'STATIC_DRAW',
    'createShader',
    'shaderSource',
    'compileShader',
    'viewport',
    'useProgram',
    'clearColor',
    'bufferDataTyped',
    'getShaderParameter',
    'uniformMatrix4fv',
    'getShaderInfoLog',
    'bindRenderbuffer',
    'deleteTexture',
    'deleteProgram',
    'RGBA',
    'linkProgram',
    'createProgram',
    'disableVertexAttribArray',
    'disable',
    'getProgramParameter',
    'blendFunc',
    'drawArrays',
    'getProgramInfoLog',
    'TRIANGLES',
    'lineWidth',
    'COMPILE_STATUS',
    'texImage2DTyped',
    'NEAREST',
    'createFramebuffer',
    'getExtension',
    'framebufferTexture2D',
    'framebufferRenderbuffer',
    'renderbufferStorage',
    'createRenderbuffer',
    'ELEMENT_ARRAY_BUFFER',
    'uniformMatrix3fv',
    'uniform2f',
    'UNSIGNED_BYTE',
    'deleteFramebuffer',
    'deleteRenderbuffer',
    'TEXTURE_MIN_FILTER',
    'TEXTURE_MAG_FILTER',
    'CLAMP_TO_EDGE',
    'DEPTH_TEST',
    'DEPTH_BUFFER_BIT',
    'texImage2DImage',
    'COLOR_BUFFER_BIT',
    'LINK_STATUS',
    'FRAGMENT_SHADER',
    'VERTEX_SHADER',
    'bufferData',
    'TEXTURE_WRAP_S',
    'TEXTURE_WRAP_T',
    'texImage2DCanvas',
    'LINEAR',
    'UNSIGNED_SHORT',
    'texImage2D',
    'drawElements',
    'pixelStorei',
    'colorMask',
    'depthFunc',
    'TRIANGLE_STRIP',
    'activeTexture',
    'TEXTURE0',
    'depthMask',
    'FRAMEBUFFER',
    'UNPACK_FLIP_Y_WEBGL',
    'generateMipmap',
    'uniform1i',
  ],
  'dart.typed_data.Float32List': [
    'sublist',
    'indexOf',
    'buffer',
    'setRange',
    'length',
  ],
  'dart.dom.html.DirectoryEntry': [
    'getFile',
    'createDirectory',
    'createFile',
    'createReader',
    'getDirectory',
    'removeRecursively',
    'toUrl',
    'fullPath',
    'toString',
  ],
  'dart.dom.html.Entry': [
    'moveTo',
    'isFile',
    'copyTo',
    'isDirectory',
    'fullPath',
    'name',
    'remove',
    'getMetadata',
    'createWriter',
    'file',
    'getParent',
    'toUrl',
  ],
  'dart.dom.html.DirectoryReader': [
    'readEntries',
  ],
  'dart.dom.html.KeyCode': [
    'DOWN',
    'RIGHT',
    'LEFT',
    'TAB',
    'UP',
    'ESC',
    'ENTER',
    'isCharacterKey',
    'SPACE',
    'NUM_SOUTH',
    'NUM_NORTH',
    'NUM_EAST',
    'NUM_WEST',
    'NUM_NORTH_EAST',
    'NUM_SOUTH_EAST',
    'R',
  ],
  'dart.pkg.collection.iterable_zip.IterableZip': [
    'map',
    'toList',
  ],
  'dart.convert.LineSplitter': [
    'convert',
  ],
  'dart.dom.html.HttpRequestUpload': [
    'onProgress',
    'onError',
    'onTimeout',
  ],
  'dart.dom.html.File': [
    'name',
    'slice',
    'readAsBytesSync',
    'existsSync',
  ],
  'dart.dom.html.Events': [
    'error',
    'message',
    'load',
    'hashChange',
    'popState',
    'resize',
    'loadEnd',
  ],
  'dart.dom.html.Url': [
    'createObjectUrl',
    'revokeObjectUrl',
    'createObjectUrlFromBlob',
    'createObjectUrlFromStream',
  ],
  'dart.dom.html.RtcIceCandidate': [
    'candidate',
    'sdpMLineIndex',
  ],
  'dart.dom.html.RtcPeerConnection': [
    'setLocalDescription',
    'createDataChannel',
    'createOffer',
    'createAnswer',
  ],
  'dart.io.RawDatagramSocket': [
    'bind',
    'close',
    'receive',
    'send',
    'listen',
  ],
  'dart.pkg.collection.equality.DeepCollectionEquality': [
    'equals',
    'hash',
  ],
  'dart.pkg.collection.priority_queue.PriorityQueue': [
    'addAll',
    'contains',
    'removeFirst',
    'add',
    'removeAll',
  ],
  'dart.convert.StringConversionSink': [
    'add',
    'asUtf8Sink',
    'close',
    'asStringSink',
    'addSlice',
  ],
  'dart.dom.html.ImageData': [
    'data',
  ],
  'dart.dom.html.PreElement': [
    'appendText',
    'text',
    'append',
    'classes',
  ],
  'dart.dom.html.MediaStream': [
    'stop',
  ],
  'dart.dom.html.DomParser': [
    'parseFromString',
  ],
  'dart.dom.html.CustomEvent': [
    'stopImmediatePropagation',
    'preventDefault',
    'stopPropagation',
  ],
  'dart.typed_data.Uint16List': [
    'buffer',
    'sublist',
    'setRange',
    'removeRange',
    'removeLast',
    'clear',
    'addAll',
    'add',
    'length',
  ],
  'dart.dom.html.CanvasGradient': [
    'addColorStop',
  ],
  'dart.dom.html.Notification': [
    'requestPermission',
  ],
  'dart.dom.svg.Length': [
    'value',
    'valueAsString',
  ],
  'dart.dom.svg.AnimatedLength': [
    'baseVal',
  ],
  'dart.dom.svg.PointList': [
    'getItem',
  ],
  'dart.mirrors.SourceLocation': [
    'line',
  ],
  'dart.DartGrammarDefinition': [
    'build',
  ],
  'dart.dom.html.TextMetrics': [
    'width',
  ],
  'dart.dom.html.CssRect': [
    'width',
    'height',
    'top',
    'left',
    'topLeft',
  ],
  'dart.dom.html.KeyboardEventStream': [
    'onKeyDown',
  ],
  'dart.dom.html.CssRule': [
    'selectorText',
  ],
  'dart.dom.html.CssStyleRule': [
    'style',
    'selectorText',
  ],
  'dart.dom.html.Selection': [
    'removeAllRanges',
    'collapse',
    'getRangeAt',
  ],
  'dart.dom.html.CheckboxInputElement': [
    'checked',
    'attributes',
    'classes',
    'value',
  ],
  'dart.dom.html.TextInputElement': [
    'classes',
    'value',
    'focus',
    'select',
    'className',
    'onKeyDown',
    'style',
  ],
  'dart.dom.html.DateInputElement': [
    'classes',
  ],
  'dart.dom.html.RangeInputElement': [
    'style',
    'attributes',
    'onChange',
    'value',
    'step',
    'max',
    'min',
  ],
  'dart.dom.html.AnimationTimeline': [
    'play',
  ],
  'dart.dom.html.AnimationPlayer': [
    'play',
  ],
  'dart.dom.html.GlobalEventHandlers': [
    'clickEvent',
  ],
  'dart.dom.html.TouchEvent': [
    'preventDefault',
    'supported',
    'stopPropagation',
  ],
  'dart.dom.html.AudioElement': [
    'canPlayType',
    'load',
    'append',
    'play',
    'pause',
    'remove',
  ],
  'dart.io.ProcessSignal': [
    'watch',
  ],
  'dart.convert.Utf8Decoder': [
    'convert',
    'startChunkedConversion',
  ],
  'dart.dom.html.AnimationEvent': [
    'preventDefault',
    'stopImmediatePropagation',
  ],
  'dart.dom.html.FocusEvent': [
    'stopImmediatePropagation',
  ],
  'dart.dom.html.Touch': [
    'page',
    'client',
  ],
  'dart.async.DeferredLibrary': [
    'load',
  ],
  'dart.dom.html.TableSectionElement': [
    'append',
    'innerHtml',
    'rows',
    'createFragment',
    'addRow',
  ],
  'dart.mirrors.Mirror': [
    'methods',
    'invoke',
    'type',
    'delegate',
    'members',
  ],
  'dart.core.StateError': [
    'toString',
  ],
  'dart.io.FileMode': [
    'APPEND',
    'READ',
    'WRITE',
  ],
  'dart.dom.html.CssStyleDeclarationBase': [
    'display',
    'backgroundColor',
    'opacity',
    'borderLeftWidth',
  ],
  'dart.dom.html.IFrameElement': [
    'style',
    'src',
  ],
  'dart.io.FileSystemException': [
    'toString',
  ],
  'dart.dom.html.Screen': [
    'width',
    'height',
    'pixelDepth',
  ],
  'dart.core.ArgumentError': [
    'toString',
  ],
  'dart.dom.html.Blob': [
    'slice',
  ],
  'dart.dom.svg.PatternElement': [
    'setAttribute',
    'append',
  ],
  'dart.dom.svg.DefsElement': [
    'append',
  ],
  'dart.dom.svg.PathSegList': [
    'appendItem',
    'clear',
    'length',
    'getItem',
  ],
  'dart.dom.html.FileList': [
    'length',
    'item',
  ],
  'dart.dom.html.FileError': [
    'NOT_FOUND_ERR',
    'code',
  ],
  'dart.mirrors.VariableMirror': [
    'type',
    'isFinal',
    'isStatic',
  ],
  'dart.io.HttpStatus': [
    'NOT_FOUND',
  ],
  'dart.typed_data.Float64List': [
    'sublist',
    'indexOf',
    'setRange',
  ],
  'dart.typed_data.Float32x4': [
    'shuffle',
    'shuffleMix',
    'scale',
    'signMask',
    'clamp',
    'withX',
    'withY',
    'w',
    'z',
    'y',
    'x',
  ],
  'dart.pkg.typed_data.typed_buffers.Int32x4Buffer': [
    'add',
  ],
  'dart.dom.html.NumberInputElement': [
    'step',
    'max',
    'min',
    'valueAsNumber',
  ],
  'dart.dom.html.ValidityState': [
    'valid',
  ],
  'dart.dom.html.CssStyleSheet': [
    'ownerNode',
    'insertRule',
    'addRule',
  ],
  'dart.io.ZLibCodec': [
    'decode',
  ],
  'dart.collection.HasNextIterator': [
    'next',
  ],
  'dart.isolate.RawReceivePort': [
    'close',
  ],
  'dart.mirrors.TypeVariableMirror': [
    'simpleName',
    'isSubtypeOf',
    'isAssignableTo',
    'owner',
  ],
  'dart.typed_data.implementation.NativeByteBuffer': [
    'asFloat64List',
    'asFloat32List',
    'asInt32List',
  ],
  'dart.typed_data.implementation.NativeFloat32x4List': [
    'length',
  ],
  'dart.typed_data.implementation.NativeFloat32List': [
    'sublist',
  ],
  'dart.typed_data.implementation.NativeInt32x4List': [
    'length',
  ],
  'dart.typed_data.implementation.NativeFloat64x2List': [
    'length',
  ],
  'dart.typed_data.implementation.NativeFloat64List': [
    'sublist',
  ],
  'dart.typed_data.implementation.NativeTypedArray': [
    'length',
  ],
  'dart.typed_data.implementation.NativeTypedArrayOfDouble': [
    'setRange',
  ],
  'dart.typed_data.implementation.NativeTypedArrayOfInt': [
    'setRange',
  ],
  'dart.typed_data.implementation.NativeInt32x4': [
    'w',
    'z',
    'y',
    'x',
  ],
  'dart.dom.svg.SvgElement': [
    'isTagSupported',
    'clone',
    'setAttribute',
    'children',
    'setInnerHtml',
    'attributes',
  ],
  'dart.dom.svg.GElement': [
    'append',
    'querySelector',
    'id',
  ],
  'dart.dom.html.ProgressEvent': [
    'toString',
  ],
  'dart.core.RangeError': [
    'toString',
    'checkValidRange',
    'checkNotNegative',
    'checkValueInInterval',
    'checkValidIndex',
  ],
  'dart.dom.html.TouchList': [
    'length',
    'first',
    'isEmpty',
    'isNotEmpty',
  ],
  'dart.dom.html.FieldSetElement': [
    'append',
    'querySelector',
  ],
  'dart.dom.html.ShadowElement': [
    'getDistributedNodes',
  ],
  'dart.dom.html.KeyEvent': [
    'keyCode',
    'type',
    'preventDefault',
  ],
  'dart.dom.html.NodeList': [
    'length',
    'add',
  ],
  'dart.dom.html.DomStringList': [
    'length',
  ],
  'dart.dom.html.HtmlCollection': [
    'length',
    'forEach',
    'contains',
  ],
  'dart.dom.html.Range': [
    'createContextualFragment',
    'selectNodeContents',
    'insertNode',
    'setEndAfter',
  ],
  'dart.dom.html.NodeTreeSanitizer': [
    'sanitizeTree',
  ],
  'dart.dom.html.MimeTypeArray': [
    'length',
  ],
  'dart.dom.html.PluginArray': [
    'length',
  ],
  'dart.dom.html.SourceBufferList': [
    'length',
  ],
  'dart.dom.html.SpeechGrammarList': [
    'length',
  ],
  'dart.dom.html.TextTrackCueList': [
    'length',
  ],
  'dart.dom.html.TextTrackList': [
    'length',
  ],
  'dart.dom.html.Dimension': [
    'value',
    'toString',
  ],
  'dart.dom.html.UriPolicy': [
    'allowsUri',
  ],
  'dart.dom.html.NodeValidator': [
    'allowsAttribute',
    'allowsElement',
  ],
  'dart.dom.html.Worker': [
    'terminate',
  ],
  'dart.typed_data.Int16List': [
    'sublist',
    'buffer',
    'contains',
    'setRange',
    'removeRange',
    'removeLast',
    'clear',
    'addAll',
    'add',
  ],
  'dart.dom.indexed_db.Cursor': [
    'next',
  ],
  'dart.dom.svg.LengthList': [
    'length',
    'getItem',
  ],
  'dart.dom.svg.NumberList': [
    'length',
    'getItem',
  ],
  'dart.dom.svg.StringList': [
    'length',
    'getItem',
  ],
  'dart.dom.svg.TransformList': [
    'length',
    'getItem',
  ],
  'dart.js.JsArray': [
    'length',
    'addAll',
    'insert',
    'removeRange',
    'removeAt',
    'add',
    'setRange',
    'removeLast',
  ],
  'dart.dom.html.ApplicationCache': [
    'swapCache',
  ],
  'dart.dom.web_audio.AudioContext': [
    'createBufferSource',
    'createOscillator',
    'destination',
    'createPanner',
    'createGain',
  ],
  'dart.dom.html.FileUploadInputElement': [
    'click',
  ],
  'dart.dom.html.DomRectReadOnly': [
    'top',
    'left',
    'height',
    'width',
  ],
  'dart.typed_data.Int8List': [
    'sublist',
    'setRange',
    'removeRange',
    'removeLast',
    'clear',
    'addAll',
    'add',
    'buffer',
  ],
  'dart.dom.web_audio.AudioBufferSourceNode': [
    'connectNode',
    'start',
    'stop',
  ],
  'dart.dom.html.FileEntry': [
    'file',
    'getParent',
    'toUrl',
    'getMetadata',
  ],
  'dart.dom.html.CustomStream': [
    'listen',
  ],
  'dart.dom.html.TrackElement': [
    'defaultValue',
  ],
  'dart.dom.web_audio.OscillatorNode': [
    'connectNode',
  ],
  'dart.dom.html.StorageQuota': [
    'queryInfo',
  ],
  'dart.collection.DoubleLinkedQueue': [
    'add',
  ],
  'dart.core.TypeError': [
    'toString',
  ],
  'dart.core.AssertionError': [
    'toString',
  ],
  'dart.profiler.Metrics': [
    'register',
  ],
  'dart.collection.LinkedList': [
    'remove',
    'addFirst',
    'clear',
    'add',
  ],
  'dart.typed_data.Uint8ClampedList': [
    'sublist',
  ],
  'dart.typed_data.Float64x2': [
    'y',
    'x',
    'withX',
  ],
  'dart.convert.ByteConversionSink': [
    'close',
    'add',
    'addSlice',
  ],
  'dart.convert.ClosableStringSink': [
    'close',
    'write',
  ],
  'dart.mirrors.TypedefMirror': [
    'isSubtypeOf',
    'isAssignableTo',
    'referent',
  ],
  'dart.mirrors.FunctionTypeMirror': [
    'isSubtypeOf',
    'isAssignableTo',
    'returnType',
    'parameters',
    'isOriginalDeclaration',
  ],
  'dart.mirrors.LibraryDependencyMirror': [
    'metadata',
  ],
  'dart.test.stream_from_iterable.IterableTest': [
    'run',
  ],
  'dart.io.SecureServerSocket': [
    'bind',
    'close',
    'listen',
  ],
  'dart.io.RawServerSocket': [
    'bind',
    'listen',
    'close',
  ],
  'dart.typed_data.Uint64List': [
    'sublist',
    'setRange',
    'removeRange',
    'removeLast',
    'clear',
    'addAll',
    'add',
  ],
  'dart.typed_data.Int64List': [
    'sublist',
    'setRange',
    'removeRange',
    'removeLast',
    'clear',
    'addAll',
    'add',
  ],
  'dart.io.StdioType': [
    'name',
  ],
  'dart.io.HttpConnectionsInfo': [
    'total',
    'idle',
    'active',
  ],
  'dart.io.RawSecureServerSocket': [
    'bind',
    'close',
    'listen',
  ],
  'dart.io.ServerSocketReference': [
    'create',
  ],
  'dart.io.NetworkInterface': [
    'list',
  ],
  'dart.io.ZLibDecoder': [
    'convert',
  ],
  'dart.io.ZLibEncoder': [
    'convert',
  ],
  'dart.pkg.async.results.ValueResult': [
    'value',
  ],
  'dart.pkg.async.stream_zip.StreamZip': [
    'toList',
  ],
  'dart.pkg.async.results.Result': [
    'flatten',
    'release',
  ],
  'dart.pkg.async.results.ErrorResult': [
    'stackTrace',
    'error',
  ],
  'dart.dom.html.OptGroupElement': [
    'append',
  ],
  'dart.dom.html.UnknownElement': [
    'query',
  ],
  'dart.dom.web_audio.AudioParam': [
    'value',
    'setValueAtTime',
  ],
  'dart.dom.html.RadioButtonInputElement': [
    'checked',
  ],
  'dart.dom.web_audio.BiquadFilterNode': [
    'connectNode',
  ],
  'dart.async.StreamConsumer': [
    'addStream',
    'close',
  ],
  'dart.dom.html.FileSystem': [
    'root',
  ],
  'dart.dom.html.FileWriter': [
    'write',
    'abort',
  ],
  'dart.dom.html.OutputElement': [
    'scrollIntoView',
  ],
  'dart.dom.html.Css': [
    'supports',
  ],
  'dart.io.IOException': [
    'toString',
  ],
  'dart.dom.html.ButtonInputElement': [
    'value',
    'onClick',
  ],
};
