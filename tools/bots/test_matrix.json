{
  "branches": [
    "main"
  ],
  "filesets": {
    "analyzer_unit_tests": [
      ".dart_tool/package_config.json",
      "pkg/",
      "third_party/pkg/",
      "tools/",
      "out/ReleaseX64/dart-sdk/",
      "xcodebuild/ReleaseX64/dart-sdk/"
    ],
    "web_platform": [
      ".dart_tool/package_config.json",
      "out/ReleaseX64/dart-sdk/",
      "out/ReleaseX64/ddc_outline_unsound.dill",
      "out/ReleaseX64/gen/utils/dartdevc/",
      "pkg/",
      "runtime/tests/",
      "sdk/",
      "tests/.dart_tool/package_config.json",
      "tests/angular/",
      "tests/co19_2/co19_2-analyzer.status",
      "tests/co19_2/co19_2-co19.status",
      "tests/co19_2/co19_2-dart2js.status",
      "tests/co19_2/co19_2-dartdevc.status",
      "tests/co19_2/co19_2-kernel.status",
      "tests/co19_2/co19_2-runtime.status",
      "tests/co19/co19-analyzer.status",
      "tests/co19/co19-co19.status",
      "tests/co19/co19-dart2js.status",
      "tests/co19/co19-dartdevc.status",
      "tests/co19/co19-kernel.status",
      "tests/co19/co19-runtime.status",
      "tests/corelib_2/",
      "tests/web_2/",
      "tests/dartdevc_2/",
      "tests/language/",
      "tests/language_2/",
      "tests/lib_2/",
      "tests/light_unittest.dart",
      "tests/search/",
      "tests/standalone_2/",
      "tests/ffi/",
      "tests/ffi_2/",
      "third_party/babel/babel.min.js",
      "third_party/d8/",
      "third_party/pkg/",
      "third_party/requirejs/",
      "tools/"
    ],
    "web_platform_nnbd": [
      ".dart_tool/package_config.json",
      "out/ReleaseX64/dart-sdk/",
      "out/ReleaseX64/ddc_outline.dill",
      "out/ReleaseX64/ddc_outline_unsound.dill",
      "out/ReleaseX64/gen/utils/dartdevc/",
      "pkg/",
      "runtime/tests/",
      "samples/",
      "sdk/",
      "tests/.dart_tool/package_config.json",
      "tests/angular/",
      "tests/co19/co19-analyzer.status",
      "tests/co19/co19-co19.status",
      "tests/co19/co19-dart2js.status",
      "tests/co19/co19-dartdevc.status",
      "tests/co19/co19-kernel.status",
      "tests/co19/co19-runtime.status",
      "tests/corelib/",
      "tests/web/",
      "tests/dartdevc/",
      "tests/language/",
      "tests/language_2/",
      "tests/lib/",
      "tests/light_unittest.dart",
      "tests/search/",
      "tests/ffi/",
      "third_party/babel/babel.min.js",
      "third_party/d8/",
      "third_party/pkg/",
      "third_party/requirejs/",
      "tools/",
      "xcodebuild/ReleaseARM64/dart-sdk/",
      "xcodebuild/ReleaseARM64/ddc_outline.dill",
      "xcodebuild/ReleaseARM64/ddc_outline_unsound.dill",
      "xcodebuild/ReleaseARM64/gen/utils/dartdevc/"
    ],
    "web_platform_hostasserts": [
      ".dart_tool/package_config.json",
      "out/ReleaseX64/dart",
      "out/ReleaseX64/dart2js_platform.dill",
      "out/ReleaseX64/dart2js_platform_unsound.dill",
      "pkg/",
      "runtime/tests/",
      "sdk/",
      "tests/.dart_tool/package_config.json",
      "tests/angular/",
      "tests/co19/co19-analyzer.status",
      "tests/co19/co19-co19.status",
      "tests/co19/co19-dart2js.status",
      "tests/co19/co19-dartdevc.status",
      "tests/co19/co19-kernel.status",
      "tests/co19/co19-runtime.status",
      "tests/co19_2/co19_2-analyzer.status",
      "tests/co19_2/co19_2-co19.status",
      "tests/co19_2/co19_2-dart2js.status",
      "tests/co19_2/co19_2-dartdevc.status",
      "tests/co19_2/co19_2-kernel.status",
      "tests/co19_2/co19_2-runtime.status",
      "tests/corelib_2/",
      "tests/web_2/",
      "tests/dartdevc_2/",
      "tests/language/",
      "tests/language_2/",
      "tests/lib_2/",
      "tests/light_unittest.dart",
      "tests/search/",
      "tests/standalone_2/",
      "tests/ffi/",
      "tests/ffi_2/",
      "third_party/d8/",
      "third_party/pkg/",
      "third_party/requirejs/",
      "tools/"
    ],
    "web_platform_hostasserts_nnbd": [
      ".dart_tool/package_config.json",
      "out/ReleaseX64/dart",
      "out/ReleaseX64/dart2js_platform.dill",
      "out/ReleaseX64/dart2js_platform_unsound.dill",
      "pkg/",
      "runtime/tests/",
      "samples/",
      "sdk/",
      "tests/.dart_tool/package_config.json",
      "tests/angular/",
      "tests/co19/co19-analyzer.status",
      "tests/co19/co19-co19.status",
      "tests/co19/co19-dart2js.status",
      "tests/co19/co19-dartdevc.status",
      "tests/co19/co19-kernel.status",
      "tests/co19/co19-runtime.status",
      "tests/corelib/",
      "tests/web/",
      "tests/dartdevc/",
      "tests/language/",
      "tests/language_2/",
      "tests/lib/",
      "tests/light_unittest.dart",
      "tests/search/",
      "tests/ffi/",
      "third_party/d8/",
      "third_party/pkg/",
      "third_party/requirejs/",
      "tools/"
    ],
    "dart2wasm_hostasserts": [
      ".dart_tool/package_config.json",
      "out/ReleaseX64/dart",
      "out/ReleaseX64/dart_precompiled_runtime",
      "out/ReleaseX64/dart2wasm.snapshot",
      "out/ReleaseX64/dart2wasm_asserts.snapshot",
      "out/ReleaseX64/dart2wasm_outline.dill",
      "out/ReleaseX64/dart2wasm_platform.dill",
      "out/ReleaseX64/wasm/",
      "pkg/",
      "runtime/tests/",
      "samples/",
      "sdk/",
      "tests/.dart_tool/package_config.json",
      "tests/angular/",
      "tests/co19/co19-analyzer.status",
      "tests/co19/co19-co19.status",
      "tests/co19/co19-dart2js.status",
      "tests/co19/co19-dartdevc.status",
      "tests/co19/co19-kernel.status",
      "tests/co19/co19-runtime.status",
      "tests/corelib/",
      "tests/web/",
      "tests/dartdevc/",
      "tests/language/",
      "tests/lib/",
      "tests/light_unittest.dart",
      "tests/search/",
      "tests/ffi/",
      "third_party/d8/",
      "third_party/pkg/",
      "third_party/requirejs/",
      "tools/"
    ],
    "front-end": [
      ".dart_tool/package_config.json",
      "out/ReleaseIA32/",
      "out/ReleaseX64/",
      "pkg/",
      "runtime/tests/",
      "samples/",
      "sdk/",
      "tests/.dart_tool/package_config.json",
      "tests/angular/",
      "tests/co19/co19-analyzer.status",
      "tests/co19/co19-co19.status",
      "tests/co19/co19-dart2js.status",
      "tests/co19/co19-dartdevc.status",
      "tests/co19/co19-kernel.status",
      "tests/co19/co19-runtime.status",
      "tests/co19_2/co19_2-analyzer.status",
      "tests/co19_2/co19_2-co19.status",
      "tests/co19_2/co19_2-dart2js.status",
      "tests/co19_2/co19_2-dartdevc.status",
      "tests/co19_2/co19_2-kernel.status",
      "tests/co19_2/co19_2-runtime.status",
      "tests/corelib/",
      "tests/corelib_2/",
      "tests/web/",
      "tests/web_2/",
      "tests/dartdevc/",
      "tests/dartdevc_2/",
      "tests/language/",
      "tests/language_2/",
      "tests/lib/",
      "tests/lib_2/",
      "tests/light_unittest.dart",
      "tests/search/",
      "tests/standalone_2/",
      "tests/ffi/",
      "tests/ffi_2/",
      "third_party/d8/",
      "third_party/pkg/",
      "third_party/requirejs/",
      "tools/",
      "xcodebuild/ReleaseIA32/",
      "xcodebuild/ReleaseX64/"
    ],
    "fuzzer": [
      "runtime/tools/dartfuzz/",
      "out/",
      "third_party/pkg/",
      "tools/sdks/dart-sdk/",
      "pkg/_fe_analyzer_shared/",
      "pkg/async_helper/",
      "pkg/build_integration/",
      "pkg/dart_internal/",
      "pkg/expect/",
      "pkg/front_end/",
      "pkg/js/",
      "pkg/kernel/",
      "pkg/meta/",
      "pkg/vm/",
      "runtime/",
      "sdk/",
      ".dart_tool/package_config.json"
    ],
    "vm-kernel": [
      "benchmarks/",
      "out/",
      "xcodebuild/",
      "pkg/",
      "samples/",
      "tools/",
      "third_party/android_tools/sdk/platform-tools/adb",
      "third_party/android_tools/ndk/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-strip",
      "third_party/android_tools/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-strip",
      "third_party/devtools/",
      "third_party/webdriver/",
      "third_party/pkg/",
      "tests/.dart_tool/package_config.json",
      "tests/angular/",
      "tests/co19/co19-analyzer.status",
      "tests/co19/co19-co19.status",
      "tests/co19/co19-dart2js.status",
      "tests/co19/co19-dartdevc.status",
      "tests/co19/co19-kernel.status",
      "tests/co19/co19-runtime.status",
      "tests/co19_2/co19_2-analyzer.status",
      "tests/co19_2/co19_2-co19.status",
      "tests/co19_2/co19_2-dart2js.status",
      "tests/co19_2/co19_2-dartdevc.status",
      "tests/co19_2/co19_2-kernel.status",
      "tests/co19_2/co19_2-runtime.status",
      "tests/corelib/",
      "tests/corelib_2/",
      "tests/web/",
      "tests/web_2/",
      "tests/dartdevc",
      "tests/dartdevc_2",
      "tests/language/",
      "tests/language_2/",
      "tests/lib/",
      "tests/lib_2/",
      "tests/light_unittest.dart",
      "tests/search/",
      "tests/standalone/",
      "tests/standalone_2/",
      "tests/ffi/",
      "tests/ffi_2/",
      "pkg/_fe_analyzer_shared/",
      "pkg/async_helper/",
      "pkg/build_integration/",
      "pkg/dart_internal/",
      "pkg/dart2native/",
      "pkg/dart2js_tools/",
      "pkg/dds/",
      "pkg/expect/",
      "pkg/front_end/",
      "pkg/js/",
      "pkg/kernel/",
      "pkg/meta/",
      "pkg/native_stack_traces/",
      "pkg/pkg.status",
      "pkg/smith/",
      "pkg/status_file/",
      "pkg/test_runner/",
      "pkg/vm/",
      "pkg/vm_service/",
      "pkg/vm_snapshot_analysis/",
      "runtime/",
      "sdk/",
      ".dart_tool/package_config.json",
      ".vpython"
    ]
  },
  "configurations": {
    "unittest-(linux|win|mac)": {
      "options": {
        "compiler": "dartk",
        "mode": "release",
        "runtime": "vm",
        "timeout": 240,
        "use-sdk": true
      }
    },
    "unittest-asserts-(debug|product|release)-mac-arm64": {
      "options": {
        "compiler": "dartk",
        "enable-asserts": true,
        "runtime": "vm",
        "timeout": 240,
        "use-sdk": true
      }
    },
    "web-unittest-asserts-(linux|mac|win)": {
      "options": {
        "builder-tag": "web",
        "compiler": "dartk",
        "enable-asserts": true,
        "mode": "release",
        "runtime": "vm",
        "timeout": 240,
        "use-sdk": true
      }
    },
    "web-unittest-asserts-legacy-(linux|mac|win)": {
      "options": {
        "builder-tag": "web-legacy",
        "compiler": "dartk",
        "enable-asserts": true,
        "mode": "release",
        "runtime": "vm",
        "timeout": 240,
        "use-sdk": true
      }
    },
    "unittest-asserts-(debug|product|release)-(linux|mac|win)": {
      "options": {
        "compiler": "dartk",
        "enable-asserts": true,
        "runtime": "vm",
        "timeout": 240,
        "use-sdk": true
      }
    },
    "analyzer-unittest-asserts-(debug|product|release)-(linux|mac|win)": {
      "options": {
        "compiler": "dartk",
        "enable-asserts": true,
        "runtime": "vm",
        "timeout": 240,
        "use-sdk": true,
        "builder-tag": "analyzer"
      }
    },
    "cfe-unittest-asserts-(debug|product|release)-(linux|mac|win)": {
      "options": {
        "compiler": "dartk",
        "enable-asserts": true,
        "runtime": "vm",
        "timeout": 240,
        "use-sdk": true,
        "builder-tag": "cfe"
      }
    },
    "flutter-frontend": {
      "__comment__": "This configuration is only used for a custom test runner. If it conflicts with a new configuration you are adding, you can make this configuration more specific by adding options."
    },
    "vm-ffi-unit-test": {
      "__comment__": "This configuration is only used for a custom test runner. If it conflicts with a new configuration you are adding, you can make this configuration more specific by adding options.",
      "options": {
        "builder-tag": "ffi"
      }
    },
    "vm-(linux|mac|win|fuchsia)-(debug|product|release)-(ia32|x64|x64c|arm64|arm64c|simarm|simarm64|simriscv32|simriscv64)": {
      "options": {
        "nnbd": "strong"
      }
    },
    "vm-checked-(linux|mac|win|fuchsia)-(debug|product|release)-(ia32|x64|x64c|arm64|arm64c|simarm|simarm64|simriscv32|simriscv64)": {
      "options": {
        "nnbd": "strong",
        "enable-asserts": true
      }
    },
    "vm-aot-(linux|mac)-(debug|product|release)-(x64|x64c|arm64|arm64c)": {
      "options": {
        "nnbd": "strong"
      }
    },
    "vm-aot-win-(debug|product|release)-(x64|x64c|arm64|arm64c)": {
      "options": {
        "nnbd": "strong",
        "use-elf": true
      }
    },
    "vm-aot-(linux|mac|win)-(debug|product|release)-(simarm|simarm64|simriscv32|simriscv64)": {
      "options": {
        "nnbd": "strong",
        "use-elf": true
      }
    },
    "vm-asan-(linux|mac)-(debug|product|release)-(ia32|x64|simarm|simarm64|simriscv32|simriscv64)": {
      "options": {
        "builder-tag": "asan",
        "timeout": 240,
        "nnbd": "strong"
      }
    },
    "vm-lsan-(linux|mac)-(debug|product|release)-(ia32|x64|simarm|simarm64|simriscv32|simriscv64)": {
      "options": {
        "builder-tag": "lsan",
        "timeout": 240,
        "nnbd": "strong"
      }
    },
    "vm-msan-linux-(debug|product|release)-(x64|simarm64|simriscv64)": {
      "options": {
        "builder-tag": "msan",
        "timeout": 240,
        "nnbd": "strong"
      }
    },
    "vm-tsan-(linux|mac)-(debug|product|release)-(x64|simarm64|simriscv64)": {
      "options": {
        "builder-tag": "tsan",
        "timeout": 240,
        "nnbd": "strong"
      }
    },
    "vm-ubsan-(linux|mac)-(debug|product|release)-(ia32|x64|simarm|simarm64|simriscv32|simriscv64)": {
      "options": {
        "builder-tag": "ubsan",
        "timeout": 240,
        "nnbd": "strong"
      }
    },
    "vm-aot-asan-(linux|mac)-(debug|product|release)-(x64|simarm|simarm64|simriscv32|simriscv64)": {
      "options": {
        "builder-tag": "asan",
        "timeout": 240,
        "nnbd": "strong",
        "compiler": "dartkp"
      }
    },
    "vm-aot-lsan-(linux|mac)-(debug|product|release)-(x64|simarm|simarm64|simriscv32|simriscv64)": {
      "options": {
        "builder-tag": "lsan",
        "timeout": 240,
        "nnbd": "strong",
        "compiler": "dartkp"
      }
    },
    "vm-aot-msan-linux-(debug|product|release)-(x64|simarm64|simriscv64)": {
      "options": {
        "builder-tag": "msan",
        "timeout": 240,
        "nnbd": "strong",
        "compiler": "dartkp"
      }
    },
    "vm-aot-tsan-(linux|mac)-(debug|product|release)-(x64|simarm64|simriscv64)": {
      "options": {
        "builder-tag": "tsan",
        "timeout": 240,
        "nnbd": "strong",
        "compiler": "dartkp"
      }
    },
    "vm-aot-ubsan-(linux|mac)-(debug|product|release)-(x64|simarm|simarm64|simriscv32|simriscv64)": {
      "options": {
        "builder-tag": "ubsan",
        "timeout": 240,
        "nnbd": "strong",
        "compiler": "dartkp"
      }
    },
    "dart2js-(linux|win)-chrome": {
      "options": {
        "nnbd": "strong",
        "use-sdk": true
      }
    },
    "dart2js-(linux|win)-firefox": {
      "options": {
        "nnbd": "strong",
        "use-sdk": true
      }
    },
    "dart2js-win-ie11": {
      "options": {
        "babel": "{\"presets\":[\"es2015\"]}",
        "nnbd": "strong",
        "use-sdk": true
      }
    },
    "dart2js-win-edge": {
      "options": {
        "nnbd": "strong",
        "use-sdk": true
      }
    },
    "dart2js-mac-(chrome|safari)": {
      "options": {
        "architecture": "arm64",
        "nnbd": "strong",
        "use-sdk": true
      }
    },
    "dart2js-minified-csp-linux-chrome": {
      "options": {
        "csp": true,
        "minified": true,
        "nnbd": "strong",
        "use-sdk": true
      }
    },
    "dart2js-minified-linux-d8": {
      "options": {
        "minified": true,
        "nnbd": "strong",
        "use-sdk": true
      }
    },
    "dart2js-production-linux-d8": {
      "options": {
        "builder-tag": "dart2js_production",
        "dart2js-options": [
          "-O3"
        ],
        "nnbd": "strong",
        "use-sdk": true
      }
    },
    "dart2js-o0-linux-d8": {
      "options": {
        "builder-tag": "dart2js_o0",
        "dart2js-options": [
          "-O0"
        ],
        "nnbd": "strong",
        "use-sdk": true
      }
    },
    "dart2js-canary-linux-(d8|chrome)": {
      "options": {
        "builder-tag": "dart2js_canary",
        "dart2js-options": [
          "--canary"
        ],
        "host-checked": true,
        "nnbd": "strong",
        "timeout": 240
      }
    },
    "dart2js-hostasserts-linux-d8": {
      "options": {
        "host-checked": true,
        "nnbd": "strong",
        "timeout": 240
      }
    },
    "dart2js-hostasserts-linux-(d8|chrome)-unsound": {
      "options": {
        "builder-tag": "dart2js-weak",
        "host-checked": true,
        "nnbd": "weak",
        "timeout": 240
      }
    },
    "dart2js-hostasserts-linux-(d8|chrome)-unsound_2": {
      "options": {
        "builder-tag": "legacy-test-suites",
        "host-checked": true,
        "nnbd": "weak",
        "timeout": 240
      }
    },
    "dart2js-hostasserts-minified-fragments-linux-d8": {
      "options": {
        "dart2js-options": [
          "--merge-fragments-threshold=3",
          "--simple-load-ids"
        ],
        "host-checked": true,
        "nnbd": "strong",
        "timeout": 240
      }
    },
    "dart2wasm-hostasserts-linux-x64-d8": {
      "options": {
        "host-checked": true,
        "timeout": 240,
        "builder-tag": "dart2wasm"
      }
    },
    "vm-aot-android-(debug|product|release)-arm_x64": {
      "options": {
        "builder-tag": "crossword",
        "use-elf": true,
        "nnbd": "strong"
      }
    },
    "vm-aot-android-(debug|product|release)-(arm|arm64|arm64c)": {
      "options": {
        "use-elf": true,
        "nnbd": "strong"
      }
    },
    "dartk-android-(debug|product|release)-(arm|arm64|arm64c)": {
      "options": {
        "vm-options": [
          "--no-sound-null-safety"
        ],
        "gen-kernel-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "dartkp-(linux|win|mac)-(debug|product|release)-(arm64|arm64c|simarm|simarm64|simarm64c|simriscv32|simriscv64)": {
      "options": {
        "use-elf": true,
        "vm-options": [
          "--no-sound-null-safety"
        ],
        "gen-kernel-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "dartkp-dwarf-(linux|win|mac)-product-(arm64|arm64c|simarm|simarm64|simarm64c|x64|x64c|simriscv32|simriscv64)": {
      "options": {
        "builder-tag": "dwarf",
        "vm-options": [
          "--dwarf_stack_traces",
          "--no-sound-null-safety"
        ],
        "gen-kernel-options": [
          "--no-sound-null-safety"
        ],
        "use-elf": true
      }
    },
    "dartkp-linux-(debug|product|release)-simarm-crossword": {
      "options": {
        "builder-tag": "crossword",
        "use-elf": true,
        "vm-options": [
          "--no-sound-null-safety"
        ],
        "gen-kernel-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "dartkp-weak-asserts-linux-(debug|product|release)-simarm-crossword": {
      "options": {
        "builder-tag": "crossword"
      }
    },
    "dartkp-strong-linux-(debug|product|release)-simarm-crossword": {
      "options": {
        "builder-tag": "crossword"
      }
    },
    "dartkp-(win|mac)-(debug|product|release)-simarm-crossword": {
      "options": {
        "builder-tag": "crossword",
        "use-elf": true,
        "vm-options": [
          "--no-sound-null-safety"
        ],
        "gen-kernel-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "dartkp-win-(product|release)-(x64|x64c)": {
      "options": {
        "use-elf": true,
        "vm-options": [
          "--no-sound-null-safety"
        ],
        "gen-kernel-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "dartkp-win-debug-(x64|x64c)": {
      "options": {
        "use-elf": true,
        "vm-options": [
          "--no-sound-null-safety"
        ],
        "gen-kernel-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "dartkp-(linux|mac)-(product|release)-(x64|x64c)": {
      "options": {
        "vm-options": [
          "--no-sound-null-safety"
        ],
        "gen-kernel-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "dartkp-obfuscate-(linux|mac|win)-(debug|product|release)-(x64|x64c)": {
      "options": {
        "builder-tag": "obfuscated",
        "vm-options": [
          "--obfuscate",
          "--no-sound-null-safety"
        ],
        "gen-kernel-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "dartkp-(linux|mac)-debug-(x64|x64c)": {
      "options": {
        "vm-options": [
          "--no-sound-null-safety"
        ],
        "gen-kernel-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "dartk-(linux|mac|win)-(debug|product|release)-(ia32|x64|x64c)": {
      "options": {
        "vm-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "dartk-linux-debug-(ia32|x64)-canary": {
      "options": {
        "builder-tag": "canary",
        "vm-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "dartkp-weak-asserts-(linux|mac)-(debug|product|release)-(arm64|x64|x64c)": {
      "options": {
        "enable-asserts": true,
        "builder-tag": "vm_nnbd"
      }
    },
    "dartkp-weak-asserts-(linux|mac)-(debug|product|release)-(simarm|simarm64|simarm64c|simriscv32|simriscv64)": {
      "options": {
        "enable-asserts": true,
        "use-elf": true,
        "builder-tag": "vm_nnbd"
      }
    },
    "dartkp-weak-asserts-win-(debug|product|release)-(simarm64|simarm64c|x64|x64c)": {
      "options": {
        "enable-asserts": true,
        "use-elf": true,
        "builder-tag": "vm_nnbd"
      }
    },
    "dartk-weak-asserts-(linux|mac|win)-(debug|product|release)-(arm64|ia32|simarm|simarm64|simarm64c|x64|x64c|simriscv32|simriscv64)": {
      "options": {
        "enable-asserts": true,
        "builder-tag": "vm_nnbd"
      }
    },
    "dartkp-strong-(linux|mac)-(debug|product|release)-(arm64|x64|x64c)": {
      "options": {
        "builder-tag": "vm_nnbd"
      }
    },
    "dartkp-strong-(linux|mac)-(debug|product|release)-(simarm|simarm64|simarm64c|simriscv32|simriscv64)": {
      "options": {
        "use-elf": true,
        "builder-tag": "vm_nnbd"
      }
    },
    "dartkp-strong-win-(debug|product|release)-(simarm64|simarm64c|x64|x64c)": {
      "options": {
        "use-elf": true,
        "builder-tag": "vm_nnbd"
      }
    },
    "dartk-checked-(linux|mac|win)-(debug|product|release)-(ia32|x64|x64c)": {
      "options": {
        "enable-asserts": true,
        "vm-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "dartk-(linux|mac|win)-(debug|product|release)-(arm64|arm64c|simarm|simarm64|simarm64c|simriscv32|simriscv64)": {
      "options": {
        "vm-options": [
          "--no-sound-null-safety"
        ],
        "gen-kernel-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "vm-eager-optimization-(linux|mac|win)-(debug|product|release)-(ia32|x64|x64c|simarm|simarm64|simarm64c|simriscv32|simriscv64)": {
      "options": {
        "builder-tag": "optimization_counter_threshold",
        "vm-options": [
          "--optimization-counter-threshold=5",
          "--random-seed=__RANDOM__"
        ],
        "nnbd": "strong"
      }
    },
    "vm-reload-(linux|mac|win)-(debug|product|release)-(ia32|x64|x64c)": {
      "options": {
        "hot-reload": true,
        "nnbd": "strong"
      }
    },
    "vm-reload-rollback-(linux|mac|win)-(debug|product|release)-(ia32|x64|x64c)": {
      "options": {
        "hot-reload-rollback": true,
        "nnbd": "strong"
      }
    },
    "dartk-linux-(debug|product|release)-(arm|arm64|arm64c|riscv32|riscv64)-qemu": {
      "options": {
        "use-qemu": true,
        "vm-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "dartkp-linux-(debug|product|release)-(arm|arm64|arm64c|riscv32|riscv64)-qemu": {
      "options": {
        "use-qemu": true,
        "vm-options": [
          "--no-sound-null-safety"
        ],
        "gen-kernel-options": [
          "--no-sound-null-safety"
        ]
      }
    },
    "vm-appjit-(linux|mac|win)-(debug|product|release)-(x64|arm64)": {
      "options": {
        "compiler": "app_jitk",
        "nnbd": "strong"
      }
    },
    "ddc-(linux|win)-chrome": {
      "options": {
        "checked": true,
        "nnbd": "strong",
        "use-sdk": true
      }
    },
    "ddc-mac-chrome": {
      "options": {
        "architecture": "arm64",
        "checked": true,
        "nnbd": "strong",
        "use-sdk": true
      }
    },
    "ddc-linux-firefox": {
      "options": {
        "checked": true,
        "nnbd": "strong",
        "use-sdk": true
      }
    },
    "ddc-linux-chrome-unsound": {
      "options": {
        "checked": true,
        "nnbd": "weak",
        "use-sdk": true
      }
    },
    "ddc-linux-chrome-unsound_2": {
      "options": {
        "builder-tag": "legacy-test-suites",
        "checked": true,
        "nnbd": "weak",
        "use-sdk": true
      }
    },
    "ddc-canary-linux-chrome": {
      "options": {
        "builder-tag": "canary",
        "checked": true,
        "ddc-options": [
          "--canary"
        ],
        "nnbd": "strong",
        "use-sdk": true
      }
    },
    "ddc-canary-linux-chrome-unsound": {
      "options": {
        "builder-tag": "canary",
        "checked": true,
        "ddc-options": [
          "--canary"
        ],
        "nnbd": "weak",
        "use-sdk": true
      }
    },
    "cfe-(linux|mac|win)": {
      "options": {
        "compiler": "fasta"
      }
    },
    "cfe-weak-(linux|mac|win)": {
      "options": {
        "compiler": "fasta"
      }
    },
    "cfe-strong-(linux|mac|win)": {
      "options": {
        "compiler": "fasta"
      }
    },
    "analyzer-(linux|mac|win)": {
      "options": {
        "compiler": "dart2analyzer",
        "use-sdk": true
      }
    },
    "analyzer-asserts-(linux|mac|win)": {
      "options": {
        "compiler": "dart2analyzer",
        "enable-asserts": true,
        "use-sdk": true
      }
    }
  },
  "builder_configurations": [
    {
      "builders": [
        "front-end-linux-release-x64",
        "front-end-mac-release-x64",
        "front-end-win-release-x64"
      ],
      "meta": {
        "description": "Runs the cfe tests."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk",
            "dartdevc_test",
            "kernel_platform_files",
            "runtime"
          ]
        },
        {
          "name": "co19_2 tests",
          "arguments": [
            "-ncfe-${system}",
            "co19_2"
          ],
          "fileset": "front-end",
          "shards": 2
        },
        {
          "name": "sdk tests",
          "arguments": [
            "-ncfe-${system}"
          ],
          "fileset": "front-end",
          "shards": 2
        },
        {
          "name": "unit tests (no git)",
          "arguments": [
            "-ncfe-unittest-asserts-${mode}-${system}",
            "pkg/pkg/(kernel|front_end|fasta)\/(*?)(?<!_git)_test"
          ],
          "fileset": "front-end",
          "shards": 3
        },
        {
          "name": "unit tests suites (no git)",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "testRunner": true,
          "arguments": [
            "--enable-asserts",
            "pkg/front_end/test/unit_test_suites.dart",
            "-ncfe-unittest-asserts-${mode}-${system}",
            "--skipTestsThatRequireGit"
          ],
          "fileset": "front-end",
          "shards": 3
        },
        {
          "name": "unit tests (with git)",
          "arguments": [
            "-ncfe-unittest-asserts-${mode}-${system}",
            "pkg/pkg/(kernel|front_end|fasta)\/(*?)(_git)_test"
          ]
        },
        {
          "name": "unit tests suites (with git)",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "testRunner": true,
          "arguments": [
            "--enable-asserts",
            "pkg/front_end/test/unit_test_suites.dart",
            "-ncfe-unittest-asserts-${mode}-${system}",
            "--onlyTestsThatRequireGit"
          ]
        }
      ]
    },
    {
      "builders": [
        "front-end-nnbd-linux-release-x64",
        "front-end-nnbd-mac-release-x64",
        "front-end-nnbd-win-release-x64"
      ],
      "meta": {
        "description": "Runs the front-end tests with NNBD"
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk",
            "dartdevc_test",
            "kernel_platform_files",
            "runtime"
          ]
        },
        {
          "name": "weak co19 tests",
          "arguments": [
            "-ncfe-weak-${system}",
            "co19"
          ],
          "fileset": "front-end",
          "shards": 2
        },
        {
          "name": "strong co19 tests",
          "arguments": [
            "-ncfe-strong-${system}",
            "co19"
          ],
          "fileset": "front-end",
          "shards": 2
        },
        {
          "name": "weak sdk tests",
          "arguments": [
            "-ncfe-weak-${system}",
            "corelib",
            "ffi",
            "language",
            "lib",
            "service"
          ]
        },
        {
          "name": "strong sdk tests",
          "arguments": [
            "-ncfe-strong-${system}",
            "corelib",
            "ffi",
            "language",
            "lib",
            "service"
          ]
        }
      ]
    },
    {
      "builders": [
        "vm-aot-android-release-arm_x64",
        "vm-aot-android-release-arm64c"
      ],
      "meta": {
        "description": "This configuration is used by the vm precomp builders on Android."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "dart_precompiled_runtime",
            "--os=android"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-aot-android-${mode}-${arch}",
            "-j2"
          ],
          "fileset": "vm-kernel",
          "shards": 15
        }
      ]
    },
    {
      "builders": [
        "vm-ffi-android-debug-arm64c",
        "vm-ffi-android-debug-arm",
        "vm-ffi-android-release-arm64c",
        "vm-ffi-android-release-arm",
        "vm-ffi-android-product-arm64c",
        "vm-ffi-android-product-arm"
      ],
      "meta": {
        "description": "This configuration is used for running FFI tests in JIT-mode on Android."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "--os=android"
          ]
        },
        {
          "name": "ffi tests",
          "arguments": [
            "-ndartk-android-${mode}-${arch}",
            "ffi"
          ],
          "fileset": "vm-kernel",
          "shards": 1
        }
      ]
    },
    {
      "builders": [
        "vm-precomp-ffi-qemu-linux-release-arm"
      ],
      "meta": {
        "description": "This configuration is used for running vm unit tests and FFI tests on qemu and FFI unit tests."
      },
      "steps": [
        {
          "name": "build run_ffi_unit_tests",
          "script": "tools/build.py",
          "arguments": [
            "--arch=x64",
            "--mode=debug",
            "run_ffi_unit_tests"
          ]
        },
        {
          "name": "ffi unit tests",
          "arguments": [
            "-nvm-ffi-unit-test",
            "ffi_unit"
          ]
        },
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "--use-qemu",
            "dart_precompiled_runtime",
            "runtime"
          ]
        },
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "--arch=simarm_x64",
            "gen_snapshot"
          ]
        },
        {
          "name": "vm unit tests",
          "arguments": [
            "-ndartk-linux-${mode}-arm-qemu",
            "vm/cc"
          ]
        },
        {
          "name": "ffi tests",
          "arguments": [
            "-ndartkp-linux-${mode}-arm-qemu",
            "ffi"
          ]
        }
      ]
    },
    {
      "builders": [
        "vm-precomp-ffi-qemu-linux-release-riscv64"
      ],
      "meta": {
        "description": "This configuration is used for running vm unit tests and FFI tests on qemu and FFI unit tests."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "--no-clang",
            "--no-goma",
            "--use-qemu",
            "--use-mallinfo2",
            "dart_precompiled_runtime",
            "runtime"
          ]
        },
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "--arch=simriscv64",
            "gen_snapshot"
          ]
        },
        {
          "name": "vm unit tests",
          "arguments": [
            "-ndartk-linux-${mode}-riscv64-qemu",
            "vm/cc"
          ]
        },
        {
          "name": "ffi tests",
          "arguments": [
            "-ndartkp-linux-${mode}-riscv64-qemu",
            "ffi"
          ]
        }
      ]
    },
    {
      "builders": [
        "vm-kernel-precomp-nnbd-mac-release-arm64"
      ],
      "meta": {
        "description": "This configuration is for the macOS arm64 VM AOT nnbd builder group."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "dart_precompiled_runtime",
            "gen_snapshot"
          ]
        },
        {
          "name": "build dart (cross x64)",
          "script": "tools/build.py",
          "arguments": [
            "--arch=simx64",
            "gen_snapshot"
          ]
        },
        {
          "name": "vm nnbd tests in strong mode",
          "arguments": [
            "-ndartkp-strong-${system}-${mode}-${arch}"
          ]
        }
      ]
    },
    {
      "builders": [
        "vm-kernel-precomp-nnbd-linux-debug-simriscv64",
        "vm-kernel-precomp-nnbd-linux-release-simarm64",
        "vm-kernel-precomp-nnbd-mac-release-simarm64"
      ],
      "meta": {
        "description": "This configuration is for the VM AOT nnbd builder group."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "dart_precompiled_runtime"
          ]
        },
        {
          "name": "vm nnbd tests in strong mode",
          "arguments": [
            "-ndartkp-strong-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 6
        },
        {
          "name": "co19 nnbd tests in strong mode",
          "arguments": [
            "-ndartkp-strong-${system}-${mode}-${arch}",
            "co19"
          ],
          "fileset": "vm-kernel",
          "shards": 15
        }
      ]
    },
    {
      "builders": [
        "vm-kernel-precomp-nnbd-linux-debug-x64",
        "vm-kernel-precomp-nnbd-linux-release-x64",
        "vm-kernel-precomp-nnbd-win-release-x64"
      ],
      "meta": {
        "description": "This configuration is for the VM AOT nnbd builder group."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "dart_precompiled_runtime"
          ]
        },
        {
          "name": "vm nnbd tests in weak mode with asserts",
          "arguments": [
            "-ndartkp-weak-asserts-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 6
        },
        {
          "name": "vm nnbd tests in strong mode",
          "arguments": [
            "-ndartkp-strong-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 6
        },
        {
          "name": "co19 nnbd tests in strong mode",
          "arguments": [
            "-ndartkp-strong-${system}-${mode}-${arch}",
            "co19"
          ],
          "fileset": "vm-kernel",
          "shards": 15
        },
        {
          "name": "co19 nnbd tests in weak mode with asserts",
          "arguments": [
            "-ndartkp-weak-asserts-${system}-${mode}-${arch}",
            "co19"
          ],
          "fileset": "vm-kernel",
          "shards": 15
        }
      ]
    },
    {
      "builders": [
        "vm-kernel-precomp-linux-release-x64"
      ],
      "meta": {
        "description": "This configuration is used by the vm kernel precomp linux release builders. (includes co19_2 testing)"
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "dart_precompiled_runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-ndartkp-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 6
        },
        {
          "name": "vm co19_2 tests",
          "arguments": [
            "-ndartkp-${system}-${mode}-${arch}",
            "co19_2"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        }
      ]
    },
    {
      "builders": [
        "vm-linux-debug-ia32",
        "vm-linux-debug-simriscv64",
        "vm-linux-debug-x64",
        "vm-linux-debug-x64c",
        "vm-linux-release-ia32",
        "vm-linux-release-simarm",
        "vm-linux-release-simarm64",
        "vm-linux-release-x64",
        "vm-mac-debug-arm64",
        "vm-mac-debug-x64",
        "vm-mac-release-arm64",
        "vm-mac-release-x64",
        "vm-win-debug-x64",
        "vm-win-debug-x64c",
        "vm-win-release-ia32",
        "vm-win-release-x64"
      ],
      "meta": {
        "description": "This configuration is used by the VM JIT builders."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        },
        {
          "name": "co19 tests",
          "arguments": [
            "-nvm-${system}-${mode}-${arch}",
            "co19"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        }
      ]
    },
    {
      "builders": [
        "vm-aot-linux-debug-x64c",
        "vm-aot-linux-product-x64",
        "vm-aot-win-debug-x64c",
        "vm-aot-win-product-x64"
      ],
      "meta": {
        "description": "This configuration is used by the VM AOT builders."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "dart_precompiled_runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-aot-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        }
      ]
    },
    {
      "builders": [
        "vm-aot-mac-product-x64"
      ],
      "meta": {
        "description": "This configuration is used by the vm AOT builders. Without shards because shards are missing XCode."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "dart_precompiled_runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-aot-${system}-${mode}-${arch}"
          ]
        }
      ]
    },
    {
      "builders": [
        "vm-kernel-precomp-linux-debug-x64",
        "vm-kernel-precomp-linux-release-simarm"
      ],
      "meta": {
        "description": "This configuration is used by the vm kernel precomp debug builders. It uses 15 shards for testing to avoid 1 hour shard timeouts."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "dart_precompiled_runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-ndartkp-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 15
        }
      ]
    },
    {
      "builders": [
        "vm-kernel-precomp-dwarf-linux-product-x64"
      ],
      "meta": {
        "description": "This configuration is used by the vm kernel precomp builders with dwarf stack traces."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "dart_precompiled_runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-ndartkp-dwarf-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        }
      ]
    },
    {
      "builders": [
        "vm-kernel-precomp-obfuscate-linux-release-x64"
      ],
      "meta": {
        "description": "This configuration is used by the obfuscated vm kernel precomp builders."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "dart_precompiled_runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-ndartkp-obfuscate-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        }
      ]
    },
    {
      "builders": [
        "vm-asan-linux-release-x64",
        "vm-msan-linux-release-x64",
        "vm-ubsan-linux-release-x64"
      ],
      "meta": {
        "description": "This configuration is used by the VM/JIT builders with sanitizers."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-${sanitizer}-${system}-${mode}-${arch}",
            "corelib",
            "ffi",
            "language",
            "lib",
            "samples",
            "standalone",
            "utils",
            "vm"
          ],
          "fileset": "vm-kernel",
          "shards": 3
        }
      ]
    },
    {
      "builders": [
        "vm-tsan-linux-release-x64"
      ],
      "meta": {
        "description": "This configuration is used by the VM/JIT builders with sanitizers."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-${sanitizer}-${system}-${mode}-${arch}",
            "vm",
            "standalone"
          ],
          "fileset": "vm-kernel",
          "shards": 8
        }
      ]
    },
    {
      "builders": [
        "vm-aot-asan-linux-release-x64",
        "vm-aot-msan-linux-release-x64",
        "vm-aot-ubsan-linux-release-x64"
      ],
      "meta": {
        "description": "This configuration is used by the VM/AOT builders with sanitizers."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "runtime_precompiled"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-aot-${sanitizer}-${system}-${mode}-${arch}",
            "vm",
            "standalone"
          ],
          "fileset": "vm-kernel",
          "shards": 3
        }
      ]
    },
    {
      "builders": [
        "vm-aot-tsan-linux-release-x64"
      ],
      "meta": {
        "description": "This configuration is used by the VM/AOT builders with sanitizers."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "runtime_precompiled"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-aot-${sanitizer}-${system}-${mode}-${arch}",
            "vm",
            "standalone"
          ],
          "fileset": "vm-kernel",
          "shards": 8
        }
      ]
    },
    {
      "builders": [
        "vm-kernel-gcc-linux"
      ],
      "meta": {
        "description": "This configuration builds the VM with GCC."
      },
      "steps": [
        {
          "name": "build dart ia32",
          "script": "tools/build.py",
          "arguments": [
            "--mode=all",
            "--arch=ia32",
            "--no-clang",
            "--no-goma",
            "runtime"
          ]
        },
        {
          "name": "build dart x64",
          "script": "tools/build.py",
          "arguments": [
            "--mode=all",
            "--arch=x64",
            "--no-clang",
            "--no-goma",
            "runtime"
          ]
        },
        {
          "name": "build dart simarm",
          "script": "tools/build.py",
          "arguments": [
            "--mode=all",
            "--arch=simarm",
            "--no-clang",
            "--no-goma",
            "runtime"
          ]
        },
        {
          "name": "build dart simarm64",
          "script": "tools/build.py",
          "arguments": [
            "--mode=all",
            "--arch=simarm64",
            "--no-clang",
            "--no-goma",
            "runtime"
          ]
        },
        {
          "name": "build dart simriscv64",
          "script": "tools/build.py",
          "arguments": [
            "--mode=all",
            "--arch=simriscv64",
            "--no-clang",
            "--no-goma",
            "runtime"
          ]
        }
      ]
    },
    {
      "builders": [
        "vm-kernel-msvc-windows"
      ],
      "meta": {
        "description": "This configuration builds the VM with MSVC."
      },
      "steps": [
        {
          "name": "build dart debug arm64",
          "script": "tools/build.py",
          "arguments": [
            "--mode=debug",
            "--arch=arm64",
            "--no-clang",
            "--no-goma",
            "dart_precompiled_runtime",
            "gen_snapshot",
            "runtime"
          ]
        },
        {
          "name": "build dart release arm64",
          "script": "tools/build.py",
          "arguments": [
            "--mode=release",
            "--arch=arm64",
            "--no-clang",
            "--no-goma",
            "dart_precompiled_runtime",
            "gen_snapshot",
            "runtime"
          ]
        },
        {
          "name": "build dart product arm64",
          "script": "tools/build.py",
          "arguments": [
            "--mode=product",
            "--arch=arm64",
            "--no-clang",
            "--no-goma",
            "dart_precompiled_runtime",
            "gen_snapshot",
            "runtime"
          ]
        },
        {
          "name": "build dart debug x64",
          "script": "tools/build.py",
          "arguments": [
            "--mode=debug",
            "--arch=x64",
            "--no-clang",
            "--no-goma",
            "dart_precompiled_runtime",
            "gen_snapshot",
            "runtime"
          ]
        },
        {
          "name": "build dart release x64",
          "script": "tools/build.py",
          "arguments": [
            "--mode=release",
            "--arch=x64",
            "--no-clang",
            "--no-goma",
            "dart_precompiled_runtime",
            "gen_snapshot",
            "runtime"
          ]
        },
        {
          "name": "build dart product x64",
          "script": "tools/build.py",
          "arguments": [
            "--mode=product",
            "--arch=x64",
            "--no-clang",
            "--no-goma",
            "dart_precompiled_runtime",
            "gen_snapshot",
            "runtime"
          ]
        }
      ]
    },
    {
      "builders": [
        "vm-kernel-win-debug-ia32"
      ],
      "meta": {
        "description": "This configuration is for the kernel builder group."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-ndartk-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        }
      ]
    },
    {
      "builders": [
        "vm-kernel-linux-release-x64",
        "vm-kernel-linux-debug-x64"
      ],
      "meta": {
        "description": "This configuration is for the co19_2 kernel builder group."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-ndartk-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        },
        {
          "name": "vm co19 tests",
          "arguments": [
            "-ndartk-${system}-${mode}-${arch}",
            "co19_2"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        },
        {
          "name": "vm nnbd tests in weak mode with asserts",
          "arguments": [
            "-ndartk-weak-asserts-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 6
        },
        {
          "name": "vm co19 nnbd tests in weak mode with asserts",
          "arguments": [
            "-ndartk-weak-asserts-${system}-${mode}-${arch}",
            "co19"
          ],
          "fileset": "vm-kernel",
          "shards": 8
        }
      ]
    },
    {
      "builders": [
        "vm-kernel-checked-linux-release-x64"
      ],
      "meta": {
        "description": "This configuration is for the kernel builder group in checked mode."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-ndartk-checked-linux-release-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        }
      ]
    },
    {
      "builders": [
        "vm-checked-mac-release-arm64"
      ],
      "meta": {
        "description": "This configuration is for the VM in checked mode."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-checked-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        }
      ]
    },
    {
      "builders": [
        "vm-fuchsia-release-arm64",
        "vm-fuchsia-release-x64"
      ],
      "meta": {
        "description": "This configuration is for the VM fuchsia builder."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "--os=fuchsia",
            "runtime",
            "create_sdk",
            "fuchsia_test_package",
            "fuchsia_ffi_test_package"
          ]
        }
      ]
    },
    {
      "builders": [
        "vm-linux-release-arm64"
      ],
      "meta": {
        "description": "This configuration is for the ARM64 JIT builders."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 1
        }
      ]
    },
    {
      "builders": [
        "vm-aot-linux-release-arm64"
      ],
      "meta": {
        "description": "This configuration is for the ARM64 AOT builders."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "dart_precompiled_runtime",
            "gen_snapshot",
            "runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-aot-${system}-${mode}-${arch}"
          ],
          "fileset": "vm-kernel",
          "shards": 1
        }
      ]
    },
    {
      "builders": [
        "vm-appjit-linux-debug-x64",
        "vm-appjit-linux-release-x64",
        "vm-appjit-linux-product-x64"
      ],
      "meta": {
        "description": "This configuration is used by the VM AppJIT builder group."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-appjit-${system}-${mode}-${arch}"
          ],
          "shards": 6,
          "fileset": "vm-kernel"
        }
      ]
    },
    {
      "builders": [
        "ddc-linux-chrome",
        "ddc-win-chrome"
      ],
      "meta": {
        "description": "DDC running in Chrome on Linux and Windows."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "dart2js_bot",
            "dartdevc_test"
          ]
        },
        {
          "name": "ddc sdk tests",
          "arguments": [
            "-nddc-${system}-chrome",
            "corelib",
            "dartdevc",
            "language",
            "lib",
            "web"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "ddc co19 tests",
          "arguments": [
            "-nddc-${system}-chrome",
            "co19"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "ddc modular tests",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "testRunner": true,
          "arguments": [
            "pkg/dev_compiler/test/modular_suite.dart",
            "-nddc-${system}-chrome",
            "--verbose",
            "--use-sdk"
          ]
        },
        {
          "name": "ddc sourcemap tests",
          "script": "out/ReleaseX64/dart",
          "arguments": [
            "pkg/dev_compiler/test/sourcemap/sourcemaps_suite.dart",
            "-rnone"
          ]
        },
        {
          "name": "ddc sourcemap stacktrace tests",
          "script": "out/ReleaseX64/dart",
          "arguments": [
            "pkg/dev_compiler/test/sourcemap/stacktrace_suite.dart",
            "-rnone"
          ]
        },
        {
          "name": "ddc worker tests",
          "script": "out/ReleaseX64/dart",
          "arguments": [
            "pkg/dev_compiler/test/worker/worker_test.dart",
            "-rnone"
          ]
        },
        {
          "name": "ddc self host test",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "arguments": [
            "--enable-asserts",
            "pkg/dev_compiler/bin/dartdevc.dart",
            "--sound-null-safety",
            "-o",
            "out/ReleaseX64/dartdevc.js",
            "pkg/dev_compiler/bin/dartdevc.dart"
          ]
        }
      ]
    },
    {
      "builders": [
        "ddc-mac-chrome"
      ],
      "meta": {
        "description": "DDC running in Chrome on Mac."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "--arch=arm64",
            "dart2js_bot",
            "dartdevc_test"
          ]
        },
        {
          "name": "ddc sdk tests",
          "arguments": [
            "-nddc-mac-chrome",
            "--arch=arm64",
            "corelib",
            "dartdevc",
            "language",
            "lib",
            "web"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "ddc modular tests",
          "script": "xcodebuild/ReleaseARM64/dart-sdk/bin/dart",
          "testRunner": true,
          "arguments": [
            "pkg/dev_compiler/test/modular_suite.dart",
            "-nddc-mac-chrome",
            "--verbose",
            "--use-sdk"
          ]
        },
        {
          "name": "ddc sourcemap tests",
          "script": "xcodebuild/ReleaseARM64/dart",
          "arguments": [
            "pkg/dev_compiler/test/sourcemap/sourcemaps_suite.dart",
            "-rnone"
          ]
        },
        {
          "name": "ddc sourcemap stacktrace tests",
          "script": "xcodebuild/ReleaseARM64/dart",
          "arguments": [
            "pkg/dev_compiler/test/sourcemap/stacktrace_suite.dart",
            "-rnone"
          ]
        },
        {
          "name": "ddc worker tests",
          "script": "xcodebuild/ReleaseARM64/dart",
          "arguments": [
            "pkg/dev_compiler/test/worker/worker_test.dart",
            "-rnone"
          ]
        },
        {
          "name": "ddc self host test",
          "script": "xcodebuild/ReleaseARM64/dart-sdk/bin/dart",
          "arguments": [
            "--enable-asserts",
            "pkg/dev_compiler/bin/dartdevc.dart",
            "--sound-null-safety",
            "-o",
            "xcodebuild/ReleaseARM64/dartdevc.js",
            "pkg/dev_compiler/bin/dartdevc.dart"
          ]
        }
      ]
    },
    {
      "builders": [
        "ddc-linux-firefox"
      ],
      "meta": {
        "description": "DDC running in Firefox on Linux ."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "dart2js_bot",
            "dartdevc_test"
          ]
        },
        {
          "name": "ddc sdk tests",
          "arguments": [
            "-nddc-${system}-firefox",
            "corelib",
            "dartdevc",
            "language",
            "lib",
            "web"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "ddc co19 tests",
          "arguments": [
            "-nddc-${system}-firefox",
            "co19"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        }
      ]
    },
    {
      "builders": [
        "ddc-linux-chrome-unsound"
      ],
      "meta": {
        "description": "DDC without sound null safety running in Chrome on Linux."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "dartdevc_test"
          ]
        },
        {
          "name": "ddc sdk tests unsound",
          "arguments": [
            "-nddc-linux-chrome-unsound",
            "corelib",
            "dartdevc",
            "language",
            "lib",
            "web"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "ddc sdk _2 tests",
          "arguments": [
            "-nddc-linux-chrome-unsound_2",
            "corelib_2",
            "dartdevc_2",
            "language_2",
            "lib_2",
            "web_2"
          ],
          "shards": 6,
          "fileset": "web_platform"
        },
        {
          "name": "ddc co19 tests unsound",
          "arguments": [
            "-nddc-linux-chrome-unsound",
            "co19"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "ddc co19_2 tests",
          "arguments": [
            "-nddc-linux-chrome-unsound_2",
            "co19_2"
          ],
          "shards": 6,
          "fileset": "web_platform"
        },
        {
          "name": "ddc modular tests unsound",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "testRunner": true,
          "arguments": [
            "pkg/dev_compiler/test/modular_suite_unsound.dart",
            "-nddc-linux-chrome-unsound",
            "--verbose",
            "--use-sdk"
          ]
        }
      ]
    },
    {
      "builders": [
        "ddc-canary-linux-chrome"
      ],
      "meta": {
        "description": "DDC in canary mode running in Chrome on Linux."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "dartdevc_test",
            "--gn-args=ddc_canary=true"
          ]
        },
        {
          "name": "ddc sdk tests",
          "arguments": [
            "-nddc-canary-linux-chrome",
            "corelib",
            "dartdevc",
            "language",
            "lib",
            "web"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "ddc sdk tests unsound",
          "arguments": [
            "-nddc-canary-linux-chrome-unsound",
            "corelib",
            "dartdevc",
            "language",
            "lib",
            "web"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "ddc co19 tests",
          "arguments": [
            "-nddc-canary-linux-chrome",
            "co19"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "ddc co19 tests unsound",
          "arguments": [
            "-nddc-canary-linux-chrome-unsound",
            "co19"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "ddc modular tests unsound",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "testRunner": true,
          "arguments": [
            "pkg/dev_compiler/test/modular_suite_canary_unsound.dart",
            "-nddc-canary-linux-chrome-unsound",
            "--verbose",
            "--use-sdk"
          ]
        }
      ]
    },
    {
      "builders": [
        "vm-eager-optimization-linux-release-ia32",
        "vm-eager-optimization-linux-release-x64"
      ],
      "meta": {
        "description": "This is the configuration for the VM builders with a lower optimization counter threshold."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-eager-optimization-linux-release-${arch}",
            "corelib",
            "ffi",
            "language",
            "lib",
            "samples",
            "standalone",
            "utils",
            "vm"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        }
      ]
    },
    {
      "builders": [
        "vm-reload-linux-debug-x64",
        "vm-reload-linux-release-x64"
      ],
      "meta": {
        "description": "This is the configuration for the kernel hot reload builders."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-reload-${system}-${mode}-${arch}",
            "corelib",
            "ffi",
            "language",
            "lib",
            "samples",
            "standalone",
            "utils",
            "vm"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        }
      ]
    },
    {
      "builders": [
        "vm-reload-rollback-linux-debug-x64",
        "vm-reload-rollback-linux-release-x64"
      ],
      "meta": {
        "description": "This is the configuration for kernel reload rollback builders."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-nvm-reload-rollback-linux-${mode}-${arch}",
            "corelib",
            "ffi",
            "language",
            "lib",
            "samples",
            "standalone",
            "utils",
            "vm"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        }
      ]
    },
    {
      "builders": [
        "dart2js-canary-linux"
      ],
      "meta": {
        "description": "dart2js canary mode tests."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk",
            "dart2js_bot"
          ]
        },
        {
          "name": "dart2js d8 tests",
          "arguments": [
            "-ndart2js-canary-linux-d8",
            "corelib",
            "language",
            "web"
          ],
          "shards": 6,
          "fileset": "web_platform_hostasserts_nnbd"
        },
        {
          "name": "dart2js chrome tests",
          "arguments": [
            "-ndart2js-canary-linux-chrome",
            "lib",
            "web"
          ],
          "shards": 3,
          "fileset": "web_platform_hostasserts_nnbd"
        },
        {
          "name": "dart2js chrome co19 tests",
          "arguments": [
            "-ndart2js-canary-linux-chrome",
            "co19"
          ],
          "shards": 6,
          "fileset": "web_platform_hostasserts_nnbd"
        }
      ]
    },
    {
      "builders": [
        "dart2js-unit-linux-x64-release"
      ],
      "meta": {
        "description": "Runs the dart2js unit tests."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk"
          ]
        },
        {
          "name": "dart2js legacy modular tests",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "testRunner": true,
          "arguments": [
            "pkg/compiler/tool/modular_test_suite_legacy.dart",
            "-nweb-unittest-asserts-legacy-linux",
            "--verbose",
            "--use-sdk"
          ]
        },
        {
          "name": "dart2js modular tests",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "testRunner": true,
          "arguments": [
            "pkg/compiler/tool/modular_test_suite.dart",
            "-nweb-unittest-asserts-linux",
            "--verbose",
            "--use-sdk"
          ]
        },
        {
          "name": "js_runtime unit tests",
          "arguments": [
            "-nweb-unittest-asserts-linux",
            "pkg//js_runtime/"
          ]
        },
        {
          "name": "dart2js unit tests",
          "arguments": [
            "-nweb-unittest-asserts-linux",
            "pkg//compiler/"
          ],
          "shards": 3,
          "fileset": "web_platform_nnbd"
        }
      ]
    },
    {
      "builders": [
        "dart2js-hostasserts-linux-d8"
      ],
      "meta": {
        "description": "dart2js tests with assertions during compilation"
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "dart2js_bot"
          ]
        },
        {
          "name": "dart2js tests",
          "arguments": [
            "-ndart2js-hostasserts-linux-d8",
            "corelib",
            "language",
            "lib",
            "pkg",
            "web"
          ],
          "shards": 6,
          "fileset": "web_platform_hostasserts_nnbd"
        },
        {
          "name": "dart2js co19 tests",
          "arguments": [
            "-ndart2js-hostasserts-linux-d8",
            "co19"
          ],
          "shards": 6,
          "fileset": "web_platform_hostasserts_nnbd"
        }
      ]
    },
    {
      "builders": [
        "dart2js-linux-chrome",
        "dart2js-linux-firefox",
        "dart2js-win-chrome",
        "dart2js-win-firefox"
      ],
      "meta": {
        "description": "dart2js browser tests"
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk"
          ]
        },
        {
          "name": "dart2js tests",
          "arguments": [
            "-ndart2js-${system}-${runtime}",
            "corelib",
            "language",
            "lib",
            "pkg",
            "web"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "dart2js co19 tests",
          "arguments": [
            "-ndart2js-${system}-${runtime}",
            "co19"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        }
      ]
    },
    {
      "builders": [
        "dart2js-mac-chrome",
        "dart2js-mac-safari"
      ],
      "meta": {
        "description": "dart2js browser tests"
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "--arch=arm64",
            "create_sdk"
          ]
        },
        {
          "name": "dart2js tests",
          "arguments": [
            "-ndart2js-${system}-${runtime}",
            "--arch=arm64",
            "corelib",
            "language",
            "lib",
            "pkg",
            "web"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "dart2js co19 tests",
          "arguments": [
            "-ndart2js-${system}-${runtime}",
            "--arch=arm64",
            "co19"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        }
      ]
    },
    {
      "builders": [
        "dart2js-minified-linux-d8"
      ],
      "meta": {
        "description": "dart2js minified d8 tests"
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk"
          ]
        },
        {
          "name": "dart2js tests",
          "arguments": [
            "-ndart2js-minified-linux-d8",
            "corelib",
            "language",
            "lib",
            "pkg",
            "web"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "dart2js production tests",
          "arguments": [
            "-ndart2js-production-linux-d8",
            "corelib",
            "language",
            "lib",
            "pkg",
            "web"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        },
        {
          "name": "dart2js -O0 smoke tests",
          "arguments": [
            "-ndart2js-o0-linux-d8",
            "web"
          ]
        },
        {
          "name": "dart2js hostasserts fragment merging tests",
          "arguments": [
            "-ndart2js-hostasserts-minified-fragments-linux-d8",
            "web/deferred/"
          ]
        }
      ]
    },
    {
      "builders": [
        "dart2js-minified-csp-linux-chrome"
      ],
      "meta": {
        "description": "dart2js tests in csp and minified mode."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk"
          ]
        },
        {
          "name": "dart2js tests",
          "arguments": [
            "-ndart2js-minified-csp-linux-chrome",
            "corelib",
            "language",
            "lib",
            "observatory_ui",
            "pkg",
            "web"
          ],
          "shards": 6,
          "fileset": "web_platform_nnbd"
        }
      ]
    },
    {
      "builders": [
        "dart2js-hostasserts-linux-unsound"
      ],
      "meta": {
        "description": "dart2js unsound tests with assertions during compilation"
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk",
            "dart2js_bot"
          ]
        },
        {
          "name": "dart2js d8 tests",
          "arguments": [
            "-ndart2js-hostasserts-linux-d8-unsound",
            "corelib",
            "language"
          ],
          "shards": 6,
          "fileset": "web_platform_hostasserts_nnbd"
        },
        {
          "name": "dart2js chrome tests",
          "arguments": [
            "-ndart2js-hostasserts-linux-chrome-unsound",
            "lib",
            "pkg",
            "web"
          ],
          "shards": 3,
          "fileset": "web_platform_hostasserts_nnbd"
        },
        {
          "name": "dart2js chrome co19 tests",
          "arguments": [
            "-ndart2js-hostasserts-linux-chrome-unsound",
            "co19"
          ],
          "shards": 6,
          "fileset": "web_platform_hostasserts_nnbd"
        },
        {
          "name": "dart2js chrome _2 tests",
          "arguments": [
            "-ndart2js-hostasserts-linux-chrome-unsound_2",
            "corelib_2",
            "language_2",
            "lib_2",
            "web_2"
          ],
          "shards": 6,
          "fileset": "web_platform_hostasserts"
        },
        {
          "name": "dart2js chrome co19_2 tests",
          "arguments": [
            "-ndart2js-hostasserts-linux-chrome-unsound_2",
            "co19_2"
          ],
          "shards": 6,
          "fileset": "web_platform_hostasserts"
        }
      ]
    },
    {
      "builders": [
        "dart2wasm-linux-x64-d8"
      ],
      "meta": {
        "description": "dart2wasm tests."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "runtime",
            "dart2wasm"
          ]
        },
        {
          "name": "dart2wasm d8 tests",
          "arguments": [
            "-ndart2wasm-hostasserts-linux-x64-d8",
            "co19",
            "corelib",
            "language",
            "lib",
            "web"
          ],
          "shards": 10,
          "fileset": "dart2wasm_hostasserts"
        }
      ]
    },
    {
      "builders": [
        "debianpackage-linux"
      ],
      "meta": {
        "description": "This configuration is used by the debianpackage-builder."
      },
      "steps": [
        {
          "name": "build debian package",
          "script": "tools/linux_dist_support/run_debian_build.sh",
          "arguments": []
        },
        {
          "name": "upload debian packages",
          "script": "tools/linux_dist_support/upload_debian_packages.py",
          "arguments": []
        }
      ]
    },
    {
      "builders": [
        "analyzer-linux-release",
        "analyzer-mac-release"
      ],
      "meta": {
        "description": "This configuration is used by the analyzer builders."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk",
            "utils/dartanalyzer"
          ]
        },
        {
          "name": "analyzer unit tests",
          "arguments": [
            "-nanalyzer-unittest-asserts-${mode}-${system}",
            "pkg/analyzer"
          ],
          "shards": 4,
          "fileset": "analyzer_unit_tests"
        },
        {
          "name": "analysis_server unit tests",
          "arguments": [
            "-nanalyzer-unittest-asserts-${mode}-${system}",
            "pkg/analysis_server"
          ],
          "shards": 4,
          "fileset": "analyzer_unit_tests"
        },
        {
          "name": "nnbd_migration unit tests",
          "arguments": [
            "-nanalyzer-unittest-asserts-${mode}-${system}",
            "pkg/nnbd_migration"
          ],
          "shards": 1,
          "fileset": "analyzer_unit_tests"
        },
        {
          "name": "analyze tests enable-asserts",
          "arguments": [
            "-nanalyzer-asserts-${system}"
          ]
        },
        {
          "name": "analyze migrated tests enable-asserts",
          "arguments": [
            "-nanalyzer-asserts-${system}",
            "corelib",
            "ffi",
            "language",
            "lib",
            "standalone"
          ]
        },
        {
          "name": "analyze pkg tests enable-asserts",
          "arguments": [
            "-nanalyzer-asserts-${system}",
            "pkg"
          ]
        },
        {
          "name": "analyzer_cli unit tests",
          "arguments": [
            "-nanalyzer-unittest-asserts-${mode}-${system}",
            "pkg/analyzer_cli"
          ]
        },
        {
          "name": "analyzer_plugin unit tests",
          "arguments": [
            "-nanalyzer-unittest-asserts-${mode}-${system}",
            "pkg/analyzer_plugin"
          ]
        },
        {
          "name": "analyze co19 tests",
          "arguments": [
            "-nanalyzer-asserts-${system}",
            "co19",
            "co19_2"
          ]
        }
      ]
    },
    {
      "builders": [
        "analyzer-win-release"
      ],
      "meta": {
        "description": "This configuration is used by the analyzer windows builder."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk",
            "utils/dartanalyzer"
          ]
        },
        {
          "name": "analyzer unit tests",
          "arguments": [
            "-nanalyzer-unittest-asserts-${mode}-${system}",
            "pkg/analyzer"
          ],
          "shards": 4,
          "fileset": "analyzer_unit_tests"
        },
        {
          "name": "analysis_server unit tests",
          "arguments": [
            "-nanalyzer-unittest-asserts-${mode}-${system}",
            "pkg/analysis_server"
          ],
          "shards": 4,
          "fileset": "analyzer_unit_tests"
        },
        {
          "name": "nnbd_migration unit tests",
          "arguments": [
            "-nanalyzer-unittest-asserts-${mode}-${system}",
            "pkg/nnbd_migration"
          ],
          "shards": 1,
          "fileset": "analyzer_unit_tests"
        },
        {
          "name": "analyze tests enable-asserts",
          "arguments": [
            "-nanalyzer-asserts-${system}"
          ]
        },
        {
          "name": "analyze migrated tests enable-asserts",
          "arguments": [
            "-nanalyzer-asserts-${system}",
            "corelib",
            "ffi",
            "language",
            "lib",
            "standalone"
          ]
        },
        {
          "name": "analyze pkg tests enable-asserts",
          "arguments": [
            "-nanalyzer-asserts-${system}",
            "pkg"
          ]
        },
        {
          "name": "analyzer_cli unit tests",
          "arguments": [
            "-nanalyzer-unittest-asserts-${mode}-${system}",
            "pkg/analyzer_cli"
          ]
        },
        {
          "name": "analyzer_plugin unit tests",
          "arguments": [
            "-nanalyzer-unittest-asserts-${mode}-${system}",
            "pkg/analyzer_plugin"
          ]
        },
        {
          "name": "benchmark analysis server",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "arguments": [
            "pkg/analysis_server/benchmark/perf/benchmark_uploader.dart"
          ]
        }
      ]
    },
    {
      "builders": [
        "analyzer-analysis-server-linux"
      ],
      "meta": {
        "description": "Analyze repository packages."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk",
            "utils/dartanalyzer"
          ]
        },
        {
          "name": "analyze runtime/tools/dartfuzz",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "arguments": [
            "analyze",
            "--suppress-analytics",
            "runtime/tools/dartfuzz"
          ]
        },
        {
          "name": "analyze runtime/tests/concurrency/generate_stress_test.dart",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "arguments": [
            "analyze",
            "--suppress-analytics",
            "runtime/tests/concurrency/generate_stress_test.dart"
          ]
        },
        {
          "name": "analyze runtime/tests/concurrency/run_stress_test_shards.dart",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "arguments": [
            "analyze",
            "--suppress-analytics",
            "runtime/tests/concurrency/run_stress_test_shards.dart"
          ]
        },
        {
          "name": "analyze runtime/observatory",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "arguments": [
            "analyze",
            "--suppress-analytics",
            "runtime/observatory"
          ]
        },
        {
          "_comment": "This uses analyzer_cli which is deprecated.",
          "name": "dartanalyzer --batch tests",
          "arguments": [
            "-nanalyzer-${system}"
          ]
        },
        {
          "_comment": "This uses analyzer_cli which is deprecated.",
          "name": "dartanalyzer --batch pkg tests",
          "arguments": [
            "-nanalyzer-${system}",
            "pkg"
          ]
        }
      ]
    },
    {
      "builders": [
        "pkg-linux-release",
        "pkg-win-release",
        "pkg-mac-release"
      ],
      "meta": {
        "description": "This configuration is used by the release pkg builders."
      },
      "steps": [
        {
          "name": "validate pkg/ pubspec files",
          "script": "tools/sdks/dart-sdk/bin/dart",
          "arguments": [
            "tools/package_deps/bin/package_deps.dart"
          ]
        },
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk",
            "dartdevc_test"
          ]
        },
        {
          "name": "validate SDK API docs",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "arguments": [
            "doc",
            "--sdk-docs",
            "--dry-run",
            "--verbose"
          ]
        },
        {
          "name": "validate SDK API doc code samples",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "arguments": [
            "tools/verify_docs/bin/verify_docs.dart",
            "dart:_http",
            "dart:_internal",
            "dart:cli",
            "dart:convert",
            "dart:developer",
            "dart:ffi",
            "dart:isolate",
            "dart:js",
            "dart:js_util",
            "dart:math",
            "dart:mirrors",
            "dart:wasm"
          ]
        },
        {
          "name": "validate SDK API data-driven fixes",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "arguments": [
            "fix",
            "--suppress-analytics",
            "--compare-to-golden",
            "tests/lib/fix_data_tests"
          ]
        },
        {
          "name": "analyze pkg/",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "arguments": [
            "analyze",
            "--suppress-analytics",
            "--fatal-infos",
            "pkg"
          ]
        },
        {
          "name": "package unit tests",
          "arguments": [
            "-nunittest-asserts-${mode}-${system}",
            "pkg/pkg/(?!(analyzer*|analysis_server|compiler|js_runtime|front_end|kernel|nnbd_migration)/)"
          ]
        },
        {
          "name": "third_party tested packages",
          "arguments": [
            "-nunittest-asserts-${mode}-${system}",
            "dart_style",
            "package_config"
          ]
        },
        {
          "name": "pub integration tests",
          "script": "tools/bots/pub_integration_test.py",
          "arguments": [
            "--mode=release"
          ]
        },
        {
          "name": "analyze tools/",
          "script": "out/ReleaseX64/dart-sdk/bin/dart",
          "arguments": [
            "analyze",
            "--suppress-analytics",
            "--fatal-infos",
            "tools"
          ]
        }
      ]
    },
    {
      "builders": [
        "pkg-mac-release-arm64"
      ],
      "meta": {
        "description": "This configuration is used by the macOS arm64 pkg builders."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk",
            "dartdevc_test"
          ]
        },
        {
          "name": "package unit tests",
          "arguments": [
            "-nunittest-asserts-${mode}-${system}-arm64",
            "pkg/pkg/(?!(analyzer*|analysis_server|compiler|js_runtime|front_end|kernel|nnbd_migration)/)"
          ]
        },
        {
          "name": "third_party tested packages",
          "arguments": [
            "-nunittest-asserts-${mode}-${system}-arm64",
            "dart_style",
            "package_config"
          ]
        },
        {
          "name": "pub integration tests",
          "script": "tools/bots/pub_integration_test.py",
          "arguments": [
            "--mode=release",
            "--arch=arm64"
          ]
        }
      ]
    },
    {
      "builders": [
        "pkg-linux-debug"
      ],
      "meta": {
        "description": "This configuration is used by the debug pkg builders."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "create_sdk",
            "dartdevc_test"
          ]
        },
        {
          "name": "package unit tests",
          "arguments": [
            "-nunittest-asserts-${mode}-${system}",
            "pkg/pkg/(?!(analyzer*|analysis_server|compiler|js_runtime|front_end|kernel|nnbd_migration)/)"
          ]
        },
        {
          "name": "third_party tested packages",
          "arguments": [
            "-nunittest-asserts-${mode}-${system}",
            "dart_style",
            "package_config"
          ]
        },
        {
          "name": "pub integration tests",
          "script": "tools/bots/pub_integration_test.py",
          "arguments": [
            "--mode=debug"
          ]
        }
      ]
    },
    {
      "builders": [
        "benchmark-linux"
      ],
      "meta": {
        "description": "Verify benchmarks build and run correctly.",
        "owner": "sortie@google.com"
      },
      "steps": [
        {
          "name": "see this step for details on what this bot does",
          "script": "tools/bots/try_benchmarks.sh",
          "arguments": [
            "noop"
          ]
        },
        {
          "name": "remove out directory to do a clean linux-ia32 build",
          "script": "tools/bots/try_benchmarks.sh",
          "arguments": [
            "clean"
          ]
        },
        {
          "name": "build linux-ia32 for benchmarking",
          "script": "tools/build.py",
          "arguments": [
            "--mode=release",
            "--arch=ia32",
            "create_sdk",
            "runtime",
            "dart2js_platform.dill",
            "dart2js_platform_unsound.dill",
            "kernel-service.dart.snapshot"
          ]
        },
        {
          "name": "archive linux-ia32 for benchmarking",
          "script": "tools/bots/try_benchmarks.sh",
          "arguments": [
            "linux-ia32-archive"
          ]
        },
        {
          "name": "try linux-ia32 benchmarking",
          "script": "tools/bots/try_benchmarks.sh",
          "arguments": [
            "linux-ia32-benchmark"
          ]
        },
        {
          "name": "remove out directory to do a clean linux-x64 build",
          "script": "tools/bots/try_benchmarks.sh",
          "arguments": [
            "clean"
          ]
        },
        {
          "name": "build linux-x64 for benchmarking",
          "script": "tools/build.py",
          "arguments": [
            "--mode=release",
            "--arch=x64",
            "create_sdk",
            "runtime",
            "gen_snapshot",
            "dart_precompiled_runtime",
            "dart2js_platform.dill",
            "dart2js_platform_unsound.dill",
            "kernel-service.dart.snapshot",
            "dartdevc_test",
            "dart2wasm_benchmark"
          ]
        },
        {
          "name": "archive linux-x64 for benchmarking",
          "script": "tools/bots/try_benchmarks.sh",
          "arguments": [
            "linux-x64-archive"
          ]
        },
        {
          "name": "try linux-x64 benchmarking",
          "script": "tools/bots/try_benchmarks.sh",
          "arguments": [
            "linux-x64-benchmark"
          ]
        },
        {
          "name": "remove out directory",
          "script": "tools/bots/try_benchmarks.sh",
          "arguments": [
            "clean"
          ]
        }
      ]
    },
    {
      "builders": [
        "flutter-analyze"
      ],
      "meta": {
        "description": "This configuration is used for analyzing flutter."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "--mode=release",
            "--arch=x64",
            "create_sdk"
          ]
        },
        {
          "name": "analyze flutter/engine",
          "script": "tools/bots/flutter/analyze_flutter_engine.sh"
        },
        {
          "name": "analyze flutter/flutter",
          "script": "tools/bots/flutter/analyze_flutter_flutter.sh"
        },
        {
          "name": "analyze flutter/packages",
          "script": "tools/bots/flutter/analyze_flutter_packages.sh"
        },
        {
          "name": "analyze flutter/gallery",
          "script": "tools/bots/flutter/analyze_flutter_gallery.sh"
        }
      ]
    },
    {
      "builders": [
        "flutter-frontend"
      ],
      "meta": {
        "description": "This configuration is used for running frontend tests on flutter code."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "--mode=release",
            "--arch=x64",
            "create_sdk"
          ]
        },
        {
          "name": "compile flutter tests",
          "script": "tools/bots/flutter/compile_flutter.sh",
          "testRunner": true,
          "arguments": [
            "-nflutter-frontend"
          ]
        }
      ]
    },
    {
      "builders": [
        "frontend-weekly"
      ],
      "meta": {
        "description": "This configuration is used for running slow frontend tests for instance weekly."
      },
      "steps": [
        {
          "name": "build dart",
          "script": "tools/build.py",
          "arguments": [
            "--mode=release",
            "--arch=x64",
            "create_sdk"
          ]
        },
        {
          "name": "run tests",
          "script": "tools/bots/flutter/compile_flutter.sh",
          "arguments": [
            "--weeklyTest"
          ]
        }
      ]
    },
    {
      "builders": [
        "fuzz-linux"
      ],
      "meta": {
        "description": "This configuration is used for fuzz testing."
      },
      "steps": [
        {
          "name": "build dart (x64)",
          "script": "tools/build.py",
          "arguments": [
            "--mode=debug,release",
            "--arch=x64,x64c",
            "runtime",
            "dart_precompiled_runtime"
          ]
        },
        {
          "name": "build dart (arm64)",
          "script": "tools/build.py",
          "arguments": [
            "--mode=debug,release",
            "--arch=simarm64,simarm64c",
            "runtime",
            "dart_precompiled_runtime"
          ]
        },
        {
          "name": "build dart (riscv)",
          "script": "tools/build.py",
          "arguments": [
            "--mode=debug,release",
            "--arch=simriscv32,simriscv64",
            "runtime",
            "dart_precompiled_runtime"
          ]
        },
        {
          "name": "build dart (ia32)",
          "script": "tools/build.py",
          "arguments": [
            "--mode=debug,release",
            "--arch=ia32",
            "runtime"
          ]
        },
        {
          "name": "build dart (arm)",
          "script": "tools/build.py",
          "arguments": [
            "--mode=debug,release",
            "--arch=simarm",
            "runtime"
          ]
        },
        {
          "name": "make a fuzz",
          "script": "out/ReleaseX64/dart",
          "arguments": [
            "runtime/tools/dartfuzz/dartfuzz_test.dart",
            "--isolates",
            "8",
            "--no-show-stats",
            "--time",
            "2700"
          ],
          "shards": 100,
          "fileset": "fuzzer"
        }
      ]
    },
    {
      "builders": [
        "iso-stress-linux"
      ],
      "meta": {
        "description": "This configuration is used for isolate stress testing."
      },
      "steps": [
        {
          "name": "Build Dart VM - JIT and AOT",
          "script": "tools/build.py",
          "arguments": [
            "--mode=debug,release",
            "--arch=x64",
            "runtime",
            "dart_precompiled_runtime"
          ]
        },
        {
          "name": "Build Dart VM - JIT and AOT (Release TSAN)",
          "script": "tools/build.py",
          "arguments": [
            "--mode=release",
            "--arch=x64",
            "--sanitizer=tsan",
            "runtime",
            "dart_precompiled_runtime"
          ]
        },
        {
          "name": "Generate Isolate Stress Test",
          "script": "out/ReleaseX64/dart",
          "arguments": [
            "runtime/tests/concurrency/generate_stress_test.dart"
          ]
        },
        {
          "name": "Generate Isolate Stress Test - JIT Dill",
          "script": "out/ReleaseX64/dart",
          "arguments": [
            "pkg/vm/bin/gen_kernel.dart",
            "--platform=out/ReleaseX64/vm_platform_strong.dill",
            "--no-aot",
            "--no-sound-null-safety",
            "-o",
            "runtime/tests/concurrency/generated_stress_test.dart.jit.dill",
            "runtime/tests/concurrency/generated_stress_test.dart"
          ]
        },
        {
          "name": "Generate Isolate Stress Test - JIT Dill NNBD",
          "script": "out/ReleaseX64/dart",
          "arguments": [
            "pkg/vm/bin/gen_kernel.dart",
            "--platform=out/ReleaseX64/vm_platform_strong.dill",
            "--no-aot",
            "-o",
            "runtime/tests/concurrency/generated_stress_test_nnbd.dart.jit.dill",
            "runtime/tests/concurrency/generated_stress_test_nnbd.dart"
          ]
        },
        {
          "name": "Generate Isolate Stress Test - AOT Dill",
          "script": "out/ReleaseX64/dart",
          "arguments": [
            "pkg/vm/bin/gen_kernel.dart",
            "--platform=out/ReleaseX64/vm_platform_strong.dill",
            "--aot",
            "--no-sound-null-safety",
            "-o",
            "runtime/tests/concurrency/generated_stress_test.dart.aot.dill",
            "runtime/tests/concurrency/generated_stress_test.dart"
          ]
        },
        {
          "name": "Generate Isolate Stress Test - AOT Dill NNBD",
          "script": "out/ReleaseX64/dart",
          "arguments": [
            "pkg/vm/bin/gen_kernel.dart",
            "--platform=out/ReleaseX64/vm_platform_strong.dill",
            "--aot",
            "-o",
            "runtime/tests/concurrency/generated_stress_test_nnbd.dart.aot.dill",
            "runtime/tests/concurrency/generated_stress_test_nnbd.dart"
          ]
        },
        {
          "name": "Run Isolate Stress Tests",
          "script": "tools/run_with_coredumps_enabled.py",
          "arguments": [
            "out/ReleaseX64/dart",
            "runtime/tests/concurrency/run_stress_test_shards.dart",
            "--copy-coredumps"
          ],
          "shards": 10,
          "fileset": "vm-kernel"
        }
      ]
    },
    {
      "builders": [
        "vm-kernel-precomp-nnbd-linux-debug-simarm_x64",
        "vm-kernel-precomp-nnbd-linux-release-simarm_x64"
      ],
      "meta": {
        "description": "This configuration runs tests for the simarm_x64 architecture."
      },
      "steps": [
        {
          "name": "build dart for simarm_x64",
          "script": "tools/build.py",
          "arguments": [
            "gen_snapshot"
          ]
        },
        {
          "name": "build dart for simarm",
          "script": "tools/build.py",
          "arguments": [
            "--arch=simarm",
            "dart_precompiled_runtime",
            "vm_platform"
          ]
        },
        {
          "name": "vm tests",
          "arguments": [
            "-ndartkp-strong-${system}-${mode}-simarm-crossword",
            "corelib",
            "ffi",
            "language",
            "lib",
            "samples",
            "standalone",
            "utils",
            "vm"
          ],
          "fileset": "vm-kernel",
          "shards": 10
        }
      ]
    }
  ],
  "sanitizer_options": {
    "ASAN_OPTIONS": "abort_on_error=1:symbolize=1:disable_coredump=0:handle_segv=0:check_initialization_order=true:detect_leaks=1:detect_stack_use_after_return=0",
    "LSAN_OPTIONS": "abort_on_error=1:symbolize=1:disable_coredump=0:handle_segv=0:check_initialization_order=true:detect_leaks=1:detect_stack_use_after_return=0",
    "MSAN_OPTIONS": "abort_on_error=1:symbolize=1:disable_coredump=0:handle_segv=0:check_initialization_order=true:detect_leaks=1:detect_stack_use_after_return=0",
    "TSAN_OPTIONS": "abort_on_error=1:symbolize=1:disable_coredump=0:handle_segv=0:report_thread_leaks=0",
    "UBSAN_OPTIONS": "halt_on_error=1:symbolize=1:disable_coredump=0:handle_segv=0:print_stacktrace=1"
  },
  "sanitizer_symbolizer": {
    "linux": "buildtools/linux-x64/clang/bin/llvm-symbolizer",
    "macos": "buildtools/mac-x64/clang/bin/llvm-symbolizer",
    "windows": "buildtools/win-x64/clang/bin/llvm-symbolizer.exe"
  }
}
