name: Third party deps scan

on:
  # Only the default branch is supported.
  branch_protection_rule:
  push:
    branches: [ main ]
  pull_request:
    types: [ labeled ]

# Declare default permissions as read only.
permissions: read-all

jobs:
  extract-deps:
    name: Extract dependencies
    runs-on: 'ubuntu-24.04'
    if: ${{ (github.repository == 'dart-lang/sdk' && github.event_name == 'push') || github.event.label.name == 'vulnerability scan' }}
    permissions:
      # Needed to upload the SARIF results to the code-scanning dashboard.
      security-events: write
      contents: read
    steps:
      - name: "Checkout code"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          persist-credentials: false
      - name: "Set up python"
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        with:
          python-version: '3.13.3' # Install the python version needed.
      - name: "Extract deps, find commit hash, pass to osv-scanner"
        run: python .github/extract_deps.py --output osv-lockfile-${{github.sha}}.json
      - name: "Upload osv-scanner deps"
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4
        with:
          # Use github.ref in name to avoid duplicated artifacts.
          name: osv-lockfile-${{github.sha}}
          path: osv-lockfile-${{github.sha}}.json
          retention-days: 2
  vuln-scan:
    name: Vulnerability scanning
    needs:
      extract-deps
    uses: "google/osv-scanner-action/.github/workflows/osv-scanner-reusable.yml@main"
    with:
      # Download the artifact uploaded in the extract-deps step.
      download-artifact: osv-lockfile-${{github.sha}}
      scan-args: |-
        --lockfile=osv-scanner:osv-lockfile-${{github.sha}}.json
      fail-on-vuln: false
    # Makes sure the osv-formatted vulns are uploaded.
    permissions:
      # Needed to upload the SARIF results to the code-scanning dashboard.
      security-events: write
      contents: read
