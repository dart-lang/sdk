# Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

# Issue 28198
cc/IsolateReload_PendingUnqualifiedCall_InstanceToStatic: SkipSlow
cc/IsolateReload_PendingUnqualifiedCall_StaticToInstance: SkipSlow
cc/IsolateReload_PendingConstructorCall_AbstractToConcrete: SkipSlow
cc/IsolateReload_PendingConstructorCall_ConcreteToAbstract: SkipSlow
cc/IsolateReload_PendingStaticCall_DefinedToNSM: SkipSlow
cc/IsolateReload_PendingStaticCall_NSMToDefined: SkipSlow

# These tests are expected to crash on all platforms.
cc/ArrayNew_Overflow_Crash: SkipSlow
cc/AllocGeneric_Overflow: SkipSlow
cc/CodeImmutability: Crash
cc/Fail0: Fail
cc/Fail1: Fail
cc/Fail2: Fail

cc/Dart2JSCompileAll: Fail, Crash # Issue 27369
cc/Dart2JSCompilerStats: Fail, Crash # Issue 27369

cc/SNPrint_BadArgs: Skip

cc/Profiler_InliningIntervalBoundry: Skip # Differences in ia32, debug, release

# Flaky on buildbot. Issue 5133 and 10409.
cc/Sleep: Skip # Flaky

dart/data_uri_import_test/none: SkipByDesign

[ $mode == debug ]
# This is a benchmark that is not informative in debug mode.
cc/CorelibIsolateStartup: Skip
# Negative tests of VerifiedMemory should crash iff in DEBUG mode.
# TODO(koda): Improve support for negative tests.
cc/VerifyImplicit_Crash: Crash
cc/VerifyExplicit_Crash: Crash
# It can take some time for all the isolates to shutdown in a Debug build.
dart/spawn_shutdown_test: Pass, Slow  # VM Shutdown test

# The following section refers to the dart vm tests which live under
# runtime/tests/vm/dart.
[ $system == windows ]
cc/Dart2JSCompileAll: Skip
cc/ExternalizeConstantStrings: Skip
cc/Service_Profile: Skip
cc/Dart2JSCompilerStats: Skip
cc/CorelibCompilerStats: Skip

[ $system == fuchsia ]
# OOM crash can bring down the OS.
dart/spawn_shutdown_test: Skip
cc/CorelibIsolateStartup: Skip
# TODO(zra): package:unittest is not in the image.
dart/data_uri_spawn_test: Skip
# ../../dart/runtime/bin/file_test.cc: 34: error: expected: !file->WriteByte(1)
cc/Read: Fail  # TODO(zra): Investigate
# Assumes initial thread's stack is the same size as spawned thread stacks.
cc/StackOverflowStackTraceInfo: Crash
# TODO(zra): Investigate
dart/byte_array_test: Crash
dart/byte_array_optimized_test: Crash

# Profiler is completely disabled in SIMDBC builds.
# On the simluator stack traces produced by the Profiler do not match
# up with the real Dart stack trace and hence we don't get correct
# symbol names.
[ $arch == simarm || $arch == simarmv6 || $arch == simarmv5te || $arch == simarm64 || $arch == simdbc  || $arch == simdbc64 ]
cc/Service_Profile: Skip
cc/Profiler_AllocationSampleTest: Skip
cc/Profiler_ArrayAllocation: Skip
cc/Profiler_BasicSourcePosition: Skip
cc/Profiler_BasicSourcePositionOptimized: Skip
cc/Profiler_BinaryOperatorSourcePosition: Skip
cc/Profiler_BinaryOperatorSourcePositionOptimized: Skip
cc/Profiler_ChainedSamples: Skip
cc/Profiler_ClosureAllocation: Skip
cc/Profiler_CodeTicks: Skip
cc/Profiler_ContextAllocation: Skip
cc/Profiler_FunctionInline: Skip
cc/Profiler_FunctionTicks: Skip
cc/Profiler_InliningIntervalBoundry: Skip
cc/Profiler_IntrinsicAllocation: Skip
cc/Profiler_SampleBufferIterateTest: Skip
cc/Profiler_SampleBufferWrapTest: Skip
cc/Profiler_SourcePosition: Skip
cc/Profiler_SourcePositionOptimized: Skip
cc/Profiler_StringAllocation: Skip
cc/Profiler_StringInterpolation: Skip
cc/Profiler_ToggleRecordAllocation: Skip
cc/Profiler_TrivialRecordAllocation: Skip
cc/Profiler_TypedArrayAllocation: Skip
cc/Profiler_GetSourceReport: Skip

# Following tests are failing in a weird way on macos/ia32/debug builds
# need to investigate.
[ $runtime == vm && $mode == debug && $arch == ia32 && $system == macos ]
cc/Profiler_TrivialRecordAllocation: Skip
cc/Profiler_ToggleRecordAllocation: Skip
cc/Profiler_FunctionTicks: Skip
cc/Profiler_CodeTicks: Skip
cc/Profiler_IntrinsicAllocation: Skip
cc/Profiler_ArrayAllocation: Skip
cc/Profiler_ContextAllocation: Skip
cc/Profiler_ClosureAllocation: Skip
cc/Profiler_TypedArrayAllocation: Skip
cc/Profiler_StringAllocation: Skip
cc/Profiler_StringInterpolation: Skip
cc/Profiler_BasicSourcePosition: Skip
cc/Profiler_BasicSourcePositionOptimized: Skip
cc/Profiler_ChainedSamples: Skip
cc/Profiler_FunctionInline: Skip
cc/Profiler_SourcePosition: Skip
cc/Profiler_SourcePositionOptimized: Skip
cc/Profiler_BinaryOperatorSourcePosition: Skip
cc/Profiler_BinaryOperatorSourcePositionOptimized: Skip

[ $compiler == none && ($runtime == dartium || $runtime == drt)]
dart/truncating_ints_test: Skip # Issue 14651

[ $compiler == dart2js ]
dart/redirection_type_shuffling_test: Skip # Depends on lazy enforcement of type bounds
dart/byte_array_test: Skip # compilers not aware of byte arrays
dart/byte_array_optimized_test: Skip # compilers not aware of byte arrays
dart/simd128float32_array_test: Skip # compilers not aware of Simd128
dart/simd128float32_test: Skip # compilers not aware of Simd128
dart/truncating_ints_test: Skip # dart2js doesn't know about --limit-ints-to-64-bits

[ $compiler == dart2js ]
# The source positions do not match with dart2js.
dart/optimized_stacktrace_line_test: RuntimeError
dart/optimized_stacktrace_line_and_column_test: RuntimeError

# Methods can be missing in dart2js stack traces due to inlining.  Also when
# minifying they can be renamed, which is issue 7953.
dart/inline_stack_frame_test: Skip # Issue 7953

[ $compiler == dart2js || $compiler == dart2analyzer ]
# Data uri's not supported by dart2js or the analyzer.
dart/data_uri*test: Skip

[ $compiler == dart2analyzer ]
dart/optimized_stacktrace_line_test: StaticWarning
dart/optimized_stacktrace_line_and_column_test: StaticWarning

[ $compiler == dart2analyzer && $builder_tag == strong ]
*: Skip # Issue 28649

[ $compiler == app_jit ]
dart/snapshot_version_test: Fail,OK # Expects to find script snapshot relative to Dart source.

[ $runtime != vm ]
dart/snapshot_version_test: SkipByDesign  # Spawns processes
dart/spawn_infinite_loop_test: Skip  # VM shutdown test
dart/spawn_shutdown_test: Skip  # VM Shutdown test
dart/hello_fuchsia_test: SkipByDesign # This is a test for fuchsia OS

[ ($runtime == vm || $runtime == dart_precompiled) && $mode == debug && $builder_tag == asan ]
cc/Dart2JSCompileAll: SkipSlow  # Timeout.

[ $builder_tag == asan ]
cc/CodeImmutability: Fail,OK # Address Sanitizer turns a crash into a failure.
cc/IsolateReload_DanglingGetter_Class: Fail # Issue 28349
cc/IsolateReload_DanglingGetter_Instance: Fail # Issue 28349
cc/IsolateReload_DanglingGetter_Library: Fail # Issue 28349
cc/IsolateReload_DanglingSetter_Class: Fail # Issue 28349
cc/IsolateReload_DanglingSetter_Instance: Fail # Issue 28349
cc/IsolateReload_DanglingSetter_Library: Fail # Issue 28349
cc/IsolateReload_LiveStack: Fail # Issue 28349
cc/IsolateReload_PendingSuperCall: Fail # Issue 28349
cc/IsolateReload_SmiFastPathStubs: Fail # Issue 28349
cc/IsolateReload_TearOff_AddArguments2: Fail # Issue 28349
cc/IsolateReload_TearOff_AddArguments: Fail # Issue 28349
cc/IsolateReload_TearOff_Class_Identity: Fail # Issue 28349
cc/IsolateReload_TearOff_Instance_Equality: Fail # Issue 28349
cc/IsolateReload_TearOff_Library_Identity: Fail # Issue 28349
cc/IsolateReload_TearOff_List_Set: Fail # Issue 28349
cc/IsolateReload_TypeIdentity: Fail # Issue 28349
cc/IsolateReload_TypeIdentityGeneric: Fail # Issue 28349
cc/IsolateReload_TypeIdentityParameter: Fail # Issue 28349

[ $compiler == precompiler ]
dart/byte_array_test: Skip # Incompatible flag --disable_alloc_stubs_after_gc

[ $compiler == precompiler || $mode == product ]
dart/redirection_type_shuffling_test: SkipByDesign # Imports dart:mirrors
cc/CreateMirrorSystem: SkipByDesign # Imports dart:mirrors
cc/CoreSnapshotSize: SkipByDesign # Imports dart:mirrors
cc/StandaloneSnapshotSize: SkipByDesign # Imports dart:mirrors

[ $compiler == app_jit ]
dart/optimized_stacktrace_line_and_column_test: RuntimeError,OK # app-jit lacks column information

[ $runtime == dart_precompiled ]
dart/optimized_stacktrace_line_and_column_test: RuntimeError,OK # AOT lacks column information
dart/data_uri_spawn_test: SkipByDesign # Isolate.spawnUri

[ $runtime == vm && $mode == product ]
cc/IsolateSetCheckedMode: Fail,OK  # Checked mode disabled in product mode.

[ $arch == simdbc  || $arch == simdbc64 ]
# TODO(vegorov) These tests don't seem to work if FLAG_interpret_irregexp
# is switched on by default because they attempt to call regexp functions
# directly instead of going through JSSyntaxRegExp_ExecuteMatch.
cc/RegExp_ExternalOneByteString: Skip
cc/RegExp_ExternalTwoByteString: Skip
cc/RegExp_OneByteString: Skip
cc/RegExp_TwoByteString: Skip

# TODO(vegorov) Field guards are disabled for SIMDBC
cc/GuardFieldConstructor2Test: Skip
cc/GuardFieldConstructorTest: Skip
cc/GuardFieldFinalListTest: Skip
cc/GuardFieldFinalVariableLengthListTest: Skip
cc/GuardFieldSimpleTest: Skip

# This test is meaningless for DBC as allocation stubs are not used.
cc/RegenerateAllocStubs: Skip

[ $arch == simdbc64 && $mode == release ]
cc/UseDartApi: Skip # Issue 28499

[ $hot_reload || $hot_reload_rollback ]
dart/spawn_shutdown_test: Skip # We can shutdown an isolate before it reloads.
dart/spawn_infinite_loop_test: Skip # We can shutdown an isolate before it reloads.

[ ($compiler == dartkp) && ($runtime == vm || $runtime == dart_precompiled) && ! $checked ]
dart/redirection_type_shuffling_test/00: RuntimeError # Issue 29201

[ ($compiler == dartkp) && ($runtime == vm || $runtime == dart_precompiled) ]
dart/byte_array_optimized_test: RuntimeError
dart/byte_array_test: RuntimeError
dart/data_uri_import_test/base64: CompileTimeError
dart/data_uri_import_test/nocharset: CompileTimeError
dart/data_uri_import_test/nomime: CompileTimeError
dart/data_uri_import_test/percentencoded: CompileTimeError
dart/data_uri_import_test/wrongmime: CompileTimeError
dart/data_uri_spawn_test: RuntimeError
dart/double_materialize_test: RuntimeError
dart/double_to_smi_test: RuntimeError
dart/error_stacktrace_test: RuntimeError
dart/inline_stack_frame_test: RuntimeError
dart/optimized_stacktrace_line_test: RuntimeError
dart/redirection_type_shuffling_test/none: RuntimeError # Issue 29201
dart/regress29620_test: RuntimeError
dart/spawn_shutdown_test: SkipSlow

[ ($compiler == dartk) && ($runtime == vm) ]
cc/CanonicalizationInScriptSnapshots: Fail
cc/ClassHierarchyAnalysis: Crash
cc/Class_ComputeEndTokenPos: Crash
cc/CurrentStackTraceInfo: Fail
cc/CustomIsolates: Crash
cc/DartGeneratedArrayLiteralMessages: Crash
cc/DartGeneratedArrayLiteralMessagesWithBackref: Crash
cc/DartGeneratedListMessages: Crash
cc/DartGeneratedListMessagesWithBackref: Crash
cc/DartGeneratedListMessagesWithTypedData: Crash
cc/DartGeneratedMessages: Crash
cc/Dart_LoadLibraryPatch_Error1: Fail
cc/Dart_LoadLibraryPatch_Error2: Fail
cc/Dart_LoadLibraryPatch_Error3: Fail
cc/Dart_PropagateError: Fail
cc/Debug_EvaluateExpr: Fail
cc/Debug_EvaluateInActivationOfEvaluate: Fail
cc/Debug_GetClosureInfo: Fail
cc/Debug_InterruptIsolate: SkipSlow
cc/Debug_IsolateID: Fail
cc/Debug_ListSuperType: Fail
cc/Debug_ScriptGetTokenInfo_Basic: Fail
cc/Debug_ScriptGetTokenInfo_MultiLineInterpolation: Fail
cc/Debugger_PrintBreakpointsToJSONArray: Fail
cc/Debugger_Rewind_Optimized: SkipSlow
cc/Debugger_SetBreakpointInFunctionLiteralFieldInitializers: Crash
cc/Debugger_SetBreakpointInPartOfLibrary: Crash
cc/ErrorHandleBasics: Fail
cc/EvalExpression: Crash
cc/ExternalUint8ClampedArrayAccess: Fail
cc/ExternalizeConstantStrings: Fail
cc/FieldAccess: Crash
cc/Float32x4List: Crash
cc/FrameLookup: Fail
cc/FullSnapshot1: Crash
cc/FullSnapshot: Crash
cc/FunctionSourceFingerprint: Crash
cc/FunctionWithBreakpointNotInlined: Crash
cc/GetField_CheckIsolate: Fail
cc/GetFunctionNames: Crash
cc/GetNativeArgumentCount: Fail
cc/GetNativeArguments: Fail
cc/GetStaticField_RunsInitializer: Fail
cc/GetType: Fail
cc/ImplicitNativeFieldAccess: Fail
cc/ImportLibrary2: Crash
cc/ImportLibrary3: Crash
cc/ImportLibrary4: Crash
cc/ImportLibrary5: Crash
cc/ImportLibraryWithPrefix: Crash
cc/InjectNativeFieldsSuperClass: Fail
cc/InstanceOf: Fail
cc/InvokeClosure: Fail
cc/InvokeNoSuchMethod: Fail
cc/Invoke_CrossLibrary:  Crash
cc/Invoke_FunnyArgs: Crash
cc/Invoke_PrivateStatic: Fail
cc/IsFuture: Fail
cc/IsolateReload_BadClass: Fail
cc/IsolateReload_ChangeInstanceFormat0: Fail
cc/IsolateReload_ChangeInstanceFormat1: Fail
cc/IsolateReload_ChangeInstanceFormat3: Fail
cc/IsolateReload_ChangeInstanceFormat4: Fail
cc/IsolateReload_ChangeInstanceFormat5: Fail
cc/IsolateReload_ChangeInstanceFormat6: Fail
cc/IsolateReload_ChangeInstanceFormat7: Crash
cc/IsolateReload_ChangeInstanceFormat8: Fail
cc/IsolateReload_ComplexInheritanceChange: Fail
cc/IsolateReload_ConstantIdentical: Fail
cc/IsolateReload_ConstructorChanged: Fail
cc/IsolateReload_DanglingGetter_Class: Fail
cc/IsolateReload_DanglingGetter_Instance: Fail
cc/IsolateReload_DanglingGetter_Library: Fail
cc/IsolateReload_DanglingSetter_Class: Fail
cc/IsolateReload_DanglingSetter_Instance: Fail
cc/IsolateReload_DanglingSetter_Library: Fail
cc/IsolateReload_DirectSubclasses_Failure: Fail
cc/IsolateReload_DirectSubclasses_Success: Fail
cc/IsolateReload_EnumDelete: Fail
cc/IsolateReload_EnumEquality: Fail
cc/IsolateReload_EnumIdentical: Fail
cc/IsolateReload_EnumIdentityReload: Fail
cc/IsolateReload_EnumReorderIdentical: Fail
cc/IsolateReload_EnumToNotEnum: Fail
cc/IsolateReload_ExportedLibModified: Crash
cc/IsolateReload_ImplicitConstructorChanged: Fail
cc/IsolateReload_ImportedLibModified: Crash
cc/IsolateReload_ImportedMixinFunction: Crash
cc/IsolateReload_LibraryDebuggable: Fail
cc/IsolateReload_LibraryHide: Crash
cc/IsolateReload_LibraryLookup: Fail
cc/IsolateReload_LibraryShow: Crash
cc/IsolateReload_LiveStack: Fail
cc/IsolateReload_MainLibModified: Crash
cc/IsolateReload_MixinChanged: Fail
cc/IsolateReload_NoLibsModified: Crash
cc/IsolateReload_NotEnumToEnum: Fail
cc/IsolateReload_NotTypedefToTypedef: Fail
cc/IsolateReload_PendingSuperCall: Fail
cc/IsolateReload_PrefixImportedLibModified: Crash
cc/IsolateReload_RunNewFieldInitialiazersSuperClass: Fail
cc/IsolateReload_RunNewFieldInitializers: Fail
cc/IsolateReload_RunNewFieldInitializersMutateStaticField: Fail
cc/IsolateReload_RunNewFieldInitializersReferenceStaticField: Fail
cc/IsolateReload_RunNewFieldInitializersSyntaxError3: Fail
cc/IsolateReload_RunNewFieldInitializersThrows: Fail
cc/IsolateReload_SavedClosure: Fail
cc/IsolateReload_ShapeChangeRetainsHash: Fail
cc/IsolateReload_SmiFastPathStubs: Fail
cc/IsolateReload_StaticTearOffRetainsHash: Fail
cc/IsolateReload_StaticValuePreserved: Fail
cc/IsolateReload_TearOff_AddArguments2: Fail
cc/IsolateReload_TearOff_AddArguments: Fail
cc/IsolateReload_TearOff_Class_Identity: Fail
cc/IsolateReload_TearOff_Instance_Equality: Fail
cc/IsolateReload_TearOff_Library_Identity: Fail
cc/IsolateReload_TearOff_List_Set: Fail
cc/IsolateReload_TopLevelParseError: Fail
cc/IsolateReload_TypeIdentity: Fail
cc/IsolateReload_TypeIdentityGeneric: Fail
cc/IsolateReload_TypeIdentityParameter: Fail
cc/IsolateReload_TypedefAddParameter: Fail
cc/IsolateReload_TypedefToNotTypedef: Fail
cc/IsolateShutdownRunDartCode: Skip # Flaky
cc/IsolateSpawn: Crash
cc/JSON_JSONStream_DartString: Crash
cc/LazyLoadDeoptimizes: Crash
cc/LibraryGetClassNames: Crash
cc/LibraryId: Crash
cc/LibraryImportLibrary: Crash
cc/LibraryName: Crash
cc/LibraryUrl: Crash
cc/LinkedHashMap: Crash
cc/LinkedHashMap_iteration: Crash
cc/ListAccess: Crash
cc/LoadPatch: Crash
cc/LoadPatchSignatureMismatch: Crash
cc/LoadSource: Crash
cc/LoadLibrary: Crash
cc/LoadLibrary_CompileError: Crash
cc/LoadSource_LateLoad: Crash
cc/LookupLibrary: Crash
cc/MalformedStringToUTF8: Crash
cc/MapAccess: Crash
cc/NativeFieldAccess: Fail
cc/NativePortPostInteger: Fail
cc/NativePortReceiveInteger: Fail
cc/NativePortReceiveNull: Fail
cc/NegativeNativeFieldAccess: Fail
cc/NegativeNativeFieldInIsolateMessage: Crash
cc/New: Fail
cc/NewNativePort: Fail
cc/NumberValues: Fail
cc/ParsePatchLibrary: Crash
cc/Parser_AllocateVariables_CaptureLoopVar: Fail
cc/Parser_AllocateVariables_CapturedVar: Fail
cc/Parser_AllocateVariables_Issue7681: Fail
cc/Parser_AllocateVariables_MiddleChain: Fail
cc/Parser_AllocateVariables_NestedCapturedVar: Fail
cc/Parser_AllocateVariables_TwoChains: Fail
cc/Profiler_GetSourceReport: Fail
cc/ScriptSnapshot1: Fail
cc/ScriptSnapshot2: Crash
cc/ScriptSnapshot: Crash
cc/ScriptSnapshotsUpdateSubclasses: Crash # Issue 29850
cc/SetField_CheckIsolate: Fail
cc/SetField_FunnyValue: Fail
cc/SourcePosition_Async: Crash
cc/SourcePosition_BitwiseOperations: Crash
cc/SourcePosition_ForLoop: Crash
cc/SourcePosition_If: Crash
cc/SourcePosition_IfElse: Crash
cc/SourcePosition_InstanceCalls: Crash
cc/SourcePosition_InstanceFields: Crash
cc/SourcePosition_LoadIndexed: Crash
cc/SourcePosition_StoreIndexed: Crash
cc/SourcePosition_Switch: Crash
cc/SourcePosition_TryCatchFinally: Crash
cc/SourcePosition_While: Crash
cc/SourcePosition_WhileContinueBreak: Crash
cc/SourceReport_CallSites_PolymorphicCall: Fail
cc/SourceReport_CallSites_SimpleCall: Fail
cc/SourceReport_Coverage_AllFunctions: Fail
cc/SourceReport_Coverage_AllFunctions_ForceCompile: Fail
cc/SourceReport_Coverage_ForceCompile: Fail
cc/SourceReport_Coverage_NestedFunctions: Fail
cc/SourceReport_Coverage_NoCalls: Fail
cc/SourceReport_Coverage_RestrictedRange: Fail
cc/SourceReport_Coverage_SimpleCall: Fail
cc/SourceReport_Coverage_UnusedClass_ForceCompile: Fail
cc/SourceReport_Coverage_UnusedClass_ForceCompileError: Crash
cc/SourceReport_Coverage_UnusedClass_NoForceCompile: Fail
cc/SourceReport_MultipleReports: Fail
cc/SourceReport_PossibleBreakpoints_Simple: Fail
cc/StackMapGC: Crash
cc/StackOverflowStackTraceInfo: Crash
cc/StackTraceFormat: Fail
cc/StackTraceInfo: Crash
cc/StringFromExternalTypedData: Fail
cc/TestNativeFieldsAccess: Fail
cc/ThrowException: Fail
cc/TypeGetNonParamtericTypes: Fail
cc/TypeGetParameterizedTypes: Fail
cc/UnhandledExceptions: Fail
cc/UseDartApi: Fail
cc/ValidateNoSuchMethodStackFrameIteration: Fail
cc/ValidateStackFrameIteration: Fail
dart/data_uri_import_test/base64: CompileTimeError
dart/data_uri_import_test/nocharset: CompileTimeError
dart/data_uri_import_test/nomime: CompileTimeError
dart/data_uri_import_test/percentencoded: Fail
dart/data_uri_import_test/wrongmime: CompileTimeError
dart/data_uri_spawn_test: RuntimeError
dart/redirection_type_shuffling_test/00: Crash
dart/redirection_type_shuffling_test/none: Crash
dart/spawn_shutdown_test: SkipSlow

[ ($compiler == dartk) && ($runtime == vm) && ($mode == release) ]
cc/Debug_BreakpointStubPatching: Fail
cc/Debug_InspectObject: Fail
cc/Debug_InspectStackWithClosure_NotOptimized: Fail
cc/Debug_InspectStackWithClosure_Optimized: Fail
cc/Debug_InspectStack_NotOptimized: Fail
cc/Debug_InspectStack_Optimized: Fail
cc/DeepStackTraceInfo: Fail
cc/HashCode: Fail
cc/InjectNativeFields1: Fail
cc/InjectNativeFields3: Fail
cc/Invoke: Fail
cc/LargeMap: Fail
cc/Profiler_ArrayAllocation: Fail
cc/Profiler_ClosureAllocation: Fail
cc/Profiler_ContextAllocation: Fail
cc/Profiler_IntrinsicAllocation: Fail
cc/Profiler_StringAllocation: Fail
cc/Profiler_StringInterpolation: Fail
cc/Profiler_TypedArrayAllocation: Fail
cc/Service_TokenStream: Fail

[ ($compiler == dartk) && ($runtime == vm) && ($mode == debug) ]
cc/Debug_BreakpointStubPatching: Fail
cc/Debug_InspectObject: Crash
cc/Debug_InspectStackWithClosure_NotOptimized: Crash
cc/Debug_InspectStackWithClosure_Optimized: Crash
cc/Debug_InspectStack_NotOptimized: Crash
cc/Debug_InspectStack_Optimized: Crash
cc/DeepStackTraceInfo: Crash
cc/HashCode: Crash
cc/InjectNativeFields1: Crash
cc/InjectNativeFields3: Crash
cc/Invoke: Crash
cc/LargeMap: Crash
cc/Profiler_ArrayAllocation: Crash
cc/Profiler_ClosureAllocation: Crash
cc/Profiler_ContextAllocation: Crash
cc/Profiler_IntrinsicAllocation: Crash
cc/Profiler_StringAllocation: Crash
cc/Profiler_StringInterpolation: Crash
cc/Profiler_TypedArrayAllocation: Crash
cc/Service_TokenStream: Crash

[ ($compiler == dartk) && ($runtime == vm) && ($system == macos) ]
cc/DeepStackTraceInfo: Crash
cc/Invoke_FunnyArgs: Fail
cc/Invoke_PrivateStatic: Crash
cc/IsolateReload_ComplexInheritanceChange: Crash
cc/IsolateReload_DanglingGetter_Class: Crash
cc/IsolateReload_DanglingGetter_Instance: Crash
cc/IsolateReload_DanglingGetter_Library: Crash
cc/IsolateReload_DanglingSetter_Class: Crash
cc/IsolateReload_DanglingSetter_Instance: Crash
cc/IsolateReload_DanglingSetter_Library: Crash
cc/IsolateReload_EnumDelete: Crash
cc/IsolateReload_EnumIdentityReload: Crash
cc/IsolateReload_LibraryLookup: Crash
cc/IsolateReload_RunNewFieldInitialiazersSuperClass: Crash
cc/IsolateReload_RunNewFieldInitializersThrows: Crash
cc/IsolateReload_SavedClosure: Crash
cc/IsolateReload_TearOff_AddArguments2: Crash
cc/IsolateReload_TearOff_AddArguments: Crash
cc/IsolateReload_TearOff_Class_Identity: Crash
cc/IsolateReload_TearOff_Instance_Equality: Crash
cc/IsolateReload_TearOff_Library_Identity: Crash
cc/IsolateReload_TearOff_List_Set: Crash
cc/IsolateReload_TypeIdentity: Crash
cc/IsolateReload_TypeIdentityGeneric: Crash
cc/IsolateReload_TypeIdentityParameter: Crash
cc/Parser_AllocateVariables_CaptureLoopVar: Crash
cc/Parser_AllocateVariables_Issue7681: Crash
cc/Parser_AllocateVariables_MiddleChain: Crash
cc/Parser_AllocateVariables_NestedCapturedVar: Crash
cc/Parser_AllocateVariables_TwoChains: Crash
